{"title":"事件处理程序的相关优化","uid":"5f8a523ee16501c6a364a90cb823f180","slug":"事件处理程序的相关优化","date":"2023-07-19T13:18:43.000Z","updated":"2023-07-19T14:00:36.933Z","comments":true,"path":"api/articles/事件处理程序的相关优化.json","keywords":null,"cover":[],"content":"<h1 id=\"shi-jian-liu-ji-zhi\">事件流机制</h1>\n<p>向水里扔一个西瓜，</p>\n<p>首先它会有一个下降的过程，这个过程可以理解为从最顶层元素向事件发生的具体元素（目标点）的捕获过程</p>\n<p>之后会产生泡泡，会在最低点（具体元素）之后漂浮到水面上，这个过程相当于事件冒泡</p>\n<p><img src=\"images/%E4%BA%8B%E4%BB%B6%E5%A4%84%E7%90%86%E7%A8%8B%E5%BA%8F%E7%9A%84%E7%9B%B8%E5%85%B3%E4%BC%98%E5%8C%96/90c6d0e2180f4ed28f1137c32b955995tplv-k3u1fbpfcp-zoom-in-crop-mark_1512_0_0_0-1689775169899-1.webp\" alt></p>\n<h1 id=\"shi-jian-chu-li-cheng-xu\">事件处理程序</h1>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>事件委托原理</p>\n<p>利用事件冒泡，只使用一个事件处理程序来管理一系列的类型事件</p>\n<p>也就是说给所有目标元素的共同祖先节点添加一个事件处理程序即可</p>\n<p><code>这样可以减少大量的内存消耗，提升性能</code></p>\n</li>\n<li class=\"lvl-2\">\n<p>性能解析</p>\n<p>页面中事件处理程序的数量与页面的整体性能直接相关</p>\n<p>每个函数都是对象，都占用内存空间，对象越多，性能越差</p>\n<p>事件处理程序所需访问的 <code>DOM</code> 次数会影响整个页面的就绪时间，导致页面响应缓慢</p>\n</li>\n<li class=\"lvl-2\">\n<p>事件对象</p>\n<pre class=\"line-numbers language-JS\" data-language=\"JS\"><code class=\"language-JS\">event.target  &#x2F;&#x2F; 触发事件的目标元素\nevent.currentTarget  &#x2F;&#x2F; 绑定事件的元素\nevent.stopPropagation()  &#x2F;&#x2F; 阻止事件冒泡\nevent.preventDefault()  &#x2F;&#x2F; 阻止元素的默认事件<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n</ul>\n<h1 id=\"hua-ru-hua-chu-shi-jian\">划入划出事件</h1>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>mouseover 和 mouseout</p>\n<p>在鼠标指针从父元素移动到子元素时，会先触发父元素的 <code>mouseout</code> 事件，再触发子元素的 <code>mouseover</code> 事件；在鼠标指针从子元素移回父元素时，会先触发子元素的 <code>mouseout</code> 事件，再触发父元素的 <code>mouseover</code> 事件。这种行为被称为事件冒泡或捕获机制。</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>box<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>button<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>按钮<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<pre class=\"line-numbers language-css\" data-language=\"css\"><code class=\"language-css\"><span class=\"token selector\">.box</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 200px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 80px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> #0f0<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> box <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#box'</span><span class=\"token punctuation\">)</span>\nbox<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'mouseover'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'移动到自身和其子元素身上都会触发事件'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li class=\"lvl-2\">\n<p>mouseenter 和 mouseleave</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">box<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'mouseenter'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'只移动到自身触发事件'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n</li>\n</ul>\n","text":"事件流机制 向水里扔一个西瓜， 首先它会有一个下降的过程，这个过程可以理解为从最顶层元素向事件发生的具体元素（目标点）的捕获过程 之后会产生泡泡，会在最低点（具体元素）之后漂浮到水面上，这个过程相当于事件冒泡 事件处理程序 事件委托原理 利用事件冒泡，只使用一个事件处理程序来管理...","link":"","photos":[],"count_time":{"symbolsCount":"1k","symbolsTime":"1 mins."},"categories":[{"name":"前端","slug":"前端","count":12,"path":"api/categories/前端.json"},{"name":"业务与性能优化","slug":"前端/业务与性能优化","count":10,"path":"api/categories/前端/业务与性能优化.json"}],"tags":[{"name":"业务与性能优化(前端)","slug":"业务与性能优化-前端","count":10,"path":"api/tags/业务与性能优化-前端.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#shi-jian-liu-ji-zhi\"><span class=\"toc-text\">事件流机制</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#shi-jian-chu-li-cheng-xu\"><span class=\"toc-text\">事件处理程序</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#hua-ru-hua-chu-shi-jian\"><span class=\"toc-text\">划入划出事件</span></a></li></ol>","author":{"name":"ND_LJQ","slug":"blog-author","avatar":"static/img/head.jpg","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"视频与推流","uid":"4ce09d3d170357da8e430d5390eb09ca","slug":"视频与推流","date":"2023-07-19T13:18:56.000Z","updated":"2023-07-19T13:24:48.326Z","comments":true,"path":"api/articles/视频与推流.json","keywords":null,"cover":[],"text":"Video标签 &lt;video> &lt;/video> &lt;!-- video 标签属性中的属性: src=\"\" :资源路径 controls : 在视频块中添加视频控件(暂停,倍速...) alt=\"\":用于SEO(Search Engine Optimization...","link":"","photos":[],"count_time":{"symbolsCount":"2.8k","symbolsTime":"3 mins."},"categories":[{"name":"前端","slug":"前端","count":12,"path":"api/categories/前端.json"},{"name":"业务与性能优化","slug":"前端/业务与性能优化","count":10,"path":"api/categories/前端/业务与性能优化.json"}],"tags":[{"name":"业务与性能优化(前端)","slug":"业务与性能优化-前端","count":10,"path":"api/tags/业务与性能优化-前端.json"}],"author":{"name":"ND_LJQ","slug":"blog-author","avatar":"static/img/head.jpg","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"上传文件校验","uid":"86764947a727ee084db201a1bc419262","slug":"上传文件校验","date":"2023-07-19T13:18:22.000Z","updated":"2023-07-19T13:56:23.563Z","comments":true,"path":"api/articles/上传文件校验.json","keywords":null,"cover":[],"text":"如果把任意的垃圾文件后缀名修改成允许上传的类型，不仅会造成程序崩溃，还有可能会浪费不必要的资源 这种恶意上传的操作，不仅带来安全隐患，还会造成不必要的性能开销 前置知识点 [[File&amp;Blob]] Blob 对象 Blob（Binary Large Object）二进制...","link":"","photos":[],"count_time":{"symbolsCount":"3.7k","symbolsTime":"3 mins."},"categories":[{"name":"前端","slug":"前端","count":12,"path":"api/categories/前端.json"},{"name":"业务与性能优化","slug":"前端/业务与性能优化","count":10,"path":"api/categories/前端/业务与性能优化.json"}],"tags":[{"name":"业务与性能优化(前端)","slug":"业务与性能优化-前端","count":10,"path":"api/tags/业务与性能优化-前端.json"}],"author":{"name":"ND_LJQ","slug":"blog-author","avatar":"static/img/head.jpg","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}