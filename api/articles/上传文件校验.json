{"title":"上传文件校验","uid":"86764947a727ee084db201a1bc419262","slug":"上传文件校验","date":"2023-07-19T13:18:22.000Z","updated":"2023-07-19T13:56:23.563Z","comments":true,"path":"api/articles/上传文件校验.json","keywords":null,"cover":[],"content":"<p>如果把任意的垃圾文件后缀名修改成允许上传的类型，不仅会造成程序崩溃，还有可能会浪费不必要的资源</p>\n<p>这种恶意上传的操作，不仅带来安全隐患，还会造成不必要的性能开销</p>\n<h1 id=\"qian-zhi-zhi-shi-dian\">前置知识点</h1>\n<p>[[File&amp;Blob]]</p>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>Blob 对象</p>\n<p>Blob（Binary Large Object）二进制类型的大对象，表示一个不可变、原始数据的类文件对象。可以通过 <code>slice()</code> 方法将它们分割成为非常小的数据块</p>\n<p><code>File</code> 接口基于 <code>Blob</code> 实现，继承了其功能并将其扩展，使其支持用户系统上的文件</p>\n</li>\n<li class=\"lvl-2\">\n<p>FileReader 对象</p>\n<p>主要用于将文件内容读入 <strong>内存</strong>，通过一系列 <strong>异步接口</strong> 读取本地文件内容并输出结果</p>\n<p><code>readAsArrayBuffer()</code> 按字节读取文件内容，结果用 ArrayBuffer 对象表示</p>\n<p><code>readAsText()</code> 按字节读取文件内容，结果用字符串表示</p>\n<p><code>readAsDataURL()</code> 读取文件内容，结果用 data:URL 格式的 Base64 字符串表示</p>\n</li>\n<li class=\"lvl-2\">\n<p>ArrayBuffer 对象</p>\n<p>表示通用的、固定长度的原始二进制数据缓冲区，它是一个 <code>二进制字节数组</code></p>\n</li>\n<li class=\"lvl-2\">\n<p>Uint8Array 数组类型</p>\n<p>表示一个 <code>8</code> 位无符号整型数组，创建时内容被初始化为 <code>0</code>。创建完后，可以以 <code>对象的方式或使用数组下标索引的方式</code> 引用数组中的元素</p>\n</li>\n</ul>\n<h1 id=\"qian-zhi-cha-jian-pei-zhi\">前置插件配置</h1>\n<ul class=\"lvl-0\">\n<li class=\"lvl-4\">\n<p>安装 VSCode 插件</p>\n</li>\n</ul>\n<p>在插件商店中搜索并安装 Hex Editor</p>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>使用插件查看文件的十六进制内容（以 jpg 文件为例）</p>\n<p><img src=\"images/%E4%B8%8A%E4%BC%A0%E6%96%87%E4%BB%B6%E6%A0%A1%E9%AA%8C/Snipaste_2023-05-08_09-06-57-1689774922523-1.png\" alt=\"\"></p>\n</li>\n</ul>\n<h1 id=\"chang-gui-lei-xing-xiao-yan\">常规类型校验</h1>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>使用 HTML 属性</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>file<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">accept</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>.mp4, .mov<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>file<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">accept</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>.png, .jpg, .jpeg, .gif<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>缺点：可通过浏览器控制台删除 <code>accept</code> 属性，绕过限制</p>\n</li>\n<li class=\"lvl-2\">\n<p>使用文件 MIME 类型</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> validFileType <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">assign</span><span class=\"token punctuation\">(</span>Object<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span>\n        video<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'video/mp4'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'video/quicktime'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n        image<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'image/png'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'image/jpeg'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'image/gif'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n</ul>\n<p>const validator = (type, files) =&gt;<br>\n        files<br>\n          .map((file) =&gt; ({<br>\n            filename: <a href=\"http://file.name\">file.name</a>,<br>\n            valid: validFileType[type].includes(file.type),<br>\n          }))<br>\n          .filter((f) =&gt; !f.valid);<br>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">    \n\n    缺点：可通过本地修改文件扩展名，绕过限制\n\n\n# 安全性类型校验\n\n- 核心思想\n\n  使用 &#96;slice()&#96; 方法截取文件头部数据，将其转换为 &#96;十六进制&#96; 字符串，然后进行逻辑判断\n\n- 配置文件类型映射策略\n\n  &#96;&#96;&#96;js\n  const typeMapping &#x3D; new Map([\n    [&#39;mp4&#39;, &#123; num: 4, hexs: [&#39;00 00 00 18&#39;, &#39;00 00 00 20&#39;, &#39;00 00 00 1C&#39;] &#125;],\n    [&#39;mov&#39;, &#123; num: 8, hexs: [&#39;00 00 00 14 66 74 79 70&#39;] &#125;],\n    [&#39;jpg&#39;, &#123; num: 3, hexs: [&#39;FF D8 FF&#39;] &#125;],\n    [&#39;png&#39;, &#123; num: 8, hexs: [&#39;89 50 4E 47 0D 0A 1A 0A&#39;] &#125;],\n    [&#39;gif&#39;, &#123; num: 4, hexs: [&#39;47 49 46 38&#39;] &#125;],\n    [&#39;pdf&#39;, &#123; num: 7, hexs: [&#39;25 50 44 46 2D 31 2E&#39;] &#125;],\n    [&#39;zip&#39;, &#123; num: 6, hexs: [&#39;50 4B 03 04 14 00&#39;] &#125;],\n    [&#39;excel&#39;, &#123; num: 4, hexs: [&#39;50 4B 03 04&#39;] &#125;],\n    [&#39;image&#39;, &#123; num: 8, hexs: [&#39;FF D8 FF&#39;, &#39;89 50 4E 47 0D 0A 1A 0A&#39;, &#39;47 49 46 38&#39;] &#125;],\n    [&#39;video&#39;, &#123; num: 8, hexs: [&#39;00 00 00 18&#39;, &#39;00 00 00 20&#39;, &#39;00 00 00 1C&#39;, &#39;00 00 00 14 66 74 79 70&#39;] &#125;]\n  ])<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></p>\n<p>使用 <code>num</code> 来配置提取文件头部数据的范围，提取起始处的索引从 <code>0</code> 开始</p>\n<p>使用 <code>hexs</code> 来配置提取范围对应的十六进制字符串，用于策略逻辑判断</p>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>根据文件类型读取映射策略</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">validFileType</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">type<span class=\"token punctuation\">,</span> file</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">&#123;</span> num<span class=\"token punctuation\">,</span> hexs <span class=\"token punctuation\">&#125;</span> <span class=\"token operator\">=</span> typeMapping<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>type<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">const</span> str <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">blobToString</span><span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>type <span class=\"token operator\">===</span> <span class=\"token string\">'image'</span> <span class=\"token operator\">||</span> type <span class=\"token operator\">===</span> <span class=\"token string\">'video'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> hexs<span class=\"token punctuation\">.</span><span class=\"token function\">some</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">hex</span> <span class=\"token operator\">=></span> str<span class=\"token punctuation\">.</span><span class=\"token function\">startsWith</span><span class=\"token punctuation\">(</span>hex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> str <span class=\"token operator\">===</span> hexs<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li class=\"lvl-2\">\n<p>文件的二进制数据转为十六进制字符串</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">/**\n* @param &#123;Blob&#125; blob 二进制文件数据\n* @return &#123;String&#125; 16进制字符串\n*/</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">blobToString</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">blob</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">const</span> buffer <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> blob<span class=\"token punctuation\">.</span><span class=\"token function\">arrayBuffer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">...</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Uint8Array</span><span class=\"token punctuation\">(</span>buffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n          <span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">n</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> n<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toUpperCase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">padStart</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n          <span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">' '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li class=\"lvl-2\">\n<p>文件类型校验</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token comment\">/**\n* @param &#123;String&#125; type 文件类型\n* @param &#123;Array&#125; files 文件对象\n* @return &#123;Array&#125; 文件类型校验不通过的文件列表\n*/</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">validator</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">type<span class=\"token punctuation\">,</span> files</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>\n        <span class=\"token punctuation\">(</span>\n          <span class=\"token keyword\">await</span> Promise<span class=\"token punctuation\">.</span><span class=\"token function\">all</span><span class=\"token punctuation\">(</span>\n            files<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">file</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n              <span class=\"token literal-property property\">filename</span><span class=\"token operator\">:</span> file<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span>\n              <span class=\"token literal-property property\">valid</span><span class=\"token operator\">:</span> <span class=\"token keyword\">await</span> <span class=\"token function\">validFileType</span><span class=\"token punctuation\">(</span>type<span class=\"token punctuation\">,</span> file<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n          <span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">f</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token operator\">!</span>f<span class=\"token punctuation\">.</span>valid<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>经测试，即便通过本地修改文件扩展名，文件也会被校验限制</p>\n</li>\n<li class=\"lvl-2\">\n<p>总结</p>\n<p>很多攻击方式都是把可执行文件的后缀名进行修改，然后上传到服务器进行攻击，可见文件类型校验的重要性</p>\n</li>\n</ul>\n","text":"如果把任意的垃圾文件后缀名修改成允许上传的类型，不仅会造成程序崩溃，还有可能会浪费不必要的资源 这种恶意上传的操作，不仅带来安全隐患，还会造成不必要的性能开销 前置知识点 [[File&amp;Blob]] Blob 对象 Blob（Binary Large Object）二进制...","link":"","photos":[],"count_time":{"symbolsCount":"3.7k","symbolsTime":"3 mins."},"categories":[{"name":"前端","slug":"前端","count":12,"path":"api/categories/前端.json"},{"name":"业务与性能优化","slug":"前端/业务与性能优化","count":10,"path":"api/categories/前端/业务与性能优化.json"}],"tags":[{"name":"业务与性能优化(前端)","slug":"业务与性能优化-前端","count":10,"path":"api/tags/业务与性能优化-前端.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#qian-zhi-zhi-shi-dian\"><span class=\"toc-text\">前置知识点</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#qian-zhi-cha-jian-pei-zhi\"><span class=\"toc-text\">前置插件配置</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#chang-gui-lei-xing-xiao-yan\"><span class=\"toc-text\">常规类型校验</span></a></li></ol>","author":{"name":"ND_LJQ","slug":"blog-author","avatar":"/svg/head.jpg","link":"/","description":"一位正在摆烂的大四渣滓😋 <br /> @ <b>劉三刀的摆烂生活</b>","socials":{"github":"https://github.com/ND-LJQ","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/qq_52475868?type=blog","juejin":"https://juejin.cn/user/2032336272362109","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/391491132?spm_id_from=333.1007.0.0"},"gitee":{"icon":"/svg/gitee-fill-round.svg","link":"https://gitee.com/liu-jq"}}}},"mapped":true,"prev_post":{"title":"事件处理程序的相关优化","uid":"5f8a523ee16501c6a364a90cb823f180","slug":"事件处理程序的相关优化","date":"2023-07-19T13:18:43.000Z","updated":"2023-07-19T14:00:36.933Z","comments":true,"path":"api/articles/事件处理程序的相关优化.json","keywords":null,"cover":[],"text":"事件流机制 向水里扔一个西瓜， 首先它会有一个下降的过程，这个过程可以理解为从最顶层元素向事件发生的具体元素（目标点）的捕获过程 之后会产生泡泡，会在最低点（具体元素）之后漂浮到水面上，这个过程相当于事件冒泡 事件处理程序 事件委托原理 利用事件冒泡，只使用一个事件处理程序来管理...","link":"","photos":[],"count_time":{"symbolsCount":"1k","symbolsTime":"1 mins."},"categories":[{"name":"前端","slug":"前端","count":12,"path":"api/categories/前端.json"},{"name":"业务与性能优化","slug":"前端/业务与性能优化","count":10,"path":"api/categories/前端/业务与性能优化.json"}],"tags":[{"name":"业务与性能优化(前端)","slug":"业务与性能优化-前端","count":10,"path":"api/tags/业务与性能优化-前端.json"}],"author":{"name":"ND_LJQ","slug":"blog-author","avatar":"/svg/head.jpg","link":"/","description":"一位正在摆烂的大四渣滓😋 <br /> @ <b>劉三刀的摆烂生活</b>","socials":{"github":"https://github.com/ND-LJQ","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/qq_52475868?type=blog","juejin":"https://juejin.cn/user/2032336272362109","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/391491132?spm_id_from=333.1007.0.0"},"gitee":{"icon":"/svg/gitee-fill-round.svg","link":"https://gitee.com/liu-jq"}}}}},"next_post":{"title":"防盗链以减少第三方使用","uid":"b8bc55f65f263c1da29bfad5ecf3ec77","slug":"防盗链以减少第三方使用","date":"2023-07-19T13:18:04.000Z","updated":"2023-07-19T14:07:43.810Z","comments":true,"path":"api/articles/防盗链以减少第三方使用.json","keywords":null,"cover":null,"text":"详解Referer Referer是什么 Referer 是请求头信息里的一个常见字段，它提供了访问来源的信息 当客户端向服务端发送请求时，都会携带 Referer 头字段，告知服务器该请求的来源，即 触发请求的页面链接 Referer存在的条件 1、点击页面中的超链接 2、通过...","link":"","photos":[],"count_time":{"symbolsCount":"1.4k","symbolsTime":"1 mins."},"categories":[{"name":"前端","slug":"前端","count":12,"path":"api/categories/前端.json"},{"name":"业务与性能优化","slug":"前端/业务与性能优化","count":10,"path":"api/categories/前端/业务与性能优化.json"}],"tags":[{"name":"业务与性能优化(前端)","slug":"业务与性能优化-前端","count":10,"path":"api/tags/业务与性能优化-前端.json"}],"author":{"name":"ND_LJQ","slug":"blog-author","avatar":"/svg/head.jpg","link":"/","description":"一位正在摆烂的大四渣滓😋 <br /> @ <b>劉三刀的摆烂生活</b>","socials":{"github":"https://github.com/ND-LJQ","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/qq_52475868?type=blog","juejin":"https://juejin.cn/user/2032336272362109","customs":{"bilibili":{"icon":"/svg/bilibili-fill.svg","link":"https://space.bilibili.com/391491132?spm_id_from=333.1007.0.0"},"gitee":{"icon":"/svg/gitee-fill-round.svg","link":"https://gitee.com/liu-jq"}}}}}}