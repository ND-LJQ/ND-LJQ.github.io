{"title":"Linux基本操作","uid":"241e4fb174a989083556866451d735d1","slug":"Linux基本操作","date":"2023-07-18T06:03:34.000Z","updated":"2023-07-18T06:44:37.266Z","comments":true,"path":"api/articles/Linux基本操作.json","keywords":null,"cover":[],"content":"<h1 id=\"linux-jian-jie\">Linux 简介</h1>\n<h2 id=\"linux-xi-tong-de-qi-yuan-yu-fa-zhan\">Linux 系统的起源与发展</h2>\n<p><strong>Linux 是一种免费使用和自由传播的类 UNIX 操作系统</strong>,是一个基于 POSIX 的多用户、多任务、支持多线程和多 CPU 的操作系统。它能运行主要的 Unix 工具软件、应用程序和网络协议。它支持 32 位和 64 位硬件。Linux 继承了 Unix 以网络为核心 的设计思想，是一个性能稳定的多用户网络操作系统。并且 Linux 是一款自由软件，可以完全免费自由地提供给用户使用。</p>\n<h2 id=\"linux-xi-tong-de-jie-shao\">Linux 系统的介绍</h2>\n<h3 id=\"linux-xi-tong-de-te-dian\">Linux 系统的特点</h3>\n<h4 id=\"ji-ben-si-xiang\">基本思想</h4>\n<p>① <strong>一切都是文件</strong> :系统中的所有都归结为一个文件，包括命令、硬件和软件设备、操作系统、进程 等等对于操作系统内核而言，都被视为拥有各自特性或类型的文件。</p>\n<p>② <strong>每个文件都有确定的用途</strong></p>\n<p><strong><mark>特点</mark></strong></p>\n<p>① <strong>开放系统</strong> : Linux 系统遵循[[计算机网络基础#<mark>OSI与TCP/IP模型</mark>|开放式系统互联通信参考模型（Open System Interconnection Reference Model，缩写为 OSI）]]</p>\n<p>② <strong>完全开源免费</strong></p>\n<p>③ <strong>多用户、多用户</strong> : 多用户是指系统资源可以被不同用户同各自拥有，即每个用户对自己的资源（文件、设备） 有特定的权限，并且互不影响。</p>\n<p>④ <strong>出色的稳定性和速度性能</strong> : Linux 可以连续运行很长时间而不需要重启（Linux 的主要使用场景是作为服务器，服务器是很 大重启或者关机的）</p>\n<p>⑥ <strong>安全可靠的系统</strong> : Linux 采取了许多安全技术措施，可以在网络及多用户的情况下提供：包括对读/写文件系统进 行权限的限制、核心程序、关键操作的授权等。再有由于 Linux 是开源免费的（不像 Winidows），在敏感行业（政府、军工）可以避免后门漏洞造成的系统安全问题。</p>\n<p>⑦ **提供丰富的网络功能 **: Linux 的设计初衷就是基于网络，所以 Linux 系统中有完善的内置网络服务，比如： DNS,DHCP,Samba 等，完善的网络服务也是 Linux 由于其它操作系统的一个原因</p>\n<p>⑧ <strong>支持多种平台</strong> : Linux 可以运行在多种硬件平台上，如具有 x86、ARM、SPARC 等处理器的平台架构。此外 Linux 还是一种嵌入式操作系统，可以运行在掌上电脑、手机、机顶盒或游戏机上。</p>\n<p>⑨ <strong>良好的界面</strong> : Linux 同时具有字符界面和图形界面。在字符界面用户可以通过键盘输入相应的指令来进行操 作。它同时也提供了类似 Windows 图形界面的 X-Window 系统</p>\n<h3 id=\"linux-xi-tong-de-zu-cheng\">Linux 系统的组成</h3>\n<p>Linux 系统一般有 4 个主要部分：<strong>内核</strong>、<strong>shell</strong>、<strong>文件系统</strong>和<strong>应用程序</strong>，如下图所示（最内层是各种硬件设备）。</p>\n<p><img src=\"/post/Linux%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C.htm/11.png\" alt=\"image-20230623105133894\"></p>\n<h4 id=\"nei-he\">内核</h4>\n<p>内核(Kernel)是操作系统的核心，具有很多最基本功能，它负责管理系统的进程、内存、设备 驱动程序、文件和网络系统，决定着系统的性能和稳定性。内核从应用层接受命令，根据调度算 法调度相关进程使用系统资源，使得程序能够顺利的运行。</p>\n<p>Linux 内核由如下几部分组成：内存管理、进程管理、设备驱动程序、文件系统和网络管理等。</p>\n<h4 id=\"shell\">shell</h4>\n<p>shell 是一种<strong>命令解释器</strong>，提供了用户与内核进行交互操作的一种接口。它接收用户输入的命令 并把它送入内核去执行，并且将执行的结果返回个给用户。shell 还有自己的编程语言，运行用户 编写由 shell 命令组成的程序。</p>\n<p>shell 有多个版本，目前主流的 shell 版本有四个：</p>\n<table>\n<thead>\n<tr>\n<th>名称</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>BASH</td>\n<td>bash 是 BourneAgain Shell 的缩写，<em>bash 是 Linux 标准默认的 shell</em>。它基于 Bourne shell，吸收了 C shell 和 Korn shell 的一些特性。bash 完全兼容 Bourne shell。</td>\n</tr>\n<tr>\n<td>Bourne Shell</td>\n<td>一般缩写成 sh，由贝尔实验室开发，<em>是 Unix 标准默认的 shell</em>。</td>\n</tr>\n<tr>\n<td>Korn Shell</td>\n<td>Korn shell 缩写 ksh，其特点是兼容性好。</td>\n</tr>\n<tr>\n<td>C Shell</td>\n<td>Sun 公司 Shell 的 BSD 版本。</td>\n</tr>\n</tbody>\n</table>\n<p>shell 是用户与 Linux 操作系统之间的沟通的桥梁，在使用 shell 命令之前了解一下 Shell 命令的格式：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">命令名称 <span class=\"token punctuation\">[</span>选项<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>参数1<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>参数2<span class=\"token punctuation\">]</span><span class=\"token punctuation\">..</span>.<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><strong>命令名</strong>：需要提交给系统执行的命令，这些命令是个可执行文件或 She 脚本文件。</p>\n<p><strong>选项</strong>：是对命令的特别定义，以短线(-) 开始。在 Linux 中，如果一个命令有多个选项可以使用一 个短线 (-)将所有选项连接起来，也可分开输入。同一个命令可以通过不同的选项来实现不同的功 能。</p>\n<p><strong>参数</strong>：是提供给命令运行的信息或命令执行过程中所使用的文件名。 一个简单的 Shell 命令可以只有命令名，复杂一些的可以通过不同的选项和参数来实现命令、选项以及参数之间通过空格键来分隔。如果有多条命令要执行，可将这些令输入在一行中， 各命令 之间用分号(😉 进行分隔。命令的执行顺序与输入的顺序相同。</p>\n<p><strong>文件系统</strong>:文件系统是文件存放在磁盘等存储设备上的存储规则，系统只有规定了文件系统，也就是文件数据的存储组织方式，数据的读/写才能正常进行。目前 Linux 支持多种文件系统，如 EXT2、 EXT3、 XFS、FAT、 VFAT 和 MFS 等。</p>\n<p><strong>应用程序</strong>:标准的 Linux 系统除了系统核心外，一般都有一套都有称为应用程序的程序集，以方便用户的 使用。它包括文本编辑器（vi）、编程语言、XWindow、办公套件、Internet 工具和数据库等。</p>\n<h1 id=\"linux-de-ji-ben-cao-zuo\">Linux 的基本操作</h1>\n<h2 id=\"wen-jian-xi-tong\">文件系统</h2>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">xfs <span class=\"token comment\">#centOs7 默认的文件系统 高性能日志文件系统</span>\next2 <span class=\"token comment\">#linux自带的文件系统类型</span>\next3 <span class=\"token comment\">#是在ext2的基础之上发展演变而来的，二者区别在于ext3文件系统带有日志功能，它会跟踪对于磁盘的写入操作并记录于日志，这样可以在需要时回溯查找。</span>\nswap <span class=\"token comment\">#文件系统在 Linux中作为交换分区的文件系统使用。交换分区是在硬盘上分配出来的一块存储空间，用来弥补物理内存空间的不足。交换空间由操作系统自动管理。因为Linux系统有提前读和延后写的操作机制，所以在安装Linux系统的过程中，交换分区是必须被分配的，其文件系统类型是swap。</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"ge-ge-xi-tong-wen-jian-jia-de-yi-yi\">各个系统文件夹的意义</h3>\n<p><img src=\"/post/Linux%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C.htm/22.png\" alt=\"image-20230623111250592\"></p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">目录</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">/</td>\n<td>根目录</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">/boot</td>\n<td>引导程序，内核等存放的目录</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>/sbin</strong></td>\n<td>超级用户可以使用的命令的存放目录 --软链接(快捷方式) 真实路径是/usr/sbin</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">/selinux</td>\n<td>这个目录是 Redhat/CentOS 所特有的目录，Selinux 是一个安全机制，类 似于 windows 的防火墙，但是这套机制比较复杂，这个目录就是存放 selinux 相关的文件的。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">/srv</td>\n<td>该目录存放一些服务启动之后需要提取的数据。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>/bin</strong></td>\n<td>普通用户可以使用的命令的存放目录 --软链接(快捷方式) 真实路径是/usr/bin</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>/lib</strong></td>\n<td>根目录下的所程序的共享库目录</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>/dev</strong></td>\n<td>设备文件目录 在 linux 系统中设备是以文件的形式存在,通过访问设备文件(设备驱动)则可以访问到设备</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">/home</td>\n<td>普通用户的家目录</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>/root</strong></td>\n<td>用户 root 的$HOME 目录</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">/etc</td>\n<td>全局的配置文件存放目录。 --系统和程序一般都可以通过修改相应的配置文件，来进行配置</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>/usr</strong></td>\n<td>这个目录中包含了命令库文件和在通常操作中不会修改的文件。 --安装程序时默认安装到此目录下的某个子目录 (相当于 window 中软件默认安装到 Program Files 文件夹中)<br> <em>/usr/local</em> 程序默认安装位置<br> <em>/usr/sbin</em> 超级用户使用的比较高级的管理程序和系统守护程序。<br> <em>/usr/src</em> 内核源代码默认的放置目录。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>/opt</strong></td>\n<td>可择的文件目录<br>这个目录表示的是可择的意思，些自定义软件包或者第三方工具，就可以安装在这里。(比如自己编的程序可以安装到这里)</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>/mnt</strong></td>\n<td>临时挂载目录<br>这个目录一般是用于存放挂载储存设备的挂载目录的，比如磁盘，光驱，网络文件系统等，当我们需要挂载某个磁盘设备的时候，可以把磁盘设备挂载到这个目录上去</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><strong>/media</strong></td>\n<td>挂载的媒体设备目录<br>例如 u 盘</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">/tmp</td>\n<td>临时文件目录<br>该目录存放系统中的一些临时文件，文件可能会被系统自动清空。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">/proc</td>\n<td>process(进程)的缩写</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">/var</td>\n<td>var 是 variable(变量) 的缩写，用于存放运行时需要改变数据的文件，我们习惯将那些经常被修改的目录放在这个目录下。包括各种日志文件。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">/run</td>\n<td>是一个临时文件系统，存储系统启动以来的信息。当系统重启时,这个目录下的文件应该被删掉或清除。如果你的系统上有 /var/run 目录，应该让 它指向 run。</td>\n</tr>\n</tbody>\n</table>\n<p><strong>特殊目录</strong></p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">符号</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">.</td>\n<td>当前目录</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">…</td>\n<td>上一级目录</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">~</td>\n<td>用户的主目录</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">-</td>\n<td>前一个工作目录</td>\n</tr>\n</tbody>\n</table>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 当前目录</span>\n<span class=\"token builtin class-name\">cd</span> <span class=\"token builtin class-name\">.</span>\n<span class=\"token comment\"># 上一级目录</span>\n<span class=\"token builtin class-name\">cd</span> <span class=\"token punctuation\">..</span>\n<span class=\"token comment\"># 去用户的主目录</span>\n<span class=\"token builtin class-name\">cd</span> ~\n<span class=\"token comment\"># 去上一次目录</span>\n<span class=\"token builtin class-name\">cd</span> -<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><strong>文件的命名</strong></p>\n<p>Linux 支持长文件名，最长可以达到<code>256字节</code>。Linux 的文件名中不能含有空格和以下特殊字符：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token operator\">!</span> @ <span class=\"token comment\"># ￥ % ~ &amp; × () [] &#123;&#125; ' \" \\ / | ; &lt; > &lt;&lt; >></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><a href=\"###%E6%96%87%E4%BB%B6\">文件介绍之后进行,先进行系统基础命令的学习</a></p>\n<h2 id=\"xi-tong-ji-chu-ming-ling\">系统基础命令</h2>\n<h3 id=\"cha-kan-xiu-gai-dang-qian-shi-jian\">查看/修改当前时间</h3>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">date</span> <span class=\"token punctuation\">[</span>-options<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>mm/dd/yy<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>hh:mm:ss<span class=\"token punctuation\">]</span>\n\noptions:\n\td <span class=\"token builtin class-name\">:</span> 设置年月日\n\ts <span class=\"token builtin class-name\">:</span> 设置时分秒\n\n\t<span class=\"token comment\">#设置月日年</span>\n\t<span class=\"token function\">date</span> <span class=\"token parameter variable\">-d</span> 02/28/21\n\n\t<span class=\"token comment\">#设置时分秒</span>\n\t<span class=\"token function\">date</span> <span class=\"token parameter variable\">-s</span> <span class=\"token number\">23</span>:45:00\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"cha-kan-ming-ling-lei-xing\">查看命令类型</h3>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">type</span> 命令名称\n\n<span class=\"token punctuation\">[</span>nd_ljq@ROOT ~<span class=\"token punctuation\">]</span>$ <span class=\"token builtin class-name\">type</span> <span class=\"token function\">ifconfig</span>\n<span class=\"token function\">ifconfig</span> is /usr/sbin/ifconfig\n<span class=\"token punctuation\">[</span>nd_ljq@ROOT ~<span class=\"token punctuation\">]</span>$ <span class=\"token builtin class-name\">type</span> <span class=\"token builtin class-name\">type</span>\n<span class=\"token builtin class-name\">type</span> is a shell <span class=\"token builtin class-name\">builtin</span>\n\nps:若响应为路径则代表这条命令是<span class=\"token variable\"><span class=\"token variable\">`</span>外部命令<span class=\"token variable\">`</span></span>\n   若响应为<span class=\"token variable\"><span class=\"token variable\">`</span>xxx is a shell <span class=\"token builtin class-name\">builtin</span><span class=\"token variable\">`</span></span>则代表这条命令是<span class=\"token variable\"><span class=\"token variable\">`</span>内核命令<span class=\"token variable\">`</span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"cha-kan-ming-ling-bang-zhu-wen-dang\">查看命令帮助文档</h3>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">help</span> <span class=\"token punctuation\">[</span>options<span class=\"token punctuation\">]</span> 命令名称\n\n<span class=\"token builtin class-name\">help</span> <span class=\"token builtin class-name\">type</span>\n<span class=\"token builtin class-name\">help</span> <span class=\"token builtin class-name\">cd</span>\n\nps:该命令只能用来查询linux<span class=\"token variable\"><span class=\"token variable\">`</span>内部命令<span class=\"token variable\">`</span></span>的帮助文档<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">man</span> <span class=\"token punctuation\">[</span>options<span class=\"token punctuation\">]</span> 命令名称\n\n<span class=\"token function\">man</span> <span class=\"token function\">ssh</span>\n\nps: man（manual：手册），“Linux System Administrator's Manual”，命令可以快速查询Linux\n命令（内核命令/外部命令）的详细描述和使用方法。<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"cha-kan-xi-tong-ji-chu-xin-xi\">查看系统基础信息</h3>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">uname</span> <span class=\"token punctuation\">[</span>options<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>--help<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>--version<span class=\"token punctuation\">]</span>\n\noptions:\n\t<span class=\"token parameter variable\">-a</span> 或--all 　显示全部的信息，包括内核名称、主机名、操作系统版本、处理器类型和硬件架构等。\n\t<span class=\"token parameter variable\">-m</span> 或--machine 　显示处理器类型。\n\t<span class=\"token parameter variable\">-n</span> 或--nodename 　显示主机名。\n\t<span class=\"token parameter variable\">-r</span> 或--release 　显示内核版本号。\n\t<span class=\"token parameter variable\">-s</span> 或--sysname 　显示操作系统名称。\n\t<span class=\"token parameter variable\">-v</span> 　显示操作系统的版本。\n\t<span class=\"token parameter variable\">--help</span> 　显示帮助。\n\t<span class=\"token parameter variable\">--version</span> 　显示版本信息。\n\t<span class=\"token parameter variable\">-p</span> 显示处理器类型（与 <span class=\"token parameter variable\">-m</span> 选项相同）。<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"mark-cha-kan-li-shi-shu-ru-mark\"><mark>查看历史输入</mark></h3>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">history</span> num\n\nps: num为选取最近的n条指令打印<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"zhu-xiao-yong-hu\">注销用户</h3>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">logout</span>\n<span class=\"token builtin class-name\">exit</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<h3 id=\"mark-zhong-qi-yu-guan-ji-mark\"><mark>重启与关机</mark></h3>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">shutdown</span> <span class=\"token punctuation\">[</span>-t seconds<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>option<span class=\"token punctuation\">]</span> <span class=\"token function\">time</span> <span class=\"token punctuation\">[</span>message<span class=\"token punctuation\">]</span>\n\n<span class=\"token parameter variable\">-t</span> seconds <span class=\"token builtin class-name\">:</span> 设定在几秒钟之后进行关机程序。\n<span class=\"token parameter variable\">-k</span> <span class=\"token builtin class-name\">:</span> 并不会真的关机，只是将警告讯息传送给所有使用者。\n<span class=\"token parameter variable\">-r</span> <span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">(</span>reboot<span class=\"token punctuation\">)</span>关机后重新开机。\n<span class=\"token parameter variable\">-h</span> <span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">(</span>halt<span class=\"token punctuation\">)</span>关机后停机。\n<span class=\"token parameter variable\">-n</span> <span class=\"token builtin class-name\">:</span> 不采用正常程序来关机，用强迫的方式杀掉所有执行中的程序后自行关机。\n<span class=\"token parameter variable\">-c</span> <span class=\"token builtin class-name\">:</span> 取消目前已经进行中的关机动作。\n<span class=\"token function\">time</span> <span class=\"token builtin class-name\">:</span> 设定关机的时间。\nmessage <span class=\"token builtin class-name\">:</span> 传送给所有使用者的警告讯息。\n\n<span class=\"token function\">shutdown</span> <span class=\"token parameter variable\">-k</span> <span class=\"token number\">5</span> <span class=\"token string\">\"system will be reboot! \"</span>\n<span class=\"token operator\">!</span>号后要有空格\n\npoweroff 关机\n\n<span class=\"token function\">reboot</span> 重启\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"mark-zu-yong-hu-de-cao-zuo-mark\"><mark>组/用户的操作</mark></h3>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>对用户组的操作,实质性是对/etc/group 文件和/etc/gshadow 文件的操作</p></blockquote>\n<h4 id=\"chuang-jian-zu\">创建组</h4>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">groupadd</span> <span class=\"token punctuation\">[</span>-g gid<span class=\"token punctuation\">]</span> groupName\n\nps: <span class=\"token parameter variable\">-g</span> 为指定组的id<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"shan-chu-zu\">删除组</h4>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">groupdel</span> goupName\n\nps:删除组的前提是这个组为空<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>对用户的操作,实质上是对/etc/passwd 文件的操作</p>\n<p>用户的密码是经过加密后存储在 /etc/shadow 文件中</p>\n<p>查看所有用户可以查看/etc/passwd 文件中的记录数</p>\n<p>查看组(组数)可以查看/etc/group 文件中的记录数</p></blockquote>\n<p>/etc/passwd 中</p>\n<p>每一行有七个字段组成，之间用&quot;:&quot;分隔，各个字段的顺序和含义如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token environment constant\">LOGNAME</span>:PASSWORD:<span class=\"token environment constant\">UID</span>:GID:USERINFO:<span class=\"token environment constant\">HOME</span><span class=\"token builtin class-name\">:</span><span class=\"token environment constant\">SHELL</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h4 id=\"chuang-jian-yong-hu\">创建用户</h4>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">useradd</span> <span class=\"token punctuation\">[</span>options<span class=\"token punctuation\">]</span> userName\n\noptions:\n\t-e:有效期\n\t-f:缓冲天数\n\t-g:用户所属群\n\t-s:指定用户的shell 若未指定centos7会给其默认分配一个shell 为 /bin/bash\n\t /bin/sh\n\t /bin/ksshell\n\t /bin/bash <span class=\"token punctuation\">..</span>.\n\n\t-d:用户的工作目录<span class=\"token punctuation\">(</span>家目录<span class=\"token punctuation\">)</span>\n\t-u:指定用户id\n\n\n例子:\n\t<span class=\"token number\">1</span>.创建一个不能登录的的用户\n\t\t<span class=\"token function\">useradd</span> <span class=\"token parameter variable\">-s</span> /sbin/nologin<span class=\"token punctuation\">(</span>更优,后面会提及<span class=\"token punctuation\">)</span>\n\n\t\t<span class=\"token function\">useradd</span> <span class=\"token parameter variable\">-s</span> /bin/false\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<table>\n<thead>\n<tr>\n<th>字段</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>LOGNAME</td>\n<td>用户名：用于区分不同的用户。在同一系统中注册名是惟一的。注意！通常 在 Linux 系统中对字母大小写是敏感的。</td>\n</tr>\n<tr>\n<td>PASSWORD</td>\n<td>口令：用户的口令，注意用户的密码系统会加密存储在/etc/shadow 下，所以这里只显示一个 x 字符。</td>\n</tr>\n<tr>\n<td>UID</td>\n<td>UID：用户的 ID，是 Linux 系统中惟一的用户标识，用于区别不同的用户。 这个 ID 可以创建用户的时候指定，或者由系统自动分配。</td>\n</tr>\n<tr>\n<td>GID</td>\n<td>GID：用户所属的组 ID，用户的组存放在/etc/group 文件中。</td>\n</tr>\n<tr>\n<td>USERINFO</td>\n<td>用户信息：包含有关用户的一些信息。</td>\n</tr>\n<tr>\n<td>HOME</td>\n<td>用户主目录：该字段定义了用户的主目录，当用户登录后，他的 Shell 将把 该目录作为用户的工作目录。 在 Linux 系统中，root 的工作目录为/root； 而其它个人用户在的默认主目录在/home/用户名的目录，或者也可以创建 用户的时候指定。</td>\n</tr>\n<tr>\n<td>SHELL</td>\n<td>Shell：用户的 shell，比如：bash、sh、csh、ksh 等。</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"shan-chu-yong-hu\">删除用户</h4>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">userdel</span> <span class=\"token punctuation\">[</span>option<span class=\"token punctuation\">]</span> userName\n\n  option:\n    -r: 删除用户登录目录以及目录中的所有文件<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"cha-kan-dang-qian-yong-hu-id\">查看当前用户 ID</h4>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">id</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h4 id=\"xiu-gai-yong-hu-mi-ma\">修改用户密码</h4>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">passwd</span> <span class=\"token punctuation\">[</span>options<span class=\"token punctuation\">]</span> userName\n\noptions:\n\t<span class=\"token parameter variable\">-d</span> 删除密码\n\t<span class=\"token parameter variable\">-w</span> 口令要到期提前警告的天数\n\t<span class=\"token parameter variable\">-k</span> 更新只能发送在过期之后\n\t<span class=\"token parameter variable\">-l</span> <span class=\"token punctuation\">(</span>lock<span class=\"token punctuation\">)</span>停止账号使用\n\t<span class=\"token parameter variable\">-S</span> 显示密码信息\n\t<span class=\"token parameter variable\">-u</span> <span class=\"token punctuation\">(</span>unlock<span class=\"token punctuation\">)</span>启用已被停止的账户\n\t<span class=\"token parameter variable\">-x</span> 指定口令最长存活期\n\t<span class=\"token parameter variable\">-g</span> 修改群组密码\n\t<span class=\"token parameter variable\">-n</span> 指定口令最短存活期\n\t<span class=\"token parameter variable\">-i</span> 口令过期后多少天停用账户<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"xiu-gai-yong-hu-xin-xi\">修改用户信息</h4>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">usermod</span> <span class=\"token punctuation\">[</span>options<span class=\"token punctuation\">]</span> userName\n\noptions:\n\t<span class=\"token parameter variable\">-d</span> <span class=\"token operator\">&lt;</span>登入目录<span class=\"token operator\">></span> 　修改用户登入时的目录。\n\t<span class=\"token parameter variable\">-e</span> <span class=\"token operator\">&lt;</span>有效期限<span class=\"token operator\">></span> 　修改帐号的有效期限。\n\t<span class=\"token parameter variable\">-f</span> <span class=\"token operator\">&lt;</span>缓冲天数<span class=\"token operator\">></span> 　修改在密码过期后多少天即关闭该帐号。\n\t<span class=\"token parameter variable\">-g</span> <span class=\"token operator\">&lt;</span>群组<span class=\"token operator\">></span> 　修改用户所属的群组。\n\t<span class=\"token parameter variable\">-l</span> <span class=\"token operator\">&lt;</span>帐号名称<span class=\"token operator\">></span> 　修改用户帐号名称。\n\t<span class=\"token parameter variable\">-L</span> 锁定用户密码，使密码无效。\n\t<span class=\"token parameter variable\">-s</span> 修改用户登入后所使用的shell。\n\t<span class=\"token parameter variable\">-u</span> 修改用户ID。\n\t<span class=\"token parameter variable\">-U</span> 解除密码锁定。\n\n\t查看用户信息:\n\t<span class=\"token function\">cat</span> /etc/passwd <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> userName<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"qie-huan-yong-hu\">切换用户</h4>\n<p>su（英文全拼：switch user）命令用于变更为其他使用者的身份。同时使用 whoami 命令查看当前用户。</p>\n<p>su 命令语法：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">su</span> <span class=\"token punctuation\">[</span>-<span class=\"token punctuation\">]</span> userName\n\n<span class=\"token comment\">#切换到root用户</span>\n<span class=\"token function\">su</span>\n<span class=\"token function\">su</span> -\n<span class=\"token function\">su</span> root<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>su 命令用户切换登录用户的命令。注意：普通用户切 root 是需要 root 密码的，但是 root 切普通 用户不要密码，并且英文安全考虑，输入的密码是不回显的。</p></blockquote>\n<h2 id=\"xi-tong-gao-ji-ying-yong-yu-she-zhi\">系统高级应用与设置</h2>\n<h3 id=\"xi-tong-xing-neng-fen-xi\">系统性能分析</h3>\n<h4 id=\"uptime\">uptime</h4>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">uptime</span> 命令可以用来查看服务器已经运行了多久，依次显示：现在时间，系统运行了多久，\n当前登录的用户有多少，以及服务器在过去的1分钟、5分钟、15分钟的系统平均负载值。<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<h4 id=\"free\">free</h4>\n<p>free 命令会显示内存的使用情况，包括实体内存，虚拟的交换文件内存，共享内存区段，以及 系统核心使用的缓冲区等。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">free</span> <span class=\"token punctuation\">[</span>-options<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>-s <span class=\"token operator\">&lt;</span>间隔秒数<span class=\"token operator\">></span><span class=\"token punctuation\">]</span>\n\n options:\n\t-b:以Byte为单位显示内存使用情况。\n\t-k:以KB为单位显示内存使用情况。\n\t-m:以MB为单位显示内存使用情况。\n\t-h:以人可视化的单位显示内存使用情况。\n\n\t<span class=\"token parameter variable\">-s</span> <span class=\"token operator\">&lt;</span>间隔秒数<span class=\"token operator\">></span>:每隔n秒刷新一次<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>结果说明：</p>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>total: 内存总数。</p>\n</li>\n<li class=\"lvl-2\">\n<p>used: 已经使用内存数。</p>\n</li>\n<li class=\"lvl-2\">\n<p>free: 完全空闲内存。</p>\n</li>\n<li class=\"lvl-2\">\n<p>shared: 多个进程共享的内存。</p>\n</li>\n<li class=\"lvl-2\">\n<p>buffers: 用于块设备数据缓冲，记录文件系统 metadata（目录，权限，属性等)。</p>\n</li>\n<li class=\"lvl-2\">\n<p>cached: 用于文件内容的缓冲。</p>\n</li>\n<li class=\"lvl-2\">\n<p>available：真正剩余的可被程序应用的内存数。</p>\n</li>\n</ul>\n<h4 id=\"top-zhi-ling\">top 指令</h4>\n<p>相当于 windows 中的任务管理器</p>\n<p><img src=\"/post/Linux%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C.htm/linux%E4%BB%BB%E5%8A%A1%E7%AE%A1%E7%90%86%E5%99%A8.png\" alt=\"linux任务管理器\"></p>\n<h5 id=\"di-yi-xing-ren-wu-dui-lie-xin-xi-tong-uptime-ming-ling-de-zhi-xing-jie-guo\">第一行，任务队列信息，同 uptime 命令的执行结果</h5>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">第一行，任务队列信息，同 <span class=\"token function\">uptime</span> 命令的执行结果\n系统时间：11:08:47\n\n运行时间：up <span class=\"token number\">36</span> min,\n\n当前登录用户：  <span class=\"token number\">1</span> user\n\n负载均衡<span class=\"token punctuation\">(</span>uptime<span class=\"token punctuation\">)</span>  load average: <span class=\"token number\">0.32</span>, <span class=\"token number\">0.26</span>, <span class=\"token number\">0.20</span>\n\naverage后面的三个数分别是1分钟、5分钟、15分钟的负载情况。\n\nload average数据是每隔5秒钟检查一次活跃的进程数，然后按特定算法计算出的数值。如果这个数除以逻辑CPU的数量，结果高于5的时候就表明系统在超负荷运转了<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h5 id=\"di-er-xing-tasks-ren-wu-jin-cheng\">第二行，Tasks — 任务（进程）</h5>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">总进程:150 total, 运行:1 running, 休眠:149 sleeping, 停止: <span class=\"token number\">0</span> stopped, 僵尸进程: <span class=\"token number\">0</span> zombie<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h5 id=\"di-san-xing-cpu-zhuang-tai-xin-xi\">第三行，cpu 状态信息</h5>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token number\">0.0</span>%us【user space】— 用户空间占用CPU的百分比。\n\n<span class=\"token number\">0.3</span>%sy【sysctl】— 内核空间占用CPU的百分比。\n\n<span class=\"token number\">0.0</span>%ni【】— 改变过优先级的进程占用CPU的百分比\n\n<span class=\"token number\">99.7</span>%id【idolt】— 空闲CPU百分比\n\n<span class=\"token number\">0.0</span>%wa【wait】— IO等待占用CPU的百分比\n\n<span class=\"token number\">0.0</span>%hi【Hardware IRQ】— 硬中断占用CPU的百分比\n\n<span class=\"token number\">0.0</span>%si【Software Interrupts】— 软中断占用CPU的百分比<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h5 id=\"di-si-xing-nei-cun-zhuang-tai\">第四行,内存状态</h5>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">1003020k total,   234464k used,   777824k free,    24084k buffers【缓存的内存量】<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h5 id=\"di-wu-xing-swap-jiao-huan-fen-qu-xin-xi\">第五行，swap 交换分区信息</h5>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">2031612k total,      536k used,  2031076k free,   505864k cached【缓冲的交换区总量】\n\n备注：\n\n可用内存<span class=\"token operator\">=</span>free + buffer + cached\n\n对于内存监控，在top里我们要时刻监控第五行swap交换分区的used，如果这个数值在不断的变化，说明内核在不断进行内存和swap的数据交换，这是真正的内存不够用了。\n\n第四行中使用中的内存总量（used）指的是现在系统内核控制的内存数，\n\n第四行中空闲内存总量（free）是内核还未纳入其管控范围的数量。\n\n纳入内核管理的内存不见得都在使用中，还包括过去使用过的现在可以被重复利用的内存，内核并不把这些可被重新使用的内存交还到free中去，因此在linux上free内存会越来越少，但不用为此担心。<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h5 id=\"di-liu-xing-kong-xing\">第六行，空行</h5>\n<h5 id=\"di-qi-xing-yi-xia-ge-jin-cheng-ren-wu-de-zhuang-tai-jian-kong\">第七行以下：各进程（任务）的状态监控</h5>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">PID — 进程id\n<span class=\"token environment constant\">USER</span> — 进程所有者\nPR — 进程优先级\nNI — nice值。负值表示高优先级，正值表示低优先级\nVIRT — 进程使用的虚拟内存总量，单位kb。VIRT<span class=\"token operator\">=</span>SWAP+RES\nRES —  进程使用的、未被换出的物理内存大小，单位kb。RES<span class=\"token operator\">=</span>CODE+DATA\nSHR — 共享内存大小，单位kb\nS —进程状态。D<span class=\"token operator\">=</span>不可中断的睡眠状态 <span class=\"token assign-left variable\">R</span><span class=\"token operator\">=</span>运行 <span class=\"token assign-left variable\">S</span><span class=\"token operator\">=</span>睡眠 <span class=\"token assign-left variable\">T</span><span class=\"token operator\">=</span>跟踪/停止 <span class=\"token assign-left variable\">Z</span><span class=\"token operator\">=</span>僵尸进程\n%CPU — 上次更新到现在的CPU时间占用百分比\n%MEM — 进程使用的物理内存百分比\nTIME+ — 进程使用的CPU时间总计，单位1/100秒\nCOMMAND — 进程名称（命令名/命令行）\n\n\n说明:\nVIRT：virtual memory usage 虚拟内存\n<span class=\"token number\">1</span>、进程“需要的”虚拟内存大小，包括进程使用的库、代码、数据等\n<span class=\"token number\">2</span>、假如进程申请100m的内存，但实际只使用了10m，那么它会增长100m，而不是实际的使用量\n\nRES：resident memory usage 常驻内存\n<span class=\"token number\">1</span>、进程当前使用的内存大小，但不包括swap out\n<span class=\"token number\">2</span>、包含其他进程的共享\n<span class=\"token number\">3</span>、如果申请100m的内存，实际使用10m，它只增长10m，与VIRT相反\n<span class=\"token number\">4</span>、关于库占用内存的情况，它只统计加载的库文件所占内存大小\n\nSHR：shared memory 共享内存\n<span class=\"token number\">1</span>、除了自身进程的共享内存，也包括其他进程的共享内存\n<span class=\"token number\">2</span>、虽然进程只使用了几个共享库的函数，但它包含了整个共享库的大小\n<span class=\"token number\">3</span>、计算某个进程所占的物理内存大小公式：RES – SHR\n<span class=\"token number\">4</span>、swap out后，它将会降下来\n\nDATA\n<span class=\"token number\">1</span>、数据占用的内存。如果top没有显示，按f键可以显示出来。\n<span class=\"token number\">2</span>、真正的该程序要求的数据空间，是真正在运行中要使用的。<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h5 id=\"top-zhi-ling-de-xiang-guan-can-shu\">top 指令的相关参数</h5>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">在top运行中可以使用以下命令在top中进行操作\ns – 改变画面更新频率\nl – 关闭或开启第一部分第一行 <span class=\"token function\">top</span> 信息的表示\nt – 关闭或开启第一部分第二行 Tasks 和第三行 Cpus 信息的表示\nm – 关闭或开启第一部分第四行 Mem 和 第五行 Swap 信息的表示\nN – 以 PID 的大小的顺序排列表示进程列表\nP – 以 CPU 占用率大小的顺序排列进程列表\nM – 以内存占用率大小的顺序排列进程列表\nh – 显示帮助\nn – 设置在进程列表所显示进程的数量\nq – 退出 <span class=\"token function\">top</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>启动 top 时的参数列表</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">top</span> <span class=\"token punctuation\">[</span>-<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>options<span class=\"token punctuation\">]</span>\n\noptions:\nd：指定每两次屏幕信息刷新之间的时间间隔。当然用户可以使用s交互命令来改变之。\n\np:通过指定监控进程ID来仅仅监控某个进程的状态。\n\nq:该选项将使top没有任何延迟的进行刷新。如果调用程序有超级用户权限，那么top将以尽可能高的优先级运行。\n\nS：指定累计模式。\n\ns：使top命令在安全模式中运行。这将去除交互命令所带来的潜在危险。\n\ni：使top不显示任何闲置或者僵死进程。\n\nc:显示整个命令行而不只是显示命令名。<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"df\">df</h4>\n<p>df（英文全拼：disk free） 命令用于显示目前在 Linux 系统上的文件系统磁盘使用情况统计。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">df</span> <span class=\"token punctuation\">[</span>-options<span class=\"token punctuation\">]</span>\n\n options:\n \t-a, <span class=\"token parameter variable\">--all</span> 包含所有的具有 <span class=\"token number\">0</span> Blocks 的文件系统\n \t-h, --human-readable 使用人类可读的格式<span class=\"token punctuation\">(</span>预设值是不加这个选项的<span class=\"token punctuation\">..</span>.<span class=\"token punctuation\">)</span>\n \t-i, <span class=\"token parameter variable\">--inodes</span> 列出 inode 资讯，不列出已使用 block\n\t-k, <span class=\"token parameter variable\">--kilobytes</span> 就像是 --block-size<span class=\"token operator\">=</span><span class=\"token number\">1024</span>\n\t-l, <span class=\"token parameter variable\">--local</span> 限制列出的文件结构\n\t-m, <span class=\"token parameter variable\">--megabytes</span> 就像 --block-size<span class=\"token operator\">=</span><span class=\"token number\">1048576</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"mark-fang-huo-qiang-mark\"><mark>防火墙</mark></h3>\n<h4 id=\"ji-ben-cao-zuo\">基本操作</h4>\n<p><strong>基本操作包括</strong>：查看防火墙状况、开启防火墙、关闭防火墙、重启防火墙、设置防火墙随系统 启动而启动、关闭防火墙随着系统的启动而启动、查看防火墙随统启动而启动。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 查看防火墙的状态</span>\nsystemctl status firewalld\n\n<span class=\"token comment\"># 开启防火墙</span>\nsystemctl start firewalld\n\n<span class=\"token comment\"># 关闭防火墙</span>\nsystemctl stop firewalld\n\n<span class=\"token comment\"># 重启防火墙</span>\nsystemctl restart firewalld\n\n<span class=\"token comment\"># 设置防火墙，并且随着系统的启动而启动</span>\nsystemctl <span class=\"token builtin class-name\">enable</span> firewalld\n\n<span class=\"token comment\"># 关闭防火墙随着系统的启动而启动，重启以后生效</span>\nsystemctl disable firewalld\n\n<span class=\"token comment\"># 检查防火墙服务是否开机启动</span>\nsystemctl is-enabled firewalld\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h5 id=\"kai-qi-duan-kou\">开启端口</h5>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">firewall-cmd <span class=\"token punctuation\">[</span>选项<span class=\"token punctuation\">..</span>.<span class=\"token punctuation\">]</span>\n\n选项:\n\t--state: 显示firewalld的状态。\n\t--reload: 不中断服务的重新加载防火墙。\n\t--list-ports: 查看所有打开的端口。\n\t--zone: 作用域：block dmz drop external home internal public trusted work\n\t--add-port<span class=\"token operator\">=</span><span class=\"token number\">80</span>/tcp :添加端口，格式为：端口/通讯协议。\n\t--permanent: 永久生效，没有此参数重启后失效。\n\t--query-service: 查看对应的服务，比如：ftp、ssh服务。\n\n\n<span class=\"token comment\">#查看已经打开的端口</span>\nfirewall-cmd <span class=\"token parameter variable\">--zone</span><span class=\"token operator\">=</span>public --list-ports\n\n<span class=\"token comment\"># 查看8080端口有没有打开</span>\nfirewall-cmd --query-port<span class=\"token operator\">=</span><span class=\"token number\">8080</span>/tcp\n\n<span class=\"token comment\"># 如果不需要了，可以删除防火墙上面开辟的8080端口</span>\nfirewall-cmd <span class=\"token parameter variable\">--zone</span><span class=\"token operator\">=</span>public --remove-port<span class=\"token operator\">=</span><span class=\"token number\">8080</span>/tcp <span class=\"token parameter variable\">--permanent</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"xi-tong-de-qi-dong-yu-pei-zhi\">系统的启动与配置</h3>\n<ol>\n<li class=\"lvl-3\">\n<p><strong>硬件启动阶段</strong>：开机，然后初始化硬件设备，然后检查硬件设备，比如：CPU、内存、硬 盘、键盘等设备。</p>\n</li>\n<li class=\"lvl-3\">\n<p><strong>GRUB 引导阶段</strong>：硬件启动后，通过执行固件里面的指令跳转到 BIOS，然后 BIOS 找到启动设 备并获取 MBR，MBR 又指向 GRUB。当 GRUB 获得引导控制权后，会现实 GRUB 的提示符，此时 如果用户不做任何操作，GRUB 将在等待指定时间后自动引导默认的操作系统，如果此时按 TAB 键，则可以看到一个可引导的操作系统的列表，用户可以选择相应的操作系统。如果用户选择了 某个 Linux 操作系统，GRUB 就会从/boot 分区里面读取并装载的压缩内核，然后压缩的内核解 压，加载内核镜像到内存，之后构建虚拟根文件系统，然后把控制权交给内核。</p>\n</li>\n<li class=\"lvl-3\">\n<p><strong>内核引导阶段</strong>：通过内存中的虚拟根文件系统，加载驱动，然后切换到真正的根文件系统， 然后执行的初始化程序/sbin/init（其实指向的是/usr/lib/systemd/systemd）。</p>\n</li>\n<li class=\"lvl-3\">\n<p><strong>systemed 初始化阶段</strong>：又叫系统初始化阶段，CentOS7 中我们的初始化进程为 systemd （天字号排行第一的进程，因为其 PID 为 1，可以通过 top 命令查看），然后系统执行默认 target 配置文件（/etc/systemd/system/default.target），然后根据这个默认的 target，引导系 统启动并进入<strong>指定的运行级别</strong>，并启动相应的服务程序。然后等待用户登录使用。</p>\n</li>\n</ol>\n<h3 id=\"mark-xi-tong-de-yun-xing-ji-bie-mark\"><mark>系统的运行级别</mark></h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">级别</th>\n<th style=\"text-align:center\">描述</th>\n<th style=\"text-align:center\">详解</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">0</td>\n<td style=\"text-align:center\"><strong>系统停机模式</strong></td>\n<td style=\"text-align:center\">系统关机状态，系统默认运行级别不能设置为 0，否则不能正常启动。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:center\">单用户模式</td>\n<td style=\"text-align:center\">root 权限，用于系统维护，禁止远程登陆，就像 Windows 下的安全 模式登录。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">2</td>\n<td style=\"text-align:center\">多用户模式</td>\n<td style=\"text-align:center\">多用户状态，但是没有 NFS 和网络支持。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">3</td>\n<td style=\"text-align:center\"><strong>完全多用户模式</strong></td>\n<td style=\"text-align:center\">有 NFS 和网络，登陆后进入控制台命令行模式（如果默认是命令行则 它是默认的）。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">4</td>\n<td style=\"text-align:center\">系统未使用</td>\n<td style=\"text-align:center\">保留一般不用，在一些特殊情况下可以用它来做一些事情。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">5</td>\n<td style=\"text-align:center\"><strong>图形化模式</strong></td>\n<td style=\"text-align:center\">登陆后进入图形用户模式，X Window 系统。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">6</td>\n<td style=\"text-align:center\"><strong>重启模式</strong></td>\n<td style=\"text-align:center\">默认运行级别不能设为 6，否则不能正常启动。运行 init 6 机器就会 重启。</td>\n</tr>\n</tbody>\n</table>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#使用启动级别来关机、重启、进入命令行模式、进入图形用户模式</span>\n\n<span class=\"token comment\"># 关机</span>\ninit <span class=\"token number\">0</span>\n<span class=\"token comment\">#复习 还有 halt\\poweroff\\shutdown -h now</span>\n\n<span class=\"token comment\"># 重启</span>\ninit <span class=\"token number\">6</span>\n<span class=\"token comment\">#复习 还有reboot\\shutdown -r now</span>\n\n<span class=\"token comment\"># 进入命令行模式</span>\ninit <span class=\"token number\">3</span>\n<span class=\"token comment\"># 进入图形用户模式</span>\ninit <span class=\"token number\">5</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>每个运行级别都有属于自己的 target 文件，这些 target 文件都是以链接文 件的形式保存在<code>“/lib/systemd/system”</code>目录。运行级别的设置由<code> “/etc/systemd/system/default.target”</code>来控制，default.target 里面配置的是什么运行级别，系统启动的时候就运行哪个运行级别。</p>\n<p><strong>“/lib/systemd/system”定义好的运行级别文件：</strong></p>\n<p><img src=\"/post/Linux%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C.htm/Snipaste_2023-03-21_11-04-22.png\" alt></p>\n<p>default.target 指向的默认的一个运行级别。</p>\n<p><img src=\"/post/Linux%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C.htm/Snipaste_2023-03-21_11-05-36.png\" alt></p>\n<p>由于不同的运行级别将要启动的服务不尽相同，所以，为了合理的管理各个运行级别的服务进 程，系统为每一个运行级别在目录下准备了一个目录用于存放各自的服务程序，命名规范是 “rcn.d”（n 代表 0~6 的七个运行级别），具体如下图所示。</p>\n<p><img src=\"/post/Linux%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C.htm/Snipaste_2023-03-21_11-07-05.png\" alt></p>\n<p>在运行级别对应的目录中，<strong>所有文件的命名规则是“Snnxxxx” 和“Knnxxxx” 。其中，以 “S”开头的文件是系统启动时调用的服务程序，以“K”开头的文件是系统终止时调用的服务程序。 nn 是 00 ～ 99 之间的一个整数，数字 nn 的大小决定程序执行的先后顺序。xxx 是服务程序的名 称。</strong> 由于各个运行级别中的服务程序集合有可能存在交集，所以为了节省硬盘空间和便于更新服务 程序，在 rcn.d 目录中存放的只是各个服务程序的链接文件，我们装 CentOS7 的默认运行级别是 “完全多用户模式”，我们进入它对应的目录“/etc/rc.d/rc3.d”，如下图所示。</p>\n<p><img src=\"/post/Linux%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C.htm/Snipaste_2023-03-21_11-09-02.png\" alt></p>\n<h4 id=\"strong-cha-kan-xi-tong-mo-ren-yun-xing-ji-bie-strong\"><strong>查看系统默认运行级别</strong></h4>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">runlevel<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h4 id=\"she-zhi-xi-tong-yun-xing-ji-bie\">设置系统运行级别</h4>\n<h5 id=\"systemctl-she-zhi\">systemctl 设置</h5>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 设置默认第三启动级别</span>\nsystemctl set-default multi-user.target\n<span class=\"token comment\"># 设置默认第五启动级别</span>\nsystemctl set-default graphical.target\n<span class=\"token comment\"># 查看当前默认的启动级别</span>\nsystemctl get-default<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h5 id=\"zhong-zhi-ruan-lian-jie-wen-jian\">重置软链接文件</h5>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#设置完全多用户模式为默认的运行级别</span>\n\n<span class=\"token comment\"># 先删除原有的软链接文件</span>\n<span class=\"token function\">rm</span> <span class=\"token parameter variable\">-rf</span> /etc/systemd/system/default.target\n<span class=\"token comment\"># 创建软连接文件</span>\n<span class=\"token function\">ln</span> <span class=\"token parameter variable\">-s</span> /usr/lib/systemd/system/multi-user.target\n/etc/systemd/system/default.target\n<span class=\"token comment\"># 重启</span>\n<span class=\"token function\">reboot</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"wang-luo\">网络</h3>\n<h4 id=\"wang-qia-de-pei-zhi\">网卡的配置</h4>\n<h5 id=\"wang-qia-pei-zhi-wen-jian\">网卡配置文件</h5>\n<p>网卡的配置信息，通常包括 IP 地址、子网掩码、网关。这些网卡信息保存在配置文件中，这个 网卡的配置文件位于**/etc/sysconfig/network-scripts**，我们的 CentOS7 的网卡配置信息就在 <strong>ifcfg-ens33</strong>文件中。</p>\n<p><strong>查看 ifcfg-ens33 的内容</strong></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">cat</span> /etc/sysconfig/network-scripts/ifcfg-ens33<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><strong>显示内容</strong>:</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token assign-left variable\">TYPE</span><span class=\"token operator\">=</span><span class=\"token string\">\"Ethernet\"</span>\n<span class=\"token assign-left variable\">PROXY_METHOD</span><span class=\"token operator\">=</span><span class=\"token string\">\"none\"</span>\n<span class=\"token assign-left variable\">BROWSER_ONLY</span><span class=\"token operator\">=</span><span class=\"token string\">\"no\"</span>\n<span class=\"token assign-left variable\">BOOTPROTO</span><span class=\"token operator\">=</span><span class=\"token string\">\"dhcp\"</span>\n<span class=\"token assign-left variable\">DEFROUTE</span><span class=\"token operator\">=</span><span class=\"token string\">\"yes\"</span>\n<span class=\"token assign-left variable\">IPV4_FAILURE_FATAL</span><span class=\"token operator\">=</span><span class=\"token string\">\"no\"</span>\n<span class=\"token assign-left variable\">IPV6INIT</span><span class=\"token operator\">=</span><span class=\"token string\">\"yes\"</span>\n<span class=\"token assign-left variable\">IPV6_AUTOCONF</span><span class=\"token operator\">=</span><span class=\"token string\">\"yes\"</span>\n<span class=\"token assign-left variable\">IPV6_DEFROUTE</span><span class=\"token operator\">=</span><span class=\"token string\">\"yes\"</span>\n<span class=\"token assign-left variable\">IPV6_FAILURE_FATAL</span><span class=\"token operator\">=</span><span class=\"token string\">\"no\"</span>\n<span class=\"token assign-left variable\">IPV6_ADDR_GEN_MODE</span><span class=\"token operator\">=</span><span class=\"token string\">\"stable-privacy\"</span>\n<span class=\"token assign-left variable\">NAME</span><span class=\"token operator\">=</span><span class=\"token string\">\"ens33\"</span>\n<span class=\"token assign-left variable\">UUID</span><span class=\"token operator\">=</span><span class=\"token string\">\"1bedffd6-a745-41a6-b981-e3fff4e13b71\"</span>\n<span class=\"token assign-left variable\">DEVICE</span><span class=\"token operator\">=</span><span class=\"token string\">\"ens33\"</span>\n<span class=\"token assign-left variable\">ONBOOT</span><span class=\"token operator\">=</span><span class=\"token string\">\"yes\"</span>\n<span class=\"token assign-left variable\">IPV6_PRIVACY</span><span class=\"token operator\">=</span><span class=\"token string\">\"no\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><strong>配置信息</strong></p>\n<table>\n<thead>\n<tr>\n<th>配置项</th>\n<th>介绍</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>DEVICE</td>\n<td>定义该网卡的识别名称。</td>\n</tr>\n<tr>\n<td>TYPE</td>\n<td>网卡类型。</td>\n</tr>\n<tr>\n<td>BOOTPROTO</td>\n<td>启动该网卡的方式。有 static/none 表示固定 IP 地址；bootp/dhcp 表示通 过 BOOTP 或者 DHCP 协议动态获取 IP 地址。 如果自己设置就用 static，如果想自动获取就用 dhcp。</td>\n</tr>\n<tr>\n<td>ONBOOT</td>\n<td>启动 NetworkManager 的时候，是否启动该网卡。有些情况下安装 CentOS 的时候网络老是不启动这个时候，就可以看这个配置项是否是 “yes”</td>\n</tr>\n<tr>\n<td>IPADDR</td>\n<td>静态方式设置指定的 IP 地址。</td>\n</tr>\n<tr>\n<td>NETMASK</td>\n<td>指定子网掩码。</td>\n</tr>\n<tr>\n<td>GATEWAY</td>\n<td>指定默认网关。</td>\n</tr>\n<tr>\n<td>DNS1</td>\n<td>配置 DNS 服务器</td>\n</tr>\n</tbody>\n</table>\n<p><strong>设置静态 IP</strong></p>\n<p>安装的时候，我们设置的是网络采取的是“dhcp”网络配置方式，这种方式 IP 是动态设置的，这 个在我们以后的集群里面是不行的，所以我们设置成静态 ip，具体的步骤如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 进入网络配置目录</span>\n<span class=\"token builtin class-name\">cd</span> /etc/sysconfig/network-scripts/\n\n<span class=\"token comment\"># 查看网络配置文件</span>\n<span class=\"token function\">ls</span> <span class=\"token parameter variable\">-al</span>\n\n<span class=\"token comment\"># 编辑网络配置文件</span>\n<span class=\"token function\">vi</span> + /etc/sysconfig/network-scripts/ifcfg-ens33<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token assign-left variable\">TYPE</span><span class=\"token operator\">=</span><span class=\"token string\">\"Ethernet\"</span>\n<span class=\"token assign-left variable\">PROXY_METHOD</span><span class=\"token operator\">=</span><span class=\"token string\">\"none\"</span>\n<span class=\"token assign-left variable\">BROWSER_ONLY</span><span class=\"token operator\">=</span><span class=\"token string\">\"no\"</span>\n<span class=\"token comment\"># 注意这个要注释或者删除</span>\n<span class=\"token comment\">#BOOTPROTO=\"dhcp\"</span>\n<span class=\"token assign-left variable\">DEFROUTE</span><span class=\"token operator\">=</span><span class=\"token string\">\"yes\"</span>\n<span class=\"token assign-left variable\">IPV4_FAILURE_FATAL</span><span class=\"token operator\">=</span><span class=\"token string\">\"no\"</span>\n<span class=\"token assign-left variable\">IPV6INIT</span><span class=\"token operator\">=</span><span class=\"token string\">\"yes\"</span>\n<span class=\"token assign-left variable\">IPV6_AUTOCONF</span><span class=\"token operator\">=</span><span class=\"token string\">\"yes\"</span>\n<span class=\"token assign-left variable\">IPV6_DEFROUTE</span><span class=\"token operator\">=</span><span class=\"token string\">\"yes\"</span>\n<span class=\"token assign-left variable\">IPV6_FAILURE_FATAL</span><span class=\"token operator\">=</span><span class=\"token string\">\"no\"</span>\n<span class=\"token assign-left variable\">IPV6_ADDR_GEN_MODE</span><span class=\"token operator\">=</span><span class=\"token string\">\"stable-privacy\"</span>\n<span class=\"token assign-left variable\">NAME</span><span class=\"token operator\">=</span><span class=\"token string\">\"ens33\"</span>\n<span class=\"token assign-left variable\">UUID</span><span class=\"token operator\">=</span><span class=\"token string\">\"e9ce67e1-7d2a-41b4-9989-dfbc75278d80\"</span>\n<span class=\"token assign-left variable\">DEVICE</span><span class=\"token operator\">=</span><span class=\"token string\">\"ens33\"</span>\n<span class=\"token assign-left variable\">ONBOOT</span><span class=\"token operator\">=</span><span class=\"token string\">\"yes\"</span>\n<span class=\"token assign-left variable\">IPV6_PRIVACY</span><span class=\"token operator\">=</span><span class=\"token string\">\"no\"</span>\n<span class=\"token comment\"># 配置静态的IP</span>\n<span class=\"token assign-left variable\">BOOTPROTO</span><span class=\"token operator\">=</span><span class=\"token string\">\"static\"</span>\n<span class=\"token comment\"># IP地址</span>\n<span class=\"token assign-left variable\">IPADDR</span><span class=\"token operator\">=</span><span class=\"token number\">192.168</span>.60.100\n<span class=\"token comment\"># 子网掩码</span>\n<span class=\"token assign-left variable\">NETMASK</span><span class=\"token operator\">=</span><span class=\"token number\">255.255</span>.255.0\n<span class=\"token comment\"># 默认网关</span>\n<span class=\"token assign-left variable\">GATEWAY</span><span class=\"token operator\">=</span><span class=\"token number\">192.168</span>.60.1\n<span class=\"token comment\"># 配置DNS</span>\n<span class=\"token assign-left variable\">DNS1</span><span class=\"token operator\">=</span><span class=\"token number\">8.8</span>.8.8<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><strong>重启网络与重新登陆</strong></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 重启网络：</span>\nsystemctl restart network\n<span class=\"token comment\"># 重新登录</span>\n<span class=\"token function\">ssh</span> root@192.168.60.100<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<h5 id=\"ifconfig-ming-ling\">ifconfig 命令</h5>\n<p>ifconfig 命令（来源于 net-tools 软件包，默认的精简版的 CentOS7 里面是没遇的，得先安装） 功能比较的强大，用于显示或设置网络设备。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">yum <span class=\"token parameter variable\">-y</span> <span class=\"token function\">install</span> net-tools<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><strong>查看网卡信息</strong></p>\n<p><strong>命令格式</strong>：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">ifconfig</span> <span class=\"token punctuation\">[</span>选项<span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><strong>选项说明</strong>:</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">选项</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">无选项</td>\n<td>显示当前活动的网卡信息。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">-a</td>\n<td>显示系统中所有的网卡配置信息。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">网卡设备名</td>\n<td>显示指定网卡的配置信息。</td>\n</tr>\n</tbody>\n</table>\n<p><strong>设置 IP 地址</strong></p>\n<p><strong>命令格式</strong>：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">ifconfig</span> 网卡设备名 IP地址 netmask 子网掩码\n\n<span class=\"token comment\">#使用ifconfig将ens33网卡的ip改成192.168.60.133，子网掩码改成255.255.255.0</span>\n<span class=\"token function\">ifconfig</span> ens33 <span class=\"token number\">192.168</span>.60.133 netmask <span class=\"token number\">255.255</span>.255.0<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>注意：这种方式设置 IP 只是临时性的，如果重启机器，IP 又会恢复到原来的 IP。</p></blockquote>\n<h5 id=\"strong-ifdown-strong\"><strong>ifdown</strong></h5>\n<p>用于禁用网卡</p>\n<p><strong>命令格式</strong>：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">ifdown</span> 网卡设备名\n\n<span class=\"token comment\">#禁用ens33</span>\n<span class=\"token function\">ifdown</span> ens33<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<h5 id=\"ifup\">ifup</h5>\n<p>重新启用网卡</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">ifup</span> 网卡设备名\n\n<span class=\"token comment\">#重新启用ens33</span>\n<span class=\"token function\">ifup</span> ens33<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<h5 id=\"ping\">ping</h5>\n<p>ping 命令用于检测主机。执行 ping 指令会发出要求回应的信息，若远端主机的网络功能没有问 题，就会回应该信息，因而得知该主机运作正常。</p>\n<p><strong>命令格式</strong>：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">ping</span> <span class=\"token punctuation\">[</span>选项<span class=\"token punctuation\">]</span> 主机ip地址、主机名、或者域名\n\n选项说明：\n-c：指定向目标主机发送的报文次数。\n-s：指定发送报文的大小，单位字节。\n-W：设置等待接收响应报文的时间间隔，单位秒。<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>ping 命令默认情况下是一直往目标地址发生 ping 请求，然后数据包的大小是 64KB，直到按” Ctrl+c“才退出。</p></blockquote>\n<h3 id=\"ruan-jian-de-an-zhuang\">软件的安装</h3>\n<p>Linux 各个不同版本中内置了一些不同的工具用于下载和安装软件</p>\n<h4 id=\"wen-jian-de-xia-zai\">文件的下载</h4>\n<h5 id=\"wget\">wget</h5>\n<p>wget 是 Linux 中的一个下载文件的工具，wget 是在 Linux 下开发的开放源代码的软件，作者是 Hrvoje Niksic，后来被移植到包括 Windows 在内的各个平台上。</p>\n<p>wget 工具体积小但功能完善，它支持断点下载功能，同时支持 FTP 和 HTTP 下载方式</p>\n<p><strong>安装 wget</strong></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">yum <span class=\"token function\">install</span> <span class=\"token parameter variable\">-y</span> <span class=\"token function\">wget</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><strong>命令格式</strong></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">wget</span> <span class=\"token punctuation\">[</span>参数<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>URL地址<span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><strong>使用实例</strong>:</p>\n<p><strong>实例 1：使用 wget 下载单个文件</strong></p>\n<p>以下的例子是从网络下载一个文件并保存在当前目录，在下载的过程中会显示进度条，包含下载完成百分比，已经下载的字节，当前下载速度和剩余下载时间：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">wget</span> http://www.minjieren.com/wordpress-3.1-zh_CN.zip<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><strong>实例 2：使用 wget -O 下载并以不同的文件名保存</strong></p>\n<p>wget 默认会以最后一个符合”/”的后面的字符来命名，对于动态链接的下载通常文件名会不正确下面的例子会下载一个文件并以名称 download.aspx?id=1080 保存，即使下载的文件是 zip 格式，它仍然以 download.php?id=1080 命令：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">wget</span> http://www.minjieren.com/download?id<span class=\"token operator\">=</span><span class=\"token number\">1</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>为了解决这个问题，我们可以使用参数-O 来指定一个文件名：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">wget</span> <span class=\"token parameter variable\">-O</span> wordpress.zip http://www.minjieren.com/download.aspx?id<span class=\"token operator\">=</span><span class=\"token number\">1080</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><strong>实例 3：使用 wget –limit -rate 限速下载</strong></p>\n<p>当你执行 wget 的时候，它默认会占用全部可能的宽带下载。但是当你准备下载一个大文件，而你还需要下载其它文件时就有必要限速了：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">wget</span> --limit-rate<span class=\"token operator\">=</span>300k http://www.minjieren.com/wordpress-3.1-zh_CN.zip<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><strong>实例 4：使用 wget -c 断点续传</strong></p>\n<p>使用 wget -c 重新启动下载中断的文件，对于我们下载大文件时突然由于网络等原因中断非常有帮助，我们可以继续接着下载而不是重新下载一个文件。需要继续中断的下载时可以使用-c 参数</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">wget</span> <span class=\"token parameter variable\">-c</span> http://www.minjieren.com/wordpress-3.1-zh_CN.zip<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><strong>实例 5：使用 wget -b 后台下载</strong></p>\n<p>对于下载非常大的文件的时候，我们可以使用参数-b 进行后台下载</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">wget</span> <span class=\"token parameter variable\">-b</span> http://www.minjieren.com/wordpress-3.1-zh_CN.zip\n\n<span class=\"token function\">wget</span> <span class=\"token parameter variable\">-b</span> http://www.minjieren.com/wordpress-3.1-zh_CN.zip\nContinuing <span class=\"token keyword\">in</span> background, pid <span class=\"token number\">1840</span>.\nOutput will be written to `wget-log'.<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>你可以使用以下命令来察看下载进度：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">tail</span> <span class=\"token parameter variable\">-f</span> wget-log<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><strong>实例 6：伪装代理名称下载</strong></p>\n<p>有些网站能通过根据判断代理名称不是浏览器而拒绝你的下载请求。不过你可以通过–user-agent 参数伪装。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">wget</span> --user-agent<span class=\"token operator\">=</span><span class=\"token string\">\"Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US) AppleWebKit/534.16 (KHTML, like Gecko) Chrome/10.0.648.204 Safari/534.16\"</span> http://www.minjieren.com/wordpress-3.1-zh_CN.zip<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><strong>实例 7：使用 wget –spider 测试下载链接</strong></p>\n<p>当你打算进行定时下载，你应该在预定时间测试下载链接是否有效。我们可以增加–spider 参数进行检查。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">wget</span> <span class=\"token parameter variable\">--spider</span> URL<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>如果下载链接正确，将会显示：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">wget</span> <span class=\"token parameter variable\">--spider</span> URL\n\nSpider mode enabled. Check <span class=\"token keyword\">if</span> remote <span class=\"token function\">file</span> exists.\nHTTP request sent, awaiting response<span class=\"token punctuation\">..</span>. <span class=\"token number\">200</span> OK\nLength: unspecified <span class=\"token punctuation\">[</span>text/html<span class=\"token punctuation\">]</span>\nRemote <span class=\"token function\">file</span> exists and could contain further links,\nbut recursion is disabled -- not retrieving.<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>这保证了下载能在预定的时间进行，但当你给错了一个链接，将会显示如下错误：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">wget</span> <span class=\"token parameter variable\">--spider</span> url\n\nSpider mode enabled. Check <span class=\"token keyword\">if</span> remote <span class=\"token function\">file</span> exists.\nHTTP request sent, awaiting response<span class=\"token punctuation\">..</span>. <span class=\"token number\">404</span> Not Found\nRemote <span class=\"token function\">file</span> does not exist -- broken link<span class=\"token operator\">!</span><span class=\"token operator\">!</span><span class=\"token operator\">!</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>你可以在以下几种情况下使用 spider 参数：</p>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>定时下载之前进行检查</p>\n</li>\n<li class=\"lvl-2\">\n<p>间隔检测网站是否可用</p>\n</li>\n<li class=\"lvl-2\">\n<p>检查网站页面的死链接</p>\n</li>\n</ul>\n<p><strong>实例 8：使用 wget –tries 增加重试次数</strong></p>\n<p>如果网络有问题或下载一个大文件也有可能失败。wget 默认重试 20 次连接下载文件。如果需要，你可以使用–tries 增加重试次数：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">wget</span> <span class=\"token parameter variable\">--tries</span><span class=\"token operator\">=</span><span class=\"token number\">40</span> URL<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><strong>实例 9：使用 wget -i 下载多个文件</strong></p>\n<p>首先，保存一份下载链接文件：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">cat</span> <span class=\"token operator\">></span> filelist.txt\nurl1\nurl2\nurl3\nurl4\n<span class=\"token number\">12345</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>接着使用这个文件和参数-i 下载：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">wget -i filelist.txt\n1<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p><strong>实例 10：使用 wget –mirror 镜像网站</strong></p>\n<p>下载整个网站到本地：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">wget --mirror -p --convert-links -P .&#x2F;LOCAL URL\n1<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>说明：</p>\n<p>–miror:开户镜像下载</p>\n<p>-p:下载所有为了 html 页面显示正常的文件</p>\n<p>–convert-links:下载后，转换成本地的链接</p>\n<p>-P ./LOCAL：保存所有文件和目录到本地指定目录</p>\n<p><strong>实例 11：使用 wget –reject 过滤指定格式下载</strong></p>\n<p>下载一个网站，但你不希望下载图片，可以使用以下命令：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">wget</span> <span class=\"token parameter variable\">--reject</span><span class=\"token operator\">=</span>gif url<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><strong>实例 12：使用 wget -o 把下载信息存入日志文件</strong></p>\n<p>不希望下载信息直接显示在终端而是在一个日志文件，可以使用：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">wget</span> <span class=\"token parameter variable\">-o</span> download.log URL<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><strong>实例 13：使用 wget -Q 限制总下载文件大小</strong></p>\n<p>命令：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">wget</span> <span class=\"token parameter variable\">-Q5m</span> <span class=\"token parameter variable\">-i</span> filelist.txt<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>说明：</p>\n<p>当你想要下载的文件超过 5M 而退出下载，你可以使用。注意：这个参数对单个文件下载不起作用，只能递归下载时才有效。</p>\n<p><strong>实例 14：使用 wget -r -A 下载指定格式文件</strong></p>\n<p>Example：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">wget</span> <span class=\"token parameter variable\">-r</span> <span class=\"token parameter variable\">-A.pdf</span> url<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>可以在以下情况使用该功能：</p>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>下载一个网站的所有图片</p>\n</li>\n<li class=\"lvl-2\">\n<p>下载一个网站的所有视频</p>\n</li>\n<li class=\"lvl-2\">\n<p>下载一个网站的所有 PDF 文件</p>\n</li>\n</ul>\n<p><strong>实例 15：使用 wget FTP 下载</strong></p>\n<p>使用 wget 匿名 ftp 下载：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">wget</span> ftp-url<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>使用 wget 用户名和密码认证的 ftp 下载</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">wget</span> --ftp-user<span class=\"token operator\">=</span>USERNAME --ftp-password<span class=\"token operator\">=</span>PASSWORD url<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h5 id=\"curl\">curl</h5>\n<p><code>cURL</code>是用于数据传输的命令行工具，支持多种传输协议，包括 HTTP、HTTPS、SCP、FTP、SFTP、TELNET、FILE、SMTP、POP3 等等。可以使用<code>cURL</code>进行<code>HTTP/HTTPS</code>请求、上传/下载文件等，且支持<code>Cookie</code>、用户身份验证、代理支持、限速等。</p>\n<p><strong>基本语法</strong>:</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">curl</span> <span class=\"token punctuation\">[</span>options<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>URL<span class=\"token punctuation\">..</span>.<span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><strong>常见用法</strong>:</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#1、下载(option:-o或者option:-O)</span>\n\n<span class=\"token comment\">#1.1、下载页面：</span>\n\n<span class=\"token function\">curl</span> <span class=\"token parameter variable\">-o</span> dodo1.jpg http:www.linux.com/dodo1.JPG\n<span class=\"token comment\">#要注意-O这里后面的url要具体到某个文件，不然抓不下来</span>\n<span class=\"token function\">curl</span> <span class=\"token parameter variable\">-O</span> http://www.linux.com/dodo1.JPG\n\n<span class=\"token comment\">#1.2：循环下载</span>\n<span class=\"token comment\">#有时候下载图片可以能是前面的部分名称是一样的，就最后的尾椎名不一样。这样就会把dodo1，dodo2，dodo3，dodo4，dodo5全部保存下来</span>\n<span class=\"token function\">curl</span> <span class=\"token parameter variable\">-O</span> http://www.linux.com/dodo<span class=\"token punctuation\">[</span><span class=\"token number\">1</span>-5<span class=\"token punctuation\">]</span>.JPG\n\n\n<span class=\"token comment\">#1.3：下载重命名</span>\n<span class=\"token comment\">#在hello/dodo1.JPG的文件下载下来就会变成hello_dodo1.JPG,其他文件依此类推，从而有效的避免了文件被覆盖</span>\n<span class=\"token function\">curl</span> <span class=\"token parameter variable\">-o</span> <span class=\"token comment\">#1_#2.JPG http://www.linux.com/&#123;hello,bb&#125;/dodo[1-5].JPG</span>\n\n<span class=\"token comment\">#由于下载的hello与bb中的文件名都是dodo1，dodo2，dodo3，dodo4，dodo5。因此第二次下载的会把第一次下载的覆盖，这样就需要对文件进行重命名。</span>\n<span class=\"token function\">curl</span> <span class=\"token parameter variable\">-O</span> http://www.linux.com/<span class=\"token punctuation\">&#123;</span>hello,bb<span class=\"token punctuation\">&#125;</span>/dodo<span class=\"token punctuation\">[</span><span class=\"token number\">1</span>-5<span class=\"token punctuation\">]</span>.JPG\n\n\n<span class=\"token comment\">#1.4：分块下载(option：-r)</span>\n<span class=\"token function\">curl</span> <span class=\"token parameter variable\">-r</span> <span class=\"token number\">0</span>-100 <span class=\"token parameter variable\">-o</span> dodo1_part1.JPG http://www.linux.com/dodo1.JPG\n<span class=\"token function\">curl</span> <span class=\"token parameter variable\">-r</span> <span class=\"token number\">100</span>-200 <span class=\"token parameter variable\">-o</span> dodo1_part2.JPG http://www.linux.com/dodo1.JPG\n<span class=\"token function\">curl</span> <span class=\"token parameter variable\">-r</span> <span class=\"token number\">200</span>- <span class=\"token parameter variable\">-o</span> dodo1_part3.JPG http://www.linux.com/dodo1.JPG\n<span class=\"token function\">cat</span> dodo1_part* <span class=\"token operator\">></span> dodo1.JPG  <span class=\"token comment\">#这样就可以查看dodo1.JPG的内容了</span>\n\n\n<span class=\"token comment\">#1.5：通过ftp下载文件(option：-u)</span>\ncurl可以通过ftp下载文件，curl提供两种从ftp中下载的语法\n<span class=\"token function\">curl</span> <span class=\"token parameter variable\">-O</span> <span class=\"token parameter variable\">-u</span> 用户名:密码 ftp://www.linux.com/dodo1.JPG\n<span class=\"token function\">curl</span> <span class=\"token parameter variable\">-O</span> ftp://用户名:密码@www.linux.com/dodo1.JPG\n\n\n<span class=\"token comment\">#1.6:下载，显示进度条(option：-#)或不显示进度条(option：-s)</span>\n<span class=\"token function\">curl</span> -<span class=\"token comment\"># -O http://www.linux.com/dodo1.JPG</span>\n<span class=\"token function\">curl</span> <span class=\"token parameter variable\">-s</span> <span class=\"token parameter variable\">-O</span> http://www.linux.com/dodo1.JPG\n\n<span class=\"token comment\">#1.7、下载，断点续传(-C &lt;offset>)</span>\n断点续转，从文件头的指定位置开始继续下载/上传；offset续传开始的位置，如果offset值为“-”，curl会自动从文件中识别起始位置开始传输；\n<span class=\"token function\">curl</span> -<span class=\"token comment\"># -o centos6.8.iso -C - http://mirrors.aliyun.com/centos/6.8/isos/x86_64/CentOS-6.8-x86_64-minimal.iso</span>\n<span class=\"token function\">curl</span> <span class=\"token parameter variable\">-C</span> <span class=\"token parameter variable\">-O</span> http://www.linux.com/dodo1.JPG\n\n\n\n<span class=\"token comment\">#2、上传文件(option:-T)</span>\n\n<span class=\"token function\">curl</span> <span class=\"token parameter variable\">-T</span> dodo1.JPG <span class=\"token parameter variable\">-u</span> 用户名:密码 ftp://www.linux.com/img/\n\n\n\n<span class=\"token comment\">#3、伪造来源页面|伪造referer|盗链 (option：-e)</span>\n\n<span class=\"token comment\">#很多服务器会检查http访问的referer从而来控制访问。比如：你是先访问首页，然后再访问首页中的邮箱页面，这里访问邮箱的referer地址就是访问首页成功后的页面地址，如果服务器发现对邮箱页面访问的referer地址不是首页的地址，就断定那是个盗连了</span>\n<span class=\"token comment\">#这样就会让服务器其以为你是从www.linux.com点击某个链接过来的</span>\n<span class=\"token function\">curl</span> <span class=\"token parameter variable\">-e</span> <span class=\"token string\">\"www.linux.com\"</span> http://mail.linux.com\n<span class=\"token comment\">#告诉爱E族，我是从百度来的</span>\n<span class=\"token function\">curl</span> <span class=\"token parameter variable\">-e</span> http://baidu.com http://aiezu.com\n\n\n\n<span class=\"token comment\">#4、伪造代理设备(模仿浏览器)</span>\n\n<span class=\"token comment\">#有些网站需要使用特定的浏览器去访问他们，有些还需要使用某些特定的版本。curl内置option:-A可以让我们指定浏览器去访问网站</span>\n<span class=\"token function\">curl</span> <span class=\"token parameter variable\">-A</span> <span class=\"token string\">\"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.0)\"</span> http://www.linux.com\n<span class=\"token comment\">#告诉爱E族，我是GOOGLE爬虫蜘蛛（其实我是curl命令）</span>\n<span class=\"token function\">curl</span> <span class=\"token parameter variable\">-A</span> <span class=\"token string\">\" Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)\"</span> http://aiezu.com\n<span class=\"token comment\">#告诉爱E族，我用的是微信内置浏览器</span>\n<span class=\"token function\">curl</span> <span class=\"token parameter variable\">-A</span> <span class=\"token string\">\"Mozilla/5.0 AppleWebKit/600 Mobile MicroMessenger/6.0\"</span> http://aiezu.com\n\n\n<span class=\"token comment\">#5、设置http请求</span>\n\n<span class=\"token comment\">#5.1、设置http请求头(或option:-H或option:--head)</span>\n<span class=\"token function\">curl</span> <span class=\"token parameter variable\">-H</span> <span class=\"token string\">\"Cache-Control:no-cache\"</span>  http://aiezu.com\n\n<span class=\"token comment\">#5.2、指定proxy服务器以及其端口(option::-x)</span>\n<span class=\"token comment\">#很多时候上网需要用到代理服务器(比如是使用代理服务器上网或者因为使用curl别人网站而被别人屏蔽IP地址的时候)，幸运的是curl通过使用内置option：-x来支持设置代理</span>\n<span class=\"token function\">curl</span> <span class=\"token parameter variable\">-x</span> <span class=\"token number\">192.168</span>.100.100:1080 http://www.linux.com\n\n\n\n<span class=\"token comment\">#6、http响应头</span>\n\n<span class=\"token comment\">#6.1、查看http响应头(option:-I)</span>\n<span class=\"token comment\"># 看看本站的http头是怎么样的</span>\n<span class=\"token function\">curl</span> <span class=\"token parameter variable\">-I</span>  http://aiezu.com\n输出：\nHTTP/1.1 <span class=\"token number\">200</span> OK\nDate: Fri, <span class=\"token number\">25</span> Nov <span class=\"token number\">2016</span> <span class=\"token number\">16</span>:45:49 GMT\nServer: Apache\nSet-Cookie: <span class=\"token assign-left variable\">rox__Session</span><span class=\"token operator\">=</span>abdrt8vesprhnpc3f63p1df7j4<span class=\"token punctuation\">;</span> <span class=\"token assign-left variable\">path</span><span class=\"token operator\">=</span>/\nExpires: Thu, <span class=\"token number\">19</span> Nov <span class=\"token number\">1981</span> 08:52:00 GMT\nCache-Control: no-store, no-cache, must-revalidate, post-check<span class=\"token operator\">=</span><span class=\"token number\">0</span>, pre-check<span class=\"token operator\">=</span><span class=\"token number\">0</span>\nPragma: no-cache\nVary: Accept-Encoding\nContent-Type: text/html<span class=\"token punctuation\">;</span> <span class=\"token assign-left variable\">charset</span><span class=\"token operator\">=</span>utf-8\n\n<span class=\"token comment\">#6.2、保存http的response里面的header信息(option:-D)</span>\n<span class=\"token function\">curl</span> <span class=\"token parameter variable\">-D</span> cookied.txt http://www.linux.com\n执行后cookie信息就被存到了cookied.txt里面了\n注意：-c<span class=\"token punctuation\">(</span>小写<span class=\"token punctuation\">)</span>产生的cookie和-D里面的cookie是不一样的。\n\n\n\n<span class=\"token comment\">#7、发送表单数据</span>\n\n<span class=\"token function\">curl</span> <span class=\"token parameter variable\">-F</span> <span class=\"token string\">\"pic=@logo.png\"</span> <span class=\"token parameter variable\">-F</span> <span class=\"token string\">\"site=aiezu\"</span>  http://aiezu.com/\n\n\n\n<span class=\"token comment\">#8、cookie</span>\n\n<span class=\"token comment\">#8.1、发送cookie(option:-b）</span>\n<span class=\"token comment\">#有些网站是使用cookie来记录session信息。对于chrome这样的浏览器，可以轻易处理cookie信息，但在curl中只要增加相关参数也是可以很容易的处理cookie</span>\n<span class=\"token function\">curl</span> <span class=\"token parameter variable\">-b</span> <span class=\"token string\">\"domain=aiezu.com\"</span>  http://aiezu.com\n<span class=\"token comment\">#很多网站都是通过监视你的cookie信息来判断你是否按规矩访问他们的网站的，因此我们需要使用保存的cookie信息。内置option: -b</span>\n<span class=\"token function\">curl</span> <span class=\"token parameter variable\">-b</span> cookiec.txt http://www.linux.com\n\n\n<span class=\"token comment\">#8.2、保存http的response里面的cookie信息(option:-c）</span>\n<span class=\"token comment\">#执行后http的response里面的cookie信息就被存到了cookiec.txt里面了</span>\n<span class=\"token function\">curl</span> <span class=\"token parameter variable\">-c</span> cookiec.txt  http://www.linux.com\n\n\n\n<span class=\"token comment\">#9、测试一个网址</span>\n\n<span class=\"token comment\">#9.1、测试一个网址是否可达</span>\n<span class=\"token function\">curl</span> <span class=\"token parameter variable\">-v</span> http://www.linux.com\n\n<span class=\"token comment\">#9.2、测试网页返回值(option:-w [format])</span>\n<span class=\"token function\">curl</span> <span class=\"token parameter variable\">-o</span> /dev/null <span class=\"token parameter variable\">-s</span> <span class=\"token parameter variable\">-w</span> %<span class=\"token punctuation\">&#123;</span>http_code<span class=\"token punctuation\">&#125;</span> www.linux.com\n\n\n\n<span class=\"token comment\">#10、保存访问的网页(>>)</span>\n\n<span class=\"token comment\">#2.1:使用linux的重定向功能保存</span>\n<span class=\"token function\">curl</span> http://www.linux.com <span class=\"token operator\">>></span> linux.html<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"red-hat\">RedHat</h4>\n<h5 id=\"mark-rpm-mark\"><mark>rpm</mark></h5>\n<p>rpm（英文全拼：redhat package manager） 原本是<code>Red Hat Linux</code>发行版专门用来管理 Linux 各项套件的程序，由于它遵循 GPL 规则且功能强大方便，因而广受欢迎。逐渐受到其他发行版的采用。RPM 套件管理方式的出现，让 Linux 易于安装，升级，间接提升了 Linux 的适用度。包的格式为<code>*.rpm</code></p>\n<p><strong>命令格式</strong>:</p>\n<pre class=\"line-numbers language-SHELL\" data-language=\"SHELL\"><code class=\"language-SHELL\">rpm [选项] [文件&#x2F;软件包]<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><strong>常见选项</strong>:</p>\n<table>\n<thead>\n<tr>\n<th>选项</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>-a</strong></td>\n<td>(all)显示所有软件包。</td>\n</tr>\n<tr>\n<td><strong>-q</strong></td>\n<td>(query)查询功能。</td>\n</tr>\n<tr>\n<td><strong>-i</strong></td>\n<td>安装指定的软件包。通常和-v，-h 选项结合使用。</td>\n</tr>\n<tr>\n<td><strong>-e</strong></td>\n<td>(erase)删除指定的软件包。</td>\n</tr>\n<tr>\n<td><strong>-f</strong></td>\n<td>查询拥有指定文件的软件包。</td>\n</tr>\n<tr>\n<td><strong>-l</strong></td>\n<td>(list)显示软件包的文件列表。</td>\n</tr>\n<tr>\n<td>-p</td>\n<td>查询待安装的软件包。</td>\n</tr>\n<tr>\n<td>-s</td>\n<td>显示文件状态，通常结合-l 选项使用。</td>\n</tr>\n<tr>\n<td>-U</td>\n<td>升级指定的软件包。</td>\n</tr>\n<tr>\n<td><strong>-h</strong></td>\n<td>在安装过程中将显示一系列的“#”来表示安装进度。</td>\n</tr>\n<tr>\n<td><strong>-v</strong></td>\n<td>显示指令执行过程。</td>\n</tr>\n<tr>\n<td>-vv</td>\n<td>详细显示指令执行过程，便于排错。</td>\n</tr>\n<tr>\n<td><strong>–nodeps</strong></td>\n<td>强制删除，不管它的依赖关系。</td>\n</tr>\n</tbody>\n</table>\n<p><strong>常用命令</strong>:</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#查询系统中已经安装的全部RPM包</span>\n<span class=\"token function\">rpm</span> <span class=\"token parameter variable\">-qa</span>\n\n<span class=\"token comment\">#结合管道符进行查询</span>\n<span class=\"token function\">rpm</span> <span class=\"token parameter variable\">-qa</span> <span class=\"token operator\">|</span> <span class=\"token function\">more</span>\n<span class=\"token function\">rpm</span> <span class=\"token parameter variable\">-qa</span> <span class=\"token operator\">|</span> <span class=\"token function\">less</span>\n<span class=\"token function\">rpm</span> <span class=\"token parameter variable\">-qa</span> <span class=\"token operator\">|</span> <span class=\"token function\">wc</span> <span class=\"token parameter variable\">-l</span>\n\n<span class=\"token comment\">#结合全局正则表达式进行查询</span>\n<span class=\"token function\">rpm</span> <span class=\"token parameter variable\">-qa</span> <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> python\n\n<span class=\"token comment\">#查询是否安装特定(多个)的软件包</span>\n<span class=\"token function\">rpm</span> <span class=\"token parameter variable\">-q</span> openssh-server <span class=\"token punctuation\">[</span>openssh-clients <span class=\"token punctuation\">..</span>.<span class=\"token punctuation\">]</span> <span class=\"token comment\">#软件包间空格隔开</span>\n\n<span class=\"token comment\">#查询软件包的描述信息</span>\n<span class=\"token function\">rpm</span> <span class=\"token parameter variable\">-qi</span> openssh-server\n\n<span class=\"token comment\">#查询已经安装的软件包的文件列表(即查询软件包的安装目录)</span>\n<span class=\"token function\">rpm</span> <span class=\"token parameter variable\">-ql</span> 软件包名称\n\n<span class=\"token comment\">#查询某个文件所属的软件包</span>\n<span class=\"token function\">rpm</span> <span class=\"token parameter variable\">-qf</span> 文件\n\n<span class=\"token comment\">#安装软件包</span>\n<span class=\"token function\">rpm</span> <span class=\"token parameter variable\">-ivh</span> 软件包名称\n<span class=\"token function\">rpm</span> <span class=\"token parameter variable\">-ivh</span> jdk-8u221-linux-x64.rpm\n\n<span class=\"token comment\">#卸载软件包</span>\n<span class=\"token function\">rpm</span> <span class=\"token parameter variable\">-e</span> 软件包名称<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>rpm 安装软件包过程总结(以安装 jdk8 为例)</p>\n<p>1、把 jdk 解压到“/usr/java/jdk1.8.0_221-amd64”。</p>\n<p>2、在“/etc/alternatives/”创建链接指向解压目录“/usr/java/jdk1.8.0_221-amd64”。</p>\n<p>3、然后在“/usr/bin/”目录下创建链接指向“/etc/alternatives/”。</p>\n<p>4、由于“/usr/bin/”已经被添加到环境变量里面去，我们可以直接使用。</p></blockquote>\n<h5 id=\"mark-yum-mark\"><mark>yum</mark></h5>\n<p>yum（ Yellow dog Updater, Modified）是一个在 <code>Fedora</code> 和 <code>RedHat</code> 以及 <code>SUSE</code> 中的 Shell 前端软件包管理器。<code>基于 RPM 包管理</code>，能够从指定的服务器自动下载 RPM 包并且安装，可以自动处理依赖性关系，并且一次安装所有依赖的软件包，无须繁琐地一次次下载、安装。</p>\n<p>yum 提供了查找、安装、删除某一个、一组甚至全部软件包的命令，而且命令简洁而又好记。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">yum <span class=\"token punctuation\">[</span>options<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>command<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>package <span class=\"token punctuation\">..</span>.<span class=\"token punctuation\">]</span>\n\n\toptions：可选，选项包括-h（帮助），-y（当安装过程提示选择全部为 <span class=\"token string\">\"yes\"</span>），-q（不显示安装的过程）等等。\n\tcommand：要进行的操作。\n\tpackage：安装的包名。\n\n<span class=\"token comment\">#yum常用命令</span>\n<span class=\"token comment\">#1. 列出所有可更新的软件清单命令：</span>\nyum check-update\n\n<span class=\"token comment\">#2. 更新所有软件命令：</span>\nyum update\n\n<span class=\"token comment\">#3. 仅安装指定的软件命令：</span>\nyum <span class=\"token function\">install</span> <span class=\"token operator\">&lt;</span>package_name<span class=\"token operator\">></span>\n\n<span class=\"token comment\">#4. 仅更新指定的软件命令：</span>\nyum update <span class=\"token operator\">&lt;</span>package_name<span class=\"token operator\">></span>\n\n<span class=\"token comment\">#5. 列出所有可安裝的软件清单命令：</span>\nyum list\n\n<span class=\"token comment\">#6. 删除软件包命令：</span>\nyum remove <span class=\"token operator\">&lt;</span>package_name<span class=\"token operator\">></span>\n\n<span class=\"token comment\">#7. 查找软件包命令：</span>\nyum search <span class=\"token operator\">&lt;</span>keyword<span class=\"token operator\">></span>\n\n<span class=\"token comment\">#8. 清除缓存命令:</span>\nyum clean packages: 清除缓存目录下的软件包\nyum clean headers: 清除缓存目录下的 headers\nyum clean oldheaders: 清除缓存目录下旧的 headers\nyum clean, yum clean all <span class=\"token punctuation\">(</span><span class=\"token operator\">=</span> yum clean packages<span class=\"token punctuation\">;</span> yum clean oldheaders<span class=\"token punctuation\">)</span> :清除缓存目录下的软件包及旧的 headers<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"debian-ubuntu\">Debian、Ubuntu</h4>\n<h5 id=\"dpkg\">dpkg</h5>\n<p>dpkg 命令的英文全称是“Debian package”，故名意思是 Debian Linux 系统用来安装、创建和管理软件包的实用工具。能直接本地安装<code>*.deb</code>的包文件</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">dpkg <span class=\"token punctuation\">[</span>参数<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>包名<span class=\"token punctuation\">]</span>\n\n常用参数：\n    <span class=\"token parameter variable\">-i</span>\t安装软件包\n    <span class=\"token parameter variable\">-r</span>\t删除软件包\n    <span class=\"token parameter variable\">-l</span>\t显示已安装软件包列表\n    <span class=\"token parameter variable\">-L</span>\t显示于软件包关联的文件\n    <span class=\"token parameter variable\">-c</span>\t显示软件包内文件列表\n\n<span class=\"token comment\">#安装包</span>\ndpkg <span class=\"token parameter variable\">-i</span> package.deb\n\n<span class=\"token comment\">#删除包</span>\ndpkg <span class=\"token parameter variable\">-r</span> package.deb\n\n<span class=\"token comment\">#列出当前已安装的包</span>\ndpkg <span class=\"token parameter variable\">-l</span>\n\n<span class=\"token comment\">#列出deb包的内容</span>\ndpkg <span class=\"token parameter variable\">-c</span> package.deb\n\n<span class=\"token comment\">#配置</span>\ndpkg <span class=\"token parameter variable\">--configure</span> package<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h5 id=\"apt\">apt</h5>\n<p>apt（Advanced Packaging Tool）是一个在 <code>Debian</code> 和<code>Ubuntu</code>中的 Shell 前端软件包管理器。</p>\n<p>apt 命令提供了查找、安装、升级、删除某一个、一组甚至全部<code>软件包(*.deb)</code>的命令，而且命令简洁而又好记。</p>\n<p>apt 命令执行需要超级管理员权限(root)。</p>\n<p><code>apt</code> = <code>apt-get</code>+ <code>apt-cache</code> + <code>apt-config</code> 中最常用命令选项的集合</p>\n<p><strong>基本格式</strong></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">apt</span> <span class=\"token punctuation\">[</span>options<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>command<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>package <span class=\"token punctuation\">..</span>.<span class=\"token punctuation\">]</span>\n\n\toptions：可选，选项包括 -h（帮助），-y（当安装过程提示选择全部为<span class=\"token string\">\"yes\"</span>），-q（不显示安装的过程）等等。\n\tcommand：要进行的操作。\n\tpackage：安装的包名。<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><strong>常用命令</strong>:</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#列出所有可更新的软件清单命令,刷新存储库索引</span>\n<span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> update\n\n<span class=\"token comment\">#列出可更新的软件包及版本信息：</span>\n<span class=\"token function\">apt</span> list <span class=\"token parameter variable\">--upgradeable</span>\n\n<span class=\"token comment\">#升级所有可升级的软件包</span>\n<span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> upgrade\n\n<span class=\"token comment\">#升级软件包，在升级软件包时自动处理依赖关系：</span>\n<span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> full-upgrade\n\n<span class=\"token comment\">#安装指定的软件命令：</span>\n<span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> <span class=\"token function\">install</span> <span class=\"token operator\">&lt;</span>package_name<span class=\"token operator\">></span>\n\n<span class=\"token comment\">#安装多个软件包：</span>\n<span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> <span class=\"token function\">install</span> <span class=\"token operator\">&lt;</span>package_<span class=\"token operator\"><span class=\"token file-descriptor important\">1</span>></span> <span class=\"token operator\">&lt;</span>package_<span class=\"token operator\"><span class=\"token file-descriptor important\">2</span>></span> <span class=\"token operator\">&lt;</span>package_<span class=\"token operator\"><span class=\"token file-descriptor important\">3</span>></span>\n\n<span class=\"token comment\">#更新指定的软件命令：</span>\n<span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> update <span class=\"token operator\">&lt;</span>package_name<span class=\"token operator\">></span>\n\n<span class=\"token comment\">#显示软件包具体信息,例如：版本号，安装大小，依赖关系等等：</span>\n<span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> show <span class=\"token operator\">&lt;</span>package_name<span class=\"token operator\">></span>\n\n<span class=\"token comment\">#删除软件包命令：</span>\n<span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> remove <span class=\"token operator\">&lt;</span>package_name<span class=\"token operator\">></span>\n\n<span class=\"token comment\">#清理不再使用的依赖和库文件:</span>\n<span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> autoremove\n\n<span class=\"token comment\">#移除软件包及配置文件:</span>\n<span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> purge <span class=\"token operator\">&lt;</span>package_name<span class=\"token operator\">></span>\n\n<span class=\"token comment\">#自动删除不需要的包</span>\n<span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> autoremove\n\n<span class=\"token comment\">#查找软件包命令：</span>\n<span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> search <span class=\"token operator\">&lt;</span>keyword<span class=\"token operator\">></span>\n\n<span class=\"token comment\">#列出所有已安装的包：</span>\n<span class=\"token function\">apt</span> list <span class=\"token parameter variable\">--installed</span>\n\n<span class=\"token comment\">#列出所有已安装的包的版本信息：</span>\n<span class=\"token function\">apt</span> list --all-versions<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"mark-gua-zai-mark\"><mark>挂载</mark></h3>\n<p>挂载在 Linux 系统中是一个比较重要的操作，我们 使用 CentOS 使需要插入 U 盘了，由于我们使用的是命令行不像 Windows 有图形用户界面，那 么直观的帮助用户使用。或者当我们的硬盘满了的时候，我们可能就需要加硬盘,这个需要使用挂载这个功能。</p>\n<h4 id=\"gua-zai-dian\">挂载点</h4>\n<p>由于 Linux 操作系统只有一个根目录(/)，所以当向系统中添加新的存储设备时，不会像 Windows 操作系统那样出现一个新的根目录或者盘符（比如：K 盘，L 盘等）。因此，在 Linux 下 访问新存储设备时需要首先创建挂载点。</p>\n<p><strong>所谓的挂载点就是文件系统中存在的一个目录</strong>,通常情况下，创建在/mnt 目录下，挂载成功后,访问挂载点就是访问新的存储设备。挂载点应该是空目录,否则原来该挂载点中存在的文件将会被隐藏。而且,挂载点在实施挂载操作之前就应该存在。</p>\n<h4 id=\"fdisk\">fdisk</h4>\n<p>Linux fdisk 是一个创建和维护分区表的命令，它兼容 DOS 类型的分区表、BSD 或者 SUN 类型的 磁盘列表。fdisk 能划分的最大分区为**<code>2T</code>**</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">fdisk</span> <span class=\"token punctuation\">[</span>必要参数<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>选择参数<span class=\"token punctuation\">]</span>\n\n必要参数：\n\t<span class=\"token parameter variable\">-l</span> 列出所有分区表\n\t<span class=\"token parameter variable\">-u</span> 与 <span class=\"token parameter variable\">-l</span> 搭配使用，显示分区数目\n\n选择参数：\n\t-s<span class=\"token operator\">&lt;</span>分区编号<span class=\"token operator\">></span> 指定分区\n\t<span class=\"token parameter variable\">-v</span> 版本信息\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><img src=\"/post/Linux%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C.htm/Snipaste_2023-03-21_11-17-25.png\" alt></p>\n<p>我们可以发现系统中有两块硬盘分别是：/dev/sda1 与/dev/sda2，大小分别是 19.1G 与 2G 左 右，前面的是“根节点‘/’”，后面的分区是交换区。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#输入</span>\n<span class=\"token function\">fdisk</span> /指定设备\n<span class=\"token comment\">#可进入该设备以执行分区的相关操作</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"parted\">parted</h4>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p><code>parted</code> 命令可以创建全局惟一的标识符分区表 <a href=\"https://en.wikipedia.org/wiki/GUID_Partition_Table\">GPT</a>，而 <code>fdisk</code> 和 <code>cfdisk</code> 则仅限于 DOS 分区表。</p>\n</li>\n<li class=\"lvl-2\">\n<p><strong>更大的磁盘：</strong> DOS 分区表可以格式化最多 2TB 的磁盘空间，尽管在某些情况下最多可以达到 16TB。然而，一个 GPT 分区表可以处理最多 8ZB 的空间。</p>\n</li>\n<li class=\"lvl-2\">\n<p><strong>更多的分区：</strong> 使用主分区和扩展分区，DOS 分区表只允许 16 个分区。在 GPT 中，默认情况下您可以得到 128 个分区，并且可以选择更多的分区。</p>\n</li>\n<li class=\"lvl-2\">\n<p><strong>可靠性：</strong> 在 DOS 分区表中，只保存了一份分区表备份，在 GPT 中保留了两份分区表的备份（在磁盘的起始和结束部分），同时 GPT 还使用了 <a href=\"https://en.wikipedia.org/wiki/Cyclic_redundancy_check\">CRC</a> 校验和来检查分区表的完整性，在 DOS 分区中并没有实现。</p>\n<h6 id=\"1-lie-chu-fen-qu\">1、列出分区</h6>\n<p>使用 <code>parted -l</code> 来标识你要进行分区的设备。一般来说，第一个硬盘 （<code>/dev/sda</code> 或 <code>/dev/vda</code> ）保存着操作系统， 因此要寻找另一个磁盘，以找到你想要分区的磁盘 (例如，<code>/dev/sdb</code>、<code>/dev/sdc</code>、 <code>/dev/vdb</code>、<code>/dev/vdc</code> 等)。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ <span class=\"token function\">sudo</span> <span class=\"token function\">parted</span> <span class=\"token parameter variable\">-l</span>\n<span class=\"token punctuation\">[</span>sudo<span class=\"token punctuation\">]</span> password <span class=\"token keyword\">for</span> daniel:\nModel: ATA RevuAhn_850X1TU5 <span class=\"token punctuation\">(</span>scsi<span class=\"token punctuation\">)</span>\nDisk /dev/vdc: 512GB\nSector size <span class=\"token punctuation\">(</span>logical/physical<span class=\"token punctuation\">)</span>: 512B/512B\nPartition Table: msdos\nDisk Flags:\nNumber  Start   End    Size   Type     File system  Flags\n <span class=\"token number\">1</span>      1049kB  525MB  524MB  primary  ext4         boot\n <span class=\"token number\">2</span>      525MB   512GB  512GB  primary               lvm<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h5 id=\"2-da-kai-cun-chu-she-bei\">2、打开存储设备</h5>\n<p>使用 <code>parted</code> 选中要分区的设备。在这里例子中，是虚拟系统上的第三个磁盘（<code>/dev/vdc</code>）。指明要使用哪一个设备非常重要。 如果你仅仅输入了 <code>parted</code> 命令而没有指定设备名字， 它会<strong>随机</strong>选择一个设备进行操作。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ <span class=\"token function\">sudo</span> <span class=\"token function\">parted</span> /dev/vdc\nGNU Parted <span class=\"token number\">3.2</span>\nUsing /dev/vdc\nWelcome to GNU Parted<span class=\"token operator\">!</span> Type <span class=\"token string\">'help'</span> to view a list of commands.\n<span class=\"token punctuation\">(</span>parted<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h5 id=\"3-she-ding-fen-qu-biao\">3、 设定分区表</h5>\n<p>设置分区表为 GPT ，然后输入 <code>Yes</code> 开始执行。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">(</span>parted<span class=\"token punctuation\">)</span> mklabel gpt\nWarning: the existing disk label on /dev/vdc will be destroyed\nand all data on this disk will be lost. Do you want to continue?\nYes/No? Yes<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<p><code>mklabel</code> 和 <code>mktable</code> 命令用于相同的目的（在存储设备上创建分区表）。支持的分区表有：aix、amiga、bsd、dvh、gpt、mac、ms-dos、pc98、sun 和 loop。记住 <code>mklabel</code> 不会创建一个分区，而是创建一个分区表。</p>\n<h5 id=\"4-jian-cha-fen-qu-biao\">4、 检查分区表</h5>\n<p>查看存储设备信息:</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">(</span>parted<span class=\"token punctuation\">)</span> print\nModel: Virtio Block Device <span class=\"token punctuation\">(</span>virtblk<span class=\"token punctuation\">)</span>\nDisk /dev/vdc: 1396MB\nSector size <span class=\"token punctuation\">(</span>logical/physical<span class=\"token punctuation\">)</span>: 512B/512B\nPartition Table: gpt\nDisk Flags:\nNumber Start End Size File system Name Flags<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h5 id=\"5-huo-qu-bang-zhu\">5、 获取帮助</h5>\n<p>为了知道如何去创建一个新分区，输入： <code>(parted) help mkpart</code> 。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">(</span>parted<span class=\"token punctuation\">)</span> <span class=\"token builtin class-name\">help</span> mkpart\n  mkpart PART-TYPE <span class=\"token punctuation\">[</span>FS-TYPE<span class=\"token punctuation\">]</span> START END     <span class=\"token function\">make</span> a partition\n        PART-TYPE is one of: primary, logical, extended\n        FS-TYPE is one of: btrfs, nilfs2, ext4, ext3, ext2, fat32, fat16, hfsx, hfs+, hfs, jfs, swsusp,\n        linux-swap<span class=\"token punctuation\">(</span>v1<span class=\"token punctuation\">)</span>, linux-swap<span class=\"token punctuation\">(</span>v0<span class=\"token punctuation\">)</span>, ntfs, reiserfs, hp-ufs, sun-ufs, xfs, apfs2, apfs1, asfs, amufs5,\n        amufs4, amufs3, amufs2, amufs1, amufs0, amufs, affs7, affs6, affs5, affs4, affs3, affs2, affs1,\n        affs0, linux-swap, linux-swap<span class=\"token punctuation\">(</span>new<span class=\"token punctuation\">)</span>, linux-swap<span class=\"token punctuation\">(</span>old<span class=\"token punctuation\">)</span>\n        START and END are disk locations, such as 4GB or <span class=\"token number\">10</span>%.  Negative values count from the end of the\n        disk.  For example, <span class=\"token parameter variable\">-1s</span> specifies exactly the last sector.\n        <span class=\"token string\">'mkpart'</span> makes a partition without creating a new <span class=\"token function\">file</span> system on the partition.  FS-TYPE may be\n        specified to <span class=\"token builtin class-name\">set</span> an appropriate partition ID.<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h5 id=\"6-chuang-jian-fen-qu\">6、 创建分区</h5>\n<p>为了创建一个新分区（在这个例子中，分区 0 有 1396MB），输入下面的命令：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">(</span>parted<span class=\"token punctuation\">)</span> mkpart primary <span class=\"token number\">0</span> 1396MB\nWarning: The resulting partition is not properly aligned <span class=\"token keyword\">for</span> best performance\nIgnore/Cancel? I\n<span class=\"token punctuation\">(</span>parted<span class=\"token punctuation\">)</span> print\nModel: Virtio Block Device <span class=\"token punctuation\">(</span>virtblk<span class=\"token punctuation\">)</span>\nDisk /dev/vdc: 1396MB\nSector size <span class=\"token punctuation\">(</span>logical/physical<span class=\"token punctuation\">)</span>: 512B/512B\nPartition Table: gpt\nDisk Flags:\nNumber Start   End     Size    File system Name Flags\n<span class=\"token number\">1</span>      <span class=\"token number\">17</span>.4kB  1396MB  1396MB  primary<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>文件系统类型（<code>fstype</code>）并不是在 <code>/dev/vdc1</code>上创建 ext4 文件系统。 DOS 分区表的分区类型是主分区 primary、逻辑分区 logical 和扩展分区 extended。 在 GPT 分区表中，分区类型用作分区名称。 在 GPT 下必须提供分区名称；在上例中，<code>primary</code> 是分区名称，而不是分区类型。</p>\n<h5 id=\"7-bao-cun-tui-chu\">7、 保存退出</h5>\n<p>当你退出 <code>parted</code> 时，修改会自动保存。退出请输入如下命令：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">(</span>parted<span class=\"token punctuation\">)</span> quit\nInformation: You may need to update /etc/fstab.\n$<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n</li>\n</ul>\n<h4 id=\"mount\">mount</h4>\n<p>在 Linux 中使用 mount 这个命令来挂载文件系统。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">mount</span> <span class=\"token punctuation\">[</span>选项<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>设备名<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>挂载点<span class=\"token punctuation\">]</span>\n\n 选项：\n\t-r： 以只读方式挂载文件系统。\n\t-w：以读写方式挂载文件系统，默认选项。\n\tmount不加任何参数，会列出系统中所有已经挂载的文件系统。<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><img src=\"/post/Linux%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C.htm/Snipaste_2023-03-21_11-20-18.png\" alt></p>\n<p>比如：“/dev/mapper/centos-root on / type xfs (rw,relatime,seclabel,attr2,inode64,noquota)”，表示“/dev/mapper/centos-root”挂载到“/”下 面了，并且文件类型是“xfs”。</p>\n<h5 id=\"gua-zai-u-pan\">挂载 u 盘</h5>\n<p>使用 fdisk 命令查看 U 盘的分区：</p>\n<p><img src=\"/post/Linux%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C.htm/Snipaste_2023-03-21_11-25-00.png\" alt></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 创建一个目录用于挂载U盘（创建挂载点）。</span>\n<span class=\"token function\">mkdir</span> /root/upan\n<span class=\"token comment\"># 将U盘所在分区挂载到我们刚刚创建的目录下面。</span>\n<span class=\"token function\">mount</span> /dev/sdb /root/upan/\n<span class=\"token comment\"># 对U盘里面的文件进行查看或者操作</span>\n<span class=\"token function\">ls</span> <span class=\"token parameter variable\">-hl</span> /root/upan/\n<span class=\"token comment\"># 卸载U盘</span>\n<span class=\"token function\">umount</span> /dev/sdb<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><strong>如果挂载的时候出现“mount: unknown filesystem type ‘(null)’</strong></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 格式化U盘所在的分区,window的文件系统类型linux无法识别</span>\nmkfs.ext4 /dev/sdb<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<h4 id=\"umount\">umount</h4>\n<p>在 Linux 中使用 umount 这个命令来解挂文件系统。如果某个文件系统你不需要使用了，就可以 使用 umount 命令来进行卸载。这个命令可以把文件系统从 Linux 系统中分离。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">umount</span> <span class=\"token punctuation\">[</span>设备名<span class=\"token punctuation\">]</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h3 id=\"fu-wu\">服务</h3>\n<h4 id=\"strong-fu-wu-de-gai-nian-strong\"><strong>服务的概念</strong></h4>\n<p>服务是指执行指定系统功能的程序、或者进程，以便于支持其它程序的运行，尤其是接近底层 （接近硬件）的程序，比如：FTP、HTTP、防火墙、网络等服务。服务的管理包括：<strong>开启</strong>、<strong>查 看</strong>、<strong>重启</strong>、<strong>停止</strong>等操作</p>\n<h4 id=\"strong-fu-wu-de-fen-lei-strong\"><strong>服务的分类</strong></h4>\n<p>Linux 系统的服务分为<strong>独立运行的服务</strong>和<strong>受 xinetd 管理的服务</strong>两大类。独立运行的服务在系统 启动后可以独立运行并直接进行管理，这种服务与运行级别有关；而 xinetd，其本身是一个独立 运行的服务，它负责管理一些不常用的服务，当这些不常用的服务被请求时，由 xinetd 服务负责 启动运行，完成服务请求，再结束该服务的运行，以减少系统资源的占用，这些服务的启动和停 止都由 xinetd 控制。</p>\n<p>xinetd 服务的配置文件是“/etc/xinetd.conf”，受 xinetd 服务管理的服务在“/etc/xinetd.d”目 录下有相应的配置脚本文件。例如，telnet 服务就是一个受 xinetd 管理的服务。</p>\n<h4 id=\"strong-fu-wu-de-qi-dong-jiao-ben-strong\"><strong>服务的启动脚本</strong></h4>\n<p>在管理服务时，Linux 中的每个服务都有相应的启动脚本，可用于设置启动、停止、重启和查 询服务等功能。所有的服务脚本都保存在“/etc/rc.d/init.d”目录中，脚本名称和服务器名称相对 应。在服务的启动脚本中，一般还有对该脚本文件的有效期和使用方法的描述，可以使用查看命 令来查看。</p>\n<h4 id=\"strong-systemctl-ming-ling-strong\"><strong>systemctl 命令</strong></h4>\n<p>服务在使用过程中可以进行启动、状态查询、停止、重启，实现服务自启动状态设置，禁用服 务等操作。在 Linux 中对服务的管理可以通过 systemctl 命令来实现。之前版本的 CentOS7 使用 <strong>service</strong>命令和<strong>chkconfig</strong>命令实现对服务的状态设置和自启动设置，目前 CentOS Linux 7 使用 <strong>systemctl</strong>替换了原有命令。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">systemctl <span class=\"token punctuation\">[</span>start<span class=\"token operator\">|</span>stop<span class=\"token operator\">|</span>status<span class=\"token operator\">|</span>restart<span class=\"token operator\">|</span>reload<span class=\"token punctuation\">]</span> 服务名\n\n 参数说明:\n \tstart：启动服务。\n\tstop：停止服务。\n\tstatus：查看服务运行情况。\n\trestart：重启服务。\n\treload：重新加载服务，加载更新后的配置文件（并不是所有服务都支持这个选项<span class=\"token punctuation\">)</span>。用户可以使用该命令管理服务，systemctl命令会自动到/etc/rc.d/init.d/下查找并执行相应的服\n务脚本。<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>服务名一般以**“.service”**结尾，这些服务是被 systemctl 监视的进程，如果要求启动或停止的某 个服务不存在，系统将会寻找同名的初始化脚本，即去掉.service 后缀的服务脚本。这主要用于 与传统的 Linux 系统兼容。</p>\n<h4 id=\"she-zhi-fu-wu-zi-qi-dong\">设置服务自启动</h4>\n<h5 id=\"systemctl-she-zhi-zi-qi-dong\">systemctl 设置自启动</h5>\n<p><strong>查看服务是不是自启动</strong></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">systemctl is-enable 服务名称<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><strong>设置服务自启动/取消自启动</strong></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">systemctl enable/disable 服务名\n\n<span class=\"token comment\">#enable：表示设置服务随着系统启动而启动。</span>\n<span class=\"token comment\">#disable：表示设置取消服务随系统启动而启动。</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"mark-jin-cheng-mark\"><mark>进程</mark></h3>\n<h4 id=\"strong-jin-cheng-de-gai-nian-strong\"><strong>进程的概念</strong></h4>\n<p><strong>进程(Process)：是指操作系统中一个独立运行的程序</strong>（这里强调的是运行中的程序，如果程 序不运行，仅仅保存在硬盘上就不能称为进程）。例如在 windows 中，同时运行着 Winxin、 Word、QQ，那么 Winxin 程序是一个进程，Word 程序也是一个进程。在 Windows 操作系统中的 任务管理器中，就可以清晰的看到当前操作系统中正在运行的进程信息。</p>\n<p><strong>进程</strong>，也称<strong>任务</strong>，所有支持多个进程同时执行的操作系统就被称作<strong>多进程操作系统</strong>或<strong>多任务操作系统</strong>，现在主流的操作系统都属于这种类型。</p>\n<h4 id=\"strong-jin-cheng-de-fen-lei-strong\"><strong>进程的分类</strong></h4>\n<p>进程一般分为<strong>交互进程</strong>、批处理进程和<strong>守护进程</strong>三类。</p>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>交互进程指 Shell 下通过执行程序产生的进程，可在前台运行，也可在后台运行。</p>\n</li>\n<li class=\"lvl-2\">\n<p>批处理进程是进程的序列，在执行批处理进程时是不需要人机交互的。</p>\n</li>\n<li class=\"lvl-2\">\n<p>守护进程总是活跃的，一般在后台运行（也叫后台进程）。守护进程一般是由系统在开机时 通过脚本自动启动或者由 root 用户启动的。由于守护进程是一直运行着的，所以它所处的 状态是等待请求处理任务。比如，httpd 服务一直在运行，等待着用户来访问，也就是等待 需要处理的任务。</p>\n</li>\n</ul>\n<h4 id=\"jin-cheng-de-cha-kan\">进程的查看</h4>\n<h5 id=\"ps\">ps</h5>\n<p>用于查看系统进程的信息的命令。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#查找指定进程的信息</span>\n<span class=\"token function\">ps</span> <span class=\"token punctuation\">[</span>options<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">|</span> <span class=\"token function\">grep</span> 进程名<span class=\"token punctuation\">]</span>\noptions:\n    <span class=\"token parameter variable\">-A</span>\t显示所有的进程，跟-e的效果相同\n    <span class=\"token parameter variable\">-a</span>\t显示现行终端机下的所有进程，包括其他用户的进程\n    <span class=\"token parameter variable\">-u</span>\t显示当前用户的进程状态\n    <span class=\"token parameter variable\">-x</span>\t通常与 a 这个参数一起使用，可列出较完整信息\n    <span class=\"token parameter variable\">-l</span>\t较长、较详细的将该PID的信息列出\n    <span class=\"token parameter variable\">-j</span>\t工作的格式<span class=\"token punctuation\">(</span>jobs <span class=\"token function\">format</span><span class=\"token punctuation\">)</span>\n    <span class=\"token parameter variable\">-f</span>\t把进程的所有信息都显示出来\n    <span class=\"token parameter variable\">-e</span>\t表示显示所有继承\n    -p：显示由进程ID指定的进程的信息。\n\n<span class=\"token comment\"># 获得所有用户进程的信息</span>\n<span class=\"token function\">ps</span> <span class=\"token parameter variable\">-aux</span>\n\n<span class=\"token comment\"># 跟more/less一起使用</span>\n<span class=\"token function\">ps</span> <span class=\"token parameter variable\">-aux</span> <span class=\"token operator\">|</span> <span class=\"token function\">more</span>\n\n<span class=\"token comment\"># 查看pid=1号进程的信息</span>\n<span class=\"token function\">ps</span> <span class=\"token parameter variable\">-p</span> <span class=\"token number\">1</span>\n\n<span class=\"token comment\"># 查看MySQL进程的运行情况</span>\n<span class=\"token function\">ps</span> <span class=\"token parameter variable\">-ef</span> <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> mysql\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>ps 只能显示进程的瞬时状态,如果要动态监控进程状态则使用一个’top’指令​ 进程名后的 d​ mysqld​ firewalld​ 是后台进程(守护进程的意思) daemon</p></blockquote>\n<p><strong>查看指定端口的进程</strong></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">ss <span class=\"token punctuation\">[</span>options<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">|</span> <span class=\"token function\">grep</span> 端口号<span class=\"token punctuation\">]</span>\n\nss 是 Socket Statistics 的缩写\noptions:\n -h, –help 帮助\n -V, –version 显示版本号\n -t, –tcp 显示 TCP 协议的 sockets\n -u, –udp 显示 UDP 协议的 sockets\n -x, –unix 显示 unix domain sockets，与 <span class=\"token parameter variable\">-f</span> 选项相同\n -n, –numeric 不解析服务的名称，如 “22” 端口不会显示成 “ssh”\n -l, –listening 只显示处于监听状态的端口\n -p, –processes 显示监听端口的进程<span class=\"token punctuation\">(</span>Ubuntu 上需要 <span class=\"token function\">sudo</span><span class=\"token punctuation\">)</span>\n -a, –all 对 TCP 协议来说，既包含监听的端口，也包含建立的连接\n -r, –resolve 把 IP 解释为域名，把端口号解释为协议名称\n\n<span class=\"token comment\"># 输出所有建立的连接不包含端口</span>\nss <span class=\"token operator\">|</span> <span class=\"token function\">more</span>\n\n<span class=\"token comment\"># 查看主机监听的端口。</span>\nss <span class=\"token parameter variable\">-tnl</span>\n\n<span class=\"token comment\"># 使用 -p查看监听端口的程序名称</span>\nss <span class=\"token parameter variable\">-tlp</span>\n\n<span class=\"token comment\"># 过滤SSH进程的信息。</span>\nss <span class=\"token parameter variable\">-tlp</span> <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> <span class=\"token function\">ssh</span>\nss <span class=\"token parameter variable\">-tnlp</span> <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> <span class=\"token function\">ssh</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h5 id=\"zhong-zhi-jin-cheng\">终止进程</h5>\n<p><strong>kill</strong></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">kill</span> <span class=\"token punctuation\">[</span>信号代码<span class=\"token punctuation\">]</span> 进程编号<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>kill 命令可将指定的信息送至程序。预设的信息 SIGTERM(15)，可将指定进程终止。若仍无法 终止该进程，可使用 SIGKILL(9)，尝试强制删除进程。kill 命令的工作原理是：**向 Linux 系统的内 核发送一个系统操作信号和某个进程的进程标志号，然后系统内核就可以对该进程进行操作。**一 般情况下，kill 命令与 ps、grep 命令结合在一起使用（因为要查询进程的编号）。</p>\n<p><strong>killall</strong></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">killall</span> <span class=\"token punctuation\">[</span>信号代码<span class=\"token punctuation\">]</span> 进程名\n\n<span class=\"token comment\">#关闭sshd所有的进程</span>\n<span class=\"token function\">killall</span> sshd<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"cha-kan-bei-wen-jian-bei-na-ge-jin-cheng-zhan-yong-tuo-zhan\">查看被文件被哪个进程占用(拓展)</h4>\n<h5 id=\"lsof\">lsof</h5>\n<p>lsof 是 List Open File 的缩写, 它主要用来获取被进程打开文件的信息，我们都知道，在 Linux 中，一切皆文件，lsof 命令可以查看所有已经打开了的文件，比如: 普通文件，目录，特殊的块文件，管道，socket 套接字，设备，Unix 域套接字等等，同时，它还可以结合 grep 以及 ps 命令进行更多的高级搜索</p>\n<p><strong>安装</strong></p>\n<p>lsof 命令默认是没有安装的，而且它的使用需要有 root 权限或者赋予普通用于 sudo 权限, 使用以下命令安装</p>\n<pre class=\"line-numbers language-mipsasm\" data-language=\"mipsasm\"><code class=\"language-mipsasm\">yum install -y lsof<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><code>lsof</code> 命令有很多可选参数,以下是一些常用的场景</p>\n<p><strong>列出所有打开的文件</strong></p>\n<p>不带任何参数执行 <code>lsof</code> 命令会输出当前所有活跃进程打开的所有文件</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@ecs-centos-7 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># lsof | more</span>\nCOMMAND     PID   TID    <span class=\"token environment constant\">USER</span>   FD      TYPE             DEVICE  SIZE/OFF       NODE NAME\nsystemd       <span class=\"token number\">1</span>          root  cwd       DIR              <span class=\"token number\">253,1</span>      <span class=\"token number\">4096</span>          <span class=\"token number\">2</span> /\nsystemd       <span class=\"token number\">1</span>          root  rtd       DIR              <span class=\"token number\">253,1</span>      <span class=\"token number\">4096</span>          <span class=\"token number\">2</span> /\nsystemd       <span class=\"token number\">1</span>          root  txt       REG              <span class=\"token number\">253,1</span>   <span class=\"token number\">1624520</span>     <span class=\"token number\">530313</span> /usr/lib/systemd/systemd\nsystemd       <span class=\"token number\">1</span>          root  mem       REG              <span class=\"token number\">253,1</span>     <span class=\"token number\">20064</span>     <span class=\"token number\">528340</span> /usr/lib64/libuuid.so.1.3.0\nsystemd       <span class=\"token number\">1</span>          root  mem       REG              <span class=\"token number\">253,1</span>    <span class=\"token number\">265600</span>     <span class=\"token number\">532853</span> /usr/lib64/libblkid.so.1.1.0\nsystemd       <span class=\"token number\">1</span>          root  mem       REG              <span class=\"token number\">253,1</span>     <span class=\"token number\">90248</span>     <span class=\"token number\">525942</span> /usr/lib64/libz.so.1.2.7\nsystemd       <span class=\"token number\">1</span>          root  mem       REG              <span class=\"token number\">253,1</span>    <span class=\"token number\">157424</span>     <span class=\"token number\">525955</span> /usr/lib64/liblzma.so.5.2.2\nsystemd       <span class=\"token number\">1</span>          root  mem       REG              <span class=\"token number\">253,1</span>     <span class=\"token number\">23968</span>     <span class=\"token number\">526159</span> /usr/lib64/libcap-ng.so.0.0.0\nsystemd       <span class=\"token number\">1</span>          root  mem       REG              <span class=\"token number\">253,1</span>     <span class=\"token number\">19896</span>     <span class=\"token number\">526135</span> /usr/lib64/libattr.so.1.1.0\nsystemd       <span class=\"token number\">1</span>          root  mem       REG              <span class=\"token number\">253,1</span>     <span class=\"token number\">19288</span>     <span class=\"token number\">525996</span> /usr/lib64/libdl-2.17.so\nsystemd       <span class=\"token number\">1</span>          root  mem       REG              <span class=\"token number\">253,1</span>    <span class=\"token number\">402384</span>     <span class=\"token number\">525931</span> /usr/lib64/libpcre.so.1.2.0\nsystemd       <span class=\"token number\">1</span>          root  mem       REG              <span class=\"token number\">253,1</span>   <span class=\"token number\">2156160</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>由于<code>lsof</code>命令会输出很多信息，所以上面例子中使用了 <code>lsof | more</code> 来分页显示命令输出结果</p>\n<p>输出结果中，第一列中 <code>systemd</code> 的进程 ID 是 <code>1</code>,它是一个守护进程</p>\n<p>其中列 <code>COMMAND</code> 、<code>PID</code>、<code>USER</code> 分别表示进程名、进程 ID、所属用户</p>\n<p>列 <code>FD</code> 是文件描述符，下面是可能的类型以及说明</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">FD</th>\n<th style=\"text-align:center\">说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">cwd</td>\n<td style=\"text-align:center\">当前目录</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">txt</td>\n<td style=\"text-align:center\">txt 文件</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">rtd</td>\n<td style=\"text-align:center\">root 目录</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">mem</td>\n<td style=\"text-align:center\">内存映射文件</td>\n</tr>\n</tbody>\n</table>\n<p>列 <code>TYPE</code> 是文件类型，下面是可能的值以及说明</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">TYPE</th>\n<th style=\"text-align:center\">说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">DIR</td>\n<td style=\"text-align:center\">目录</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">REG</td>\n<td style=\"text-align:center\">普通文件</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">CHR</td>\n<td style=\"text-align:center\">字符</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">a_inode</td>\n<td style=\"text-align:center\">Inode 文件</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">FIFO</td>\n<td style=\"text-align:center\">管道或者 socket 文件</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">netlink</td>\n<td style=\"text-align:center\">网络</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">unknown</td>\n<td style=\"text-align:center\">未知</td>\n</tr>\n</tbody>\n</table>\n<p>列 <code>DEVICE</code> 表示设备 ID</p>\n<p>列 <code>SIZE/OFF</code> 表示进程大小</p>\n<p>列 <code>NODE</code> 表示文件的 Inode 号</p>\n<p>列<code>NAME</code> 表示路径或者链接</p>\n<p><strong>列出指定用户已打开的文件</strong></p>\n<p>使用 <code>-u</code> 选项可以列出指定用户已经打开的文件，该选项后面可以接多个用户名，每个用户名之间用空格隔开，表示列出所有指定用户已打开的所有文件</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@ecs-centos-7 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># lsof -u tt | more</span>\nCOMMAND   PID <span class=\"token environment constant\">USER</span>   FD   TYPE DEVICE  SIZE/OFF   NODE NAME\n<span class=\"token function\">bash</span>    <span class=\"token number\">27789</span>   tt  cwd    DIR  <span class=\"token number\">253,1</span>      <span class=\"token number\">4096</span> <span class=\"token number\">131090</span> /home/tt\n<span class=\"token function\">bash</span>    <span class=\"token number\">27789</span>   tt  rtd    DIR  <span class=\"token number\">253,1</span>      <span class=\"token number\">4096</span>      <span class=\"token number\">2</span> /\n<span class=\"token function\">bash</span>    <span class=\"token number\">27789</span>   tt  txt    REG  <span class=\"token number\">253,1</span>    <span class=\"token number\">964600</span> <span class=\"token number\">525779</span> /usr/bin/bash\n<span class=\"token function\">vim</span>     <span class=\"token number\">27813</span>   tt  txt    REG  <span class=\"token number\">253,1</span>   <span class=\"token number\">2337192</span> <span class=\"token number\">531847</span> /usr/bin/vim\n<span class=\"token function\">vim</span>     <span class=\"token number\">27813</span>   tt    4u   REG  <span class=\"token number\">253,1</span>     <span class=\"token number\">12288</span> <span class=\"token number\">131167</span> /home/tt/.p.txt.swp<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>上面的例子中，<code>lsof -u tt</code> 命令表示列出 <code>tt</code> 用户已经打开了的文件，从结果可以看出，用户打开了 <code>/home/tt</code>、<code>/</code>、<code>/usr/bin/bash</code>、<code>/usr/bin/vim</code>、<code>/home/tt/.p.txt.swp</code> 这几个文件</p>\n<p>如果要排除指定用户已经打开的文件，可以在用户名前加 <code>^</code> 符号，下面的命令会列出除<code>tt</code>用户外其他所有用户已打开了的文件</p>\n<pre class=\"line-numbers language-dos\" data-language=\"dos\"><code class=\"language-dos\">lsof -u ^tt | more<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><strong>找出打开着但已被删除了的文件</strong></p>\n<p>有这样一种场景，有一个服务正在往日志文件中写日志，这个时候，不小心把正在写入的日志文件删除了</p>\n<p>上面的场景中，日志文件虽然被删除了，但是文件仍然是打开着的，它仍然占用文件系统的空间，我们可以结合 <code>grep</code> 命令找出这种打开着，但是已经被删除的文件</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>root@ecs-centos-7 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># lsof -u tt | grep deleted</span>\n<span class=\"token function\">vim</span>     <span class=\"token number\">27813</span>   tt    4u   REG  <span class=\"token number\">253,1</span>    <span class=\"token number\">12288</span> <span class=\"token number\">131167</span> /home/tt/.p.txt.swp<span class=\"token punctuation\">(</span>deleted<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>上面例子中使用 <code>lsof -u tt | grep deleted</code> 命令查看用户 <code>tt</code>打开着的确被删除的文件</p>\n<p>从结果可以看出，在往 <code>p.txt</code>写入内容的时候，文件被删除了</p>\n<p><strong>列出所有打开了的网络文件</strong></p>\n<pre class=\"line-numbers language-x86asm\" data-language=\"x86asm\"><code class=\"language-x86asm\">[root@ecs-centos-7 ~]# lsof -i\nCOMMAND    PID  USER   FD   TYPE DEVICE SIZE&#x2F;OFF NODE NAME\nntpd       567   ntp   18u  IPv4  12657      0t0  UDP localhost:ntp\nntpd       567   ntp   22u  IPv6  16095      0t0  UDP ecs-centos-7.4-64bit-20200212:ntp\ndhclient   651  root    6u  IPv4  14594      0t0  UDP *:bootpc\nmaster     960  root   13u  IPv4  15791      0t0  TCP localhost:smtp (LISTEN)\nmaster     960  root   14u  IPv6  15792      0t0  TCP localhost:smtp (LISTEN)\nmysqld    1053 mysql   13u  IPv6  15147      0t0  TCP *:mysql (LISTEN)\nsshd      1348  root    3u  IPv4  16698      0t0  TCP *:ssh (LISTEN)<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>列出所有 IPV4/6 网络文件</p>\n</li>\n</ul>\n<p>列出所有已经打开了的 ipv4 网络文件</p>\n<pre class=\"line-numbers language-ruby\" data-language=\"ruby\"><code class=\"language-ruby\"><span class=\"token punctuation\">[</span>root<span class=\"token variable\">@ecs</span><span class=\"token operator\">-</span>centos<span class=\"token operator\">-</span><span class=\"token number\">7</span> <span class=\"token operator\">~</span><span class=\"token punctuation\">]</span><span class=\"token comment\"># lsof -i 4</span>\n<span class=\"token constant\">COMMAND</span>    <span class=\"token constant\">PID</span> <span class=\"token constant\">USER</span>   <span class=\"token constant\">FD</span>   <span class=\"token constant\">TYPE</span> <span class=\"token constant\">DEVICE</span> <span class=\"token constant\">SIZE</span><span class=\"token operator\">/</span><span class=\"token constant\">OFF</span> <span class=\"token constant\">NODE</span> <span class=\"token constant\">NAME</span>\nntpd       <span class=\"token number\">567</span>  ntp   <span class=\"token number\">16</span>u  IPv4  <span class=\"token number\">12651</span>      <span class=\"token number\">0</span>t0  <span class=\"token constant\">UDP</span> <span class=\"token operator\">*</span><span class=\"token symbol\">:ntp</span>\nntpd       <span class=\"token number\">567</span>  ntp   <span class=\"token number\">18</span>u  IPv4  <span class=\"token number\">12657</span>      <span class=\"token number\">0</span>t0  <span class=\"token constant\">UDP</span> localhost<span class=\"token symbol\">:ntp</span>\nntpd       <span class=\"token number\">567</span>  ntp   <span class=\"token number\">21</span>u  IPv4  <span class=\"token number\">16094</span>      <span class=\"token number\">0</span>t0  <span class=\"token constant\">UDP</span> ecs<span class=\"token operator\">-</span>centos<span class=\"token operator\">-</span><span class=\"token number\">7.4</span><span class=\"token operator\">-</span><span class=\"token number\">64</span>bit<span class=\"token operator\">-</span><span class=\"token number\">20200212</span><span class=\"token symbol\">:ntp</span>\ndhclient   <span class=\"token number\">651</span> root    <span class=\"token number\">6</span>u  IPv4  <span class=\"token number\">14594</span>      <span class=\"token number\">0</span>t0  <span class=\"token constant\">UDP</span> <span class=\"token operator\">*</span><span class=\"token symbol\">:bootpc</span>\nmaster     <span class=\"token number\">960</span> root   <span class=\"token number\">13</span>u  IPv4  <span class=\"token number\">15791</span>      <span class=\"token number\">0</span>t0  <span class=\"token constant\">TCP</span> localhost<span class=\"token symbol\">:smtp</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">LISTEN</span><span class=\"token punctuation\">)</span>\nsshd      <span class=\"token number\">1348</span> root    <span class=\"token number\">3</span>u  IPv4  <span class=\"token number\">16698</span>      <span class=\"token number\">0</span>t0  <span class=\"token constant\">TCP</span> <span class=\"token operator\">*</span><span class=\"token symbol\">:ssh</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">LISTEN</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>所有已经打开了的 ipv6 网络文件</p>\n<pre class=\"line-numbers language-ruby\" data-language=\"ruby\"><code class=\"language-ruby\"><span class=\"token punctuation\">[</span>root<span class=\"token variable\">@ecs</span><span class=\"token operator\">-</span>centos<span class=\"token operator\">-</span><span class=\"token number\">7</span> <span class=\"token operator\">~</span><span class=\"token punctuation\">]</span><span class=\"token comment\"># lsof -i 6</span>\n<span class=\"token constant\">COMMAND</span>  <span class=\"token constant\">PID</span>  <span class=\"token constant\">USER</span>   <span class=\"token constant\">FD</span>   <span class=\"token constant\">TYPE</span> <span class=\"token constant\">DEVICE</span> <span class=\"token constant\">SIZE</span><span class=\"token operator\">/</span><span class=\"token constant\">OFF</span> <span class=\"token constant\">NODE</span> <span class=\"token constant\">NAME</span>\nntpd     <span class=\"token number\">567</span>   ntp   <span class=\"token number\">17</span>u  IPv6  <span class=\"token number\">12652</span>      <span class=\"token number\">0</span>t0  <span class=\"token constant\">UDP</span> <span class=\"token operator\">*</span><span class=\"token symbol\">:ntp</span>\nntpd     <span class=\"token number\">567</span>   ntp   <span class=\"token number\">19</span>u  IPv6  <span class=\"token number\">12658</span>      <span class=\"token number\">0</span>t0  <span class=\"token constant\">UDP</span> localhost<span class=\"token symbol\">:ntp</span>\nntpd     <span class=\"token number\">567</span>   ntp   <span class=\"token number\">22</span>u  IPv6  <span class=\"token number\">16095</span>      <span class=\"token number\">0</span>t0  <span class=\"token constant\">UDP</span> ecs<span class=\"token operator\">-</span>centos<span class=\"token operator\">-</span><span class=\"token number\">7.4</span><span class=\"token operator\">-</span><span class=\"token number\">64</span>bit<span class=\"token operator\">-</span><span class=\"token number\">20200212</span><span class=\"token symbol\">:ntp</span>\nmaster   <span class=\"token number\">960</span>  root   <span class=\"token number\">14</span>u  IPv6  <span class=\"token number\">15792</span>      <span class=\"token number\">0</span>t0  <span class=\"token constant\">TCP</span> localhost<span class=\"token symbol\">:smtp</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">LISTEN</span><span class=\"token punctuation\">)</span>\nmysqld  <span class=\"token number\">1053</span> mysql   <span class=\"token number\">13</span>u  IPv6  <span class=\"token number\">15147</span>      <span class=\"token number\">0</span>t0  <span class=\"token constant\">TCP</span> <span class=\"token operator\">*</span><span class=\"token symbol\">:mysql</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">LISTEN</span><span class=\"token punctuation\">)</span>\nsshd    <span class=\"token number\">1348</span>  root    <span class=\"token number\">4</span>u  IPv6  <span class=\"token number\">16700</span>      <span class=\"token number\">0</span>t0  <span class=\"token constant\">TCP</span> <span class=\"token operator\">*</span><span class=\"token symbol\">:ssh</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">LISTEN</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>列出在指定端口上打开的文件</p>\n</li>\n</ul>\n<p>使用 <code>lsof -i:端口号</code> 可以获得所有在指定端口号上打开的文件</p>\n<pre class=\"line-numbers language-ruby\" data-language=\"ruby\"><code class=\"language-ruby\"><span class=\"token punctuation\">[</span>root<span class=\"token variable\">@ecs</span><span class=\"token operator\">-</span>centos<span class=\"token operator\">-</span><span class=\"token number\">7</span> <span class=\"token operator\">~</span><span class=\"token punctuation\">]</span><span class=\"token comment\"># lsof -i:22</span>\n<span class=\"token constant\">COMMAND</span>   <span class=\"token constant\">PID</span> <span class=\"token constant\">USER</span>   <span class=\"token constant\">FD</span>   <span class=\"token constant\">TYPE</span> <span class=\"token constant\">DEVICE</span> <span class=\"token constant\">SIZE</span><span class=\"token operator\">/</span><span class=\"token constant\">OFF</span> <span class=\"token constant\">NODE</span> <span class=\"token constant\">NAME</span>\nsshd     <span class=\"token number\">1348</span> root    <span class=\"token number\">3</span>u  IPv4  <span class=\"token number\">16698</span>      <span class=\"token number\">0</span>t0  <span class=\"token constant\">TCP</span> <span class=\"token operator\">*</span><span class=\"token symbol\">:ssh</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">LISTEN</span><span class=\"token punctuation\">)</span>\nsshd     <span class=\"token number\">1348</span> root    <span class=\"token number\">4</span>u  IPv6  <span class=\"token number\">16700</span>      <span class=\"token number\">0</span>t0  <span class=\"token constant\">TCP</span> <span class=\"token operator\">*</span><span class=\"token symbol\">:ssh</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">LISTEN</span><span class=\"token punctuation\">)</span>\nsshd    <span class=\"token number\">27741</span> root    <span class=\"token number\">3</span>u  IPv4 <span class=\"token number\">458958</span>      <span class=\"token number\">0</span>t0  <span class=\"token constant\">TCP</span> ecs<span class=\"token operator\">-</span>centos<span class=\"token operator\">-</span><span class=\"token number\">7.4</span><span class=\"token operator\">-</span><span class=\"token number\">64</span>bit<span class=\"token operator\">-</span><span class=\"token number\">20200212</span><span class=\"token symbol\">:ssh</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token number\">113.118</span><span class=\"token number\">.121</span><span class=\"token number\">.220</span><span class=\"token operator\">:</span><span class=\"token number\">42395</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">ESTABLISHED</span><span class=\"token punctuation\">)</span>\nsshd    <span class=\"token number\">27819</span> root    <span class=\"token number\">3</span>u  IPv4 <span class=\"token number\">459250</span>      <span class=\"token number\">0</span>t0  <span class=\"token constant\">TCP</span> ecs<span class=\"token operator\">-</span>centos<span class=\"token operator\">-</span><span class=\"token number\">7.4</span><span class=\"token operator\">-</span><span class=\"token number\">64</span>bit<span class=\"token operator\">-</span><span class=\"token number\">20200212</span><span class=\"token symbol\">:ssh</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token number\">113.118</span><span class=\"token number\">.121</span><span class=\"token number\">.220</span><span class=\"token operator\">:</span><span class=\"token number\">19807</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">ESTABLISHED</span><span class=\"token punctuation\">)</span>\nsshd    <span class=\"token number\">27895</span> root    <span class=\"token number\">3</span>u  IPv4 <span class=\"token number\">459828</span>      <span class=\"token number\">0</span>t0  <span class=\"token constant\">TCP</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>上面例子列出了所有在 22 号端口上打开的文件</p>\n<p>在服务器开发中，经常会部署一个网关或者代理程序，用来和客户端通讯，网关或者代理程序需要开放一个固定的端口供客户端连接用</p>\n<p>如果客户端连接不上网关或者代理程序，我们可以用上述命令检查网关或代理程序的端口是否开启，来排除因为端口关闭了导致连接不上网关的情况</p>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>列出使用了指定协议(TCP/UDP) 的文件</p>\n</li>\n</ul>\n<p>使用 <code>lsof -i TCP/UDP</code> 列出使用了 TCP 或 UDP 协议的文件</p>\n<pre class=\"line-numbers language-ruby\" data-language=\"ruby\"><code class=\"language-ruby\"><span class=\"token punctuation\">[</span>root<span class=\"token variable\">@cghost8</span> <span class=\"token operator\">/</span>home<span class=\"token operator\">/</span>cgyx<span class=\"token punctuation\">]</span><span class=\"token comment\"># lsof -i TCP | more</span>\n<span class=\"token constant\">COMMAND</span>      <span class=\"token constant\">PID</span>   <span class=\"token constant\">USER</span>   <span class=\"token constant\">FD</span>   <span class=\"token constant\">TYPE</span>  <span class=\"token constant\">DEVICE</span> <span class=\"token constant\">SIZE</span><span class=\"token operator\">/</span><span class=\"token constant\">OFF</span> <span class=\"token constant\">NODE</span> <span class=\"token constant\">NAME</span>\nsshd        <span class=\"token number\">1704</span>   root    <span class=\"token number\">3</span>u  IPv4   <span class=\"token number\">13593</span>      <span class=\"token number\">0</span>t0  <span class=\"token constant\">TCP</span> <span class=\"token operator\">*</span><span class=\"token symbol\">:ssh</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">LISTEN</span><span class=\"token punctuation\">)</span>\nsshd        <span class=\"token number\">1704</span>   root    <span class=\"token number\">4</span>u  IPv6   <span class=\"token number\">13595</span>      <span class=\"token number\">0</span>t0  <span class=\"token constant\">TCP</span> <span class=\"token operator\">*</span><span class=\"token symbol\">:ssh</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">LISTEN</span><span class=\"token punctuation\">)</span>\nredis<span class=\"token operator\">-</span>serer   <span class=\"token number\">1725</span>   root    <span class=\"token number\">4</span>u  IPv4   <span class=\"token number\">19773</span>      <span class=\"token number\">0</span>t0  <span class=\"token constant\">TCP</span> localhost<span class=\"token operator\">:</span><span class=\"token number\">6380</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">LISTEN</span><span class=\"token punctuation\">)</span>\nnc          <span class=\"token number\">2067</span>   cgyx    <span class=\"token number\">4</span>u  IPv4   <span class=\"token number\">39167</span>      <span class=\"token number\">0</span>t0  <span class=\"token constant\">TCP</span> <span class=\"token operator\">*</span><span class=\"token operator\">:</span><span class=\"token number\">60600</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">LISTEN</span><span class=\"token punctuation\">)</span>\nmysqld      <span class=\"token number\">3020</span>  mysql    <span class=\"token number\">4</span>u  IPv6 <span class=\"token number\">5514608</span>      <span class=\"token number\">0</span>t0  <span class=\"token constant\">TCP</span> <span class=\"token number\">192.168</span><span class=\"token number\">.70</span><span class=\"token number\">.10</span><span class=\"token symbol\">:mysql</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token number\">192.168</span><span class=\"token number\">.70</span><span class=\"token number\">.10</span><span class=\"token operator\">:</span><span class=\"token number\">37084</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">ESTABLISHED</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>使用 <code>lsof -i TCP:3306</code> 列出使用了 TCP 协议并且端口为 3306 的文件</p>\n<pre class=\"line-numbers language-ruby\" data-language=\"ruby\"><code class=\"language-ruby\"><span class=\"token punctuation\">[</span>root<span class=\"token variable\">@cghost8</span> <span class=\"token operator\">/</span>home<span class=\"token operator\">/</span>cgyx<span class=\"token punctuation\">]</span><span class=\"token comment\"># lsof -i TCP:3306</span>\n<span class=\"token constant\">COMMAND</span>      <span class=\"token constant\">PID</span>  <span class=\"token constant\">USER</span>   <span class=\"token constant\">FD</span>   <span class=\"token constant\">TYPE</span>  <span class=\"token constant\">DEVICE</span> <span class=\"token constant\">SIZE</span><span class=\"token operator\">/</span><span class=\"token constant\">OFF</span> <span class=\"token constant\">NODE</span> <span class=\"token constant\">NAME</span>\nmysqld      <span class=\"token number\">3020</span> mysql    <span class=\"token number\">4</span>u  IPv6 <span class=\"token number\">5514608</span>      <span class=\"token number\">0</span>t0  <span class=\"token constant\">TCP</span> <span class=\"token number\">192.168</span><span class=\"token number\">.70</span><span class=\"token number\">.10</span><span class=\"token symbol\">:mysql</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token number\">192.168</span><span class=\"token number\">.70</span><span class=\"token number\">.10</span><span class=\"token operator\">:</span><span class=\"token number\">37084</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">ESTABLISHED</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p>使用 <code>lsof -i TCP:1-1024</code> 列出使用了 TCP 协议并且端口范围为 1 到 1024 的文件</p>\n<pre class=\"line-numbers language-ruby\" data-language=\"ruby\"><code class=\"language-ruby\"><span class=\"token punctuation\">[</span>root<span class=\"token variable\">@cghost8</span> <span class=\"token operator\">/</span>home<span class=\"token operator\">/</span>cgyx<span class=\"token punctuation\">]</span><span class=\"token comment\"># lsof -i TCP:1-1024</span>\n<span class=\"token constant\">COMMAND</span>   <span class=\"token constant\">PID</span>   <span class=\"token constant\">USER</span>   <span class=\"token constant\">FD</span>   <span class=\"token constant\">TYPE</span>  <span class=\"token constant\">DEVICE</span> <span class=\"token constant\">SIZE</span><span class=\"token operator\">/</span><span class=\"token constant\">OFF</span> <span class=\"token constant\">NODE</span> <span class=\"token constant\">NAME</span>\nsshd     <span class=\"token number\">1704</span>   root    <span class=\"token number\">3</span>u  IPv4   <span class=\"token number\">13593</span>      <span class=\"token number\">0</span>t0  <span class=\"token constant\">TCP</span> <span class=\"token operator\">*</span><span class=\"token symbol\">:ssh</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">LISTEN</span><span class=\"token punctuation\">)</span>\nsshd     <span class=\"token number\">1704</span>   root    <span class=\"token number\">4</span>u  IPv6   <span class=\"token number\">13595</span>      <span class=\"token number\">0</span>t0  <span class=\"token constant\">TCP</span> <span class=\"token operator\">*</span><span class=\"token symbol\">:ssh</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">LISTEN</span><span class=\"token punctuation\">)</span>\ncupsd    <span class=\"token number\">1709</span>   root   <span class=\"token number\">12</span>u  IPv6   <span class=\"token number\">39148</span>      <span class=\"token number\">0</span>t0  <span class=\"token constant\">TCP</span> localhost<span class=\"token symbol\">:ipp</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">LISTEN</span><span class=\"token punctuation\">)</span>\ncupsd    <span class=\"token number\">1709</span>   root   <span class=\"token number\">13</span>u  IPv4   <span class=\"token number\">39149</span>      <span class=\"token number\">0</span>t0  <span class=\"token constant\">TCP</span> localhost<span class=\"token symbol\">:ipp</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">LISTEN</span><span class=\"token punctuation\">)</span>\nsmbd     <span class=\"token number\">1824</span>   root   <span class=\"token number\">35</span>u  IPv6   <span class=\"token number\">17658</span>      <span class=\"token number\">0</span>t0  <span class=\"token constant\">TCP</span> <span class=\"token operator\">*</span><span class=\"token symbol\">:microsoft</span><span class=\"token operator\">-</span>ds <span class=\"token punctuation\">(</span><span class=\"token constant\">LISTEN</span><span class=\"token punctuation\">)</span>\nsmbd     <span class=\"token number\">1824</span>   root   <span class=\"token number\">36</span>u  IPv6   <span class=\"token number\">17659</span>      <span class=\"token number\">0</span>t0  <span class=\"token constant\">TCP</span> <span class=\"token operator\">*</span><span class=\"token symbol\">:netbios</span><span class=\"token operator\">-</span>ssn <span class=\"token punctuation\">(</span><span class=\"token constant\">LISTEN</span><span class=\"token punctuation\">)</span>\nsmbd     <span class=\"token number\">1824</span>   root   <span class=\"token number\">37</span>u  IPv4   <span class=\"token number\">17660</span>      <span class=\"token number\">0</span>t0  <span class=\"token constant\">TCP</span> <span class=\"token operator\">*</span><span class=\"token symbol\">:microsoft</span><span class=\"token operator\">-</span>ds <span class=\"token punctuation\">(</span><span class=\"token constant\">LISTEN</span><span class=\"token punctuation\">)</span>\nsmbd     <span class=\"token number\">1824</span>   root   <span class=\"token number\">38</span>u  IPv4   <span class=\"token number\">17661</span>      <span class=\"token number\">0</span>t0  <span class=\"token constant\">TCP</span> <span class=\"token operator\">*</span><span class=\"token symbol\">:netbios</span><span class=\"token operator\">-</span>ssn <span class=\"token punctuation\">(</span><span class=\"token constant\">LISTEN</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><strong>列出目录中所有打开的文件</strong></p>\n<p>可以使用<code>lsof</code>命令列出指定目录中的所有打开文件</p>\n<p>现有一个<code>data</code>目录 ,结构如下：</p>\n<pre class=\"line-numbers language-haskell\" data-language=\"haskell\"><code class=\"language-haskell\"><span class=\"token punctuation\">[</span><span class=\"token hvariable\">root</span><span class=\"token operator\">@</span><span class=\"token hvariable\">ecs</span><span class=\"token operator\">-</span><span class=\"token hvariable\">centos</span><span class=\"token operator\">-</span><span class=\"token number\">7</span> <span class=\"token hvariable\">tt</span><span class=\"token punctuation\">]</span><span class=\"token operator\">#</span> <span class=\"token hvariable\">tree</span> <span class=\"token keyword\">data</span><span class=\"token operator\">/</span>\n<span class=\"token keyword\">data</span><span class=\"token operator\">/</span>\n├── <span class=\"token hvariable\">dira</span>\n│   └── <span class=\"token hvariable\">a</span><span class=\"token punctuation\">.</span><span class=\"token hvariable\">txt</span>\n└── <span class=\"token hvariable\">d</span><span class=\"token punctuation\">.</span><span class=\"token hvariable\">s</span>\n\n<span class=\"token number\">1</span> <span class=\"token hvariable\">directory</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span> <span class=\"token hvariable\">files</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>列出 <code>data</code> 目录中打开的文件</p>\n<pre class=\"line-numbers language-powershell\" data-language=\"powershell\"><code class=\"language-powershell\"><span class=\"token namespace\">[root@ecs-centos-7 tt]</span><span class=\"token comment\"># lsof +D ./data/</span>\nCOMMAND   PID USER   FD   <span class=\"token function\">TYPE</span> DEVICE SIZE/OFF   NODE NAME\nbash    28473 root  cwd    <span class=\"token function\">DIR</span>  253<span class=\"token punctuation\">,</span>1     4096 131146 <span class=\"token punctuation\">.</span><span class=\"token operator\">/</span><span class=\"token keyword\">data</span>\nbash    28502 root  cwd    <span class=\"token function\">DIR</span>  253<span class=\"token punctuation\">,</span>1     4096 131172 <span class=\"token punctuation\">.</span><span class=\"token operator\">/</span><span class=\"token keyword\">data</span><span class=\"token operator\">/</span>dira\nvim     28530 root  cwd    <span class=\"token function\">DIR</span>  253<span class=\"token punctuation\">,</span>1     4096 131172 <span class=\"token punctuation\">.</span><span class=\"token operator\">/</span><span class=\"token keyword\">data</span><span class=\"token operator\">/</span>dira\nvim     28530 root    4u   REG  253<span class=\"token punctuation\">,</span>1    12288 131174 <span class=\"token punctuation\">.</span><span class=\"token operator\">/</span><span class=\"token keyword\">data</span><span class=\"token operator\">/</span>dira/<span class=\"token punctuation\">.</span>a<span class=\"token punctuation\">.</span>txt<span class=\"token punctuation\">.</span>swp\n\n<span class=\"token namespace\">[root@ecs-centos-7 tt]</span><span class=\"token comment\"># lsof +d ./data/</span>\nCOMMAND   PID USER   FD   <span class=\"token function\">TYPE</span> DEVICE SIZE/OFF   NODE NAME\nbash    28473 root  cwd    <span class=\"token function\">DIR</span>  253<span class=\"token punctuation\">,</span>1     4096 131146 <span class=\"token punctuation\">.</span><span class=\"token operator\">/</span><span class=\"token keyword\">data</span>\nbash    28502 root  cwd    <span class=\"token function\">DIR</span>  253<span class=\"token punctuation\">,</span>1     4096 131172 <span class=\"token punctuation\">.</span><span class=\"token operator\">/</span><span class=\"token keyword\">data</span><span class=\"token operator\">/</span>dira\nvim     28530 root  cwd    <span class=\"token function\">DIR</span>  253<span class=\"token punctuation\">,</span>1     4096 131172 <span class=\"token punctuation\">.</span><span class=\"token operator\">/</span><span class=\"token keyword\">data</span><span class=\"token operator\">/</span>dira<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>上面例子中，<code>+D</code> 和 <code>+d</code> 选项都是列出目录中打开的文件</p>\n<p><code>+D</code> 选项会列出一个目录和其子目录中打开的文件，而 <code>+d</code> 选项只会列出当前目录下已打开的文件</p>\n<p><strong>列出指定进程 ID 打开的文件</strong></p>\n<p>进程 ID 是操作系统进程的唯一标识，以下命令列出了进程 ID 为 <code>1053</code> 相关的文件, 从结果中可以知道这个进程 ID 对应的进程是 MySQL</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">[</span>root@ecs<span class=\"token punctuation\">-</span>centos<span class=\"token punctuation\">-</span>7 ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># lsof -p 1053</span>\nCOMMAND  PID  USER   FD   TYPE             DEVICE  SIZE/OFF    NODE NAME\nmysqld  1053 mysql  cwd    DIR              253<span class=\"token punctuation\">,</span>1      4096 1055765 /var/lib/mysql\nmysqld  1053 mysql  rtd    DIR              253<span class=\"token punctuation\">,</span>1      4096       2 /\nmysqld  1053 mysql  txt    REG              253<span class=\"token punctuation\">,</span>1 251841448  534935 /usr/sbin/mysqld\nmysqld  1053 mysql  mem    REG              253<span class=\"token punctuation\">,</span>1    209512  659436 /usr/lib64/mysql/plugin/validate_password.so\nmysqld  1053 mysql    1w   REG              253<span class=\"token punctuation\">,</span>1    206658  924771 /var/log/mysqld.log\nmysqld  1053 mysql    2w   REG              253<span class=\"token punctuation\">,</span>1    206658  924771 /var/log/mysqld.log<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>上述命令中，<code>-p</code> 选项后面可以指定多个进程 ID，每个进程 ID 之间用逗号分隔，如果想排除掉某个进程打开的文件，可以在该进程 ID 前面加上 <code>^</code>符号</p>\n<pre class=\"line-numbers language-css\" data-language=\"css\"><code class=\"language-css\">lsof -p 1<span class=\"token punctuation\">,</span>2<span class=\"token punctuation\">,</span>3<span class=\"token punctuation\">,</span>^4<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>上述命令会列出进程 1，进程 2，进程 3 打开的所有文件，同时忽略进程 4 打开的文件</p>\n<h4 id=\"shi-yong-wen-jian-huo-wen-jian-jie-gou-shi-bie-jin-cheng\">使用文件或文件结构识别进程</h4>\n<h5 id=\"fuser\">fuser</h5>\n<p>用于报告进程使用的文件和网络套接字。fuser 命令列出了本地进程的进程号，那些本地进程使用 file，参数指定的本地或远程文件。每个进程号后面都跟随一个字母，该字母指示进程如何使用文件。</p>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p><code>c</code> ：指示进程的工作目录。</p>\n</li>\n<li class=\"lvl-2\">\n<p><code>e</code> ：指示该文件为进程的可执行文件(即进程由该文件拉起)。</p>\n</li>\n<li class=\"lvl-2\">\n<p><code>f</code> ：指示该文件被进程打开，默认情况下 f 字符不显示。</p>\n</li>\n<li class=\"lvl-2\">\n<p><code>F</code> ：指示该文件被进程打开进行写入，默认情况下 F 字符不显示。</p>\n</li>\n<li class=\"lvl-2\">\n<p><code>r</code> ：指示该目录为进程的根目录。</p>\n</li>\n<li class=\"lvl-2\">\n<p><code>m</code> ：指示进程使用该文件进行内存映射，抑或该文件为共享库文件，被进程映射进内存。</p>\n</li>\n</ul>\n<p><strong>语法</strong></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">fuser<span class=\"token punctuation\">(</span>选项<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>参数<span class=\"token punctuation\">)</span>\n\n选项:\n\t-a：显示命令行中指定的所有文件；\n\t-k：杀死访问指定文件的所有进程；\n\t-i：杀死进程前需要用户进行确认；\n\t-l：列出所有已知信号名；\n\t-m：指定一个被加载的文件系统或一个被加载的块设备；\n\t-n：选择不同的名称空间；\n\t-u：在每个进程后显示所属的用户名。\n\n参数:\n\t文件：可以是文件名或者TCP、UDP端口号。<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><strong>实例</strong></p>\n<p>要列出使用<code>/etc/passwd</code>文件的本地进程的进程号，请输入：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">fuser</span> /etc/passwd<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>要列出使用<code>/etc/filesystems</code>文件的进程的进程号和用户登录名，请输入：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">fuser</span> <span class=\"token parameter variable\">-u</span> /etc/filesystems<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>要终止使用给定文件系统的所有进程，请输入：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">fuser</span> <span class=\"token parameter variable\">-k</span> <span class=\"token parameter variable\">-x</span> <span class=\"token parameter variable\">-u</span> <span class=\"token parameter variable\">-c</span> /dev/hd1  或者  <span class=\"token function\">fuser</span> <span class=\"token parameter variable\">-kxuc</span> /home<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>任一命令都列出了进程号和用户名，然后终止每个正在使用<code>/dev/hd1 (/home)</code>文件系统的进程。仅有 root 用户能终止属于另一用户的进程。如果您正在试图卸下<code>/dev/hd1</code>文件系统，而一个正在访问<code>/dev/hd1</code>文件系统的进程不允许这样，您可能希望使用此命令。</p>\n<p>要列出正在使用已从给定文件系统删除的文件的全部进程，请输入：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">fuser</span> <span class=\"token parameter variable\">-d</span> /usr文件<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><code>/dev/kmem</code> 用于系统映像。<br>\n<code>/dev/mem</code> 也用于系统映像。</p>\n<h4 id=\"sha-si-zhi-ding-yong-hu-de-suo-you-jin-cheng\">杀死指定用户的所有进程</h4>\n<p>前面介绍了列出指定用户所有打开的文件，我们可以组合 <code>kill</code> 命令一起使用，实现杀死指定用户的所有进程的功能，具体的命令如下</p>\n<pre class=\"line-numbers language-perl\" data-language=\"perl\"><code class=\"language-perl\">kill <span class=\"token operator\">-</span><span class=\"token number\">9</span> <span class=\"token string\">`lsof -t -u tt`</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>上述命令中，<code>lsof -u tt</code> 是列出<code>tt</code>用户所有打开的文件，加上 <code>-t</code> 选项之后表示结果只列出 PID 列，也就是进程 ID 列，其他列都忽略，前面的 <code>kill -9</code> 表示强制结束指定的进程 ID</p>\n<h3 id=\"shell-1\">shell</h3>\n<h4 id=\"mark-echo-mark\"><mark>echo</mark></h4>\n<p>用于字符串的输出</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">echo</span> string\n\n<span class=\"token comment\">#1.显示字符串</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"It is a test\"</span>\n<span class=\"token comment\">#这里的双引号完全可以省略，以下命令与上面实例效果一致</span>\n<span class=\"token builtin class-name\">echo</span> It is a <span class=\"token builtin class-name\">test</span>\n\n<span class=\"token comment\">#2.显示转义字符</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token entity\" title=\"\\&quot;\">\\\"</span>It is a test<span class=\"token entity\" title=\"\\&quot;\">\\\"</span>\"</span>\n<span class=\"token comment\">#结果</span>\n<span class=\"token string\">\"It is a test\"</span>\n\n<span class=\"token comment\">#3.显示变量</span>\n<span class=\"token comment\">#read 命令从标准输入中读取一行,并把输入行的每个字段的值指定给 shell 变量</span>\n<span class=\"token comment\">#!/bin/sh</span>\n<span class=\"token builtin class-name\">read</span> name\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\">$name</span> It is a test\"</span>\n<span class=\"token comment\">#以上代码保存为 test.sh，name 接收标准输入的变量，结果将是:</span>\n<span class=\"token punctuation\">[</span>root@www ~<span class=\"token punctuation\">]</span><span class=\"token comment\"># sh test.sh</span>\nOK                     <span class=\"token comment\">#标准输入</span>\nOK It is a <span class=\"token builtin class-name\">test</span>        <span class=\"token comment\">#输出</span>\n\n\n<span class=\"token comment\">#4.显示换行</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token parameter variable\">-e</span> <span class=\"token string\">\"OK! <span class=\"token entity\" title=\"\\n\">\\n</span>\"</span> <span class=\"token comment\"># -e 开启转义</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"It is a test\"</span>\n<span class=\"token comment\">#输出结果：</span>\nOK<span class=\"token operator\">!</span>\n\nIt is a <span class=\"token builtin class-name\">test</span>\n\n\n<span class=\"token comment\">#6.显示结果定向至文件</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"It is a test\"</span> <span class=\"token operator\">></span> myfile\n\n<span class=\"token comment\">#7.原样输出字符串，不进行转义或取变量(用单引号)</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">'$name\\\"'</span>\n<span class=\"token comment\">#输出结果:</span>\n<span class=\"token variable\">$name</span><span class=\"token punctuation\">\\</span>\"\n\n\n<span class=\"token comment\">#8.显示命令执行结果(使用反引号)</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token function\">date</span><span class=\"token variable\">`</span></span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"mark-hou-tai-yun-xing-ren-wu-mark\"><mark>后台运行任务</mark></h3>\n<h4 id=\"ren-wu-ri-zhi-da-yin\">任务日志打印</h4>\n<p>0:标准输入 操作重定向符为<code>&lt;</code></p>\n<p>1:标准输出(不指定的话默认省略)</p>\n<p>2:错误输出</p>\n<table>\n<thead>\n<tr>\n<th>重定向操作符</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>&gt;</td>\n<td>指定标准输出文件(即无报错输出)，若有则覆盖</td>\n</tr>\n<tr>\n<td>&gt;&gt;</td>\n<td>指定标准输出文件，若有则追加</td>\n</tr>\n<tr>\n<td>2&gt;</td>\n<td>错误重定向，如果重定向文件存在，则覆盖</td>\n</tr>\n<tr>\n<td>2&gt;&gt;</td>\n<td>错误重定向，如果重定向文件存在，则追加</td>\n</tr>\n<tr>\n<td>&amp;&gt;</td>\n<td>错误重定向和标准输出重定向一起操作，如果重定向文件存在，则覆盖</td>\n</tr>\n<tr>\n<td>&amp;&gt;&gt;</td>\n<td>错误重定向和标准输出重定向一起操作，如果重定向文件存在，则追加</td>\n</tr>\n</tbody>\n</table>\n<p>这个命令可以实现两个文件的合并</p>\n<pre class=\"line-numbers language-plain\" data-language=\"plain\"><code class=\"language-plain\">cat helloWord1.txt >> helloWord2.txt<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>&amp;1 表示标准输出的引用，所以 2&gt;&amp;1 是指把标准错误输出重定向到标准输出的引用，即也重定向到 file</p>\n<table>\n<thead>\n<tr>\n<th>重定向操作符</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>cmd &gt; filename 2&gt;&amp;1</td>\n<td>把标准输出和标准错误一起重定向到一个文件中。</td>\n</tr>\n<tr>\n<td>cmd &gt;&gt; filename 2&gt;&amp;1</td>\n<td>把标准输出和标准错误一起重定向到一个文件中(追加)。</td>\n</tr>\n<tr>\n<td>cmd &lt; filename</td>\n<td>输入重定向，命令的输入不是通过键盘来完成，而是通过其它方式实 现。cmd 命令以 filename 文件作为标准输入。</td>\n</tr>\n<tr>\n<td>cmd &lt; filename &gt; filename2</td>\n<td>把 cmd 命令以 filename 文件作为标准输入，以 filename2 文件作为标准 输出。</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"nohup\">nohup</h4>\n<p>使进程后台不挂起运行（即用户退出登录后，进程仍然运行）</p>\n<pre class=\"line-numbers language-plain\" data-language=\"plain\"><code class=\"language-plain\">nohup command [Args...] [&amp;]\n\ncommand ： 需要执行的命令\n[Args...] : 些参数，可以指定输出文件\n&amp; ：让命令在后台执行，终端正常退出后命令仍旧执行,即使用exit命令<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"mark-chuang-jian-ding-shi-ren-wu-mark\"><mark>创建定时任务</mark></h3>\n<h4 id=\"cron-he-crontab\">cron 和 crontab</h4>\n<p>cron 是系统主要的非常好用的调度进程，它可以在无需人工干预的情况下运行作业。我们可以 通过 crontab 的命令提交、编辑或删除相应的作业。每一个用户都可以有一个 crontab 文件来保存 调度信息。可以使用它运行任意一个 shell 脚本或某个命令，可以是每小时运行一次，每一天、或 一周一次，这完全取决于用户自己。每一个用户都可以有自己的 crontab 文件，但在一个较大的 系统中，系统管理员一般会禁止这些文件，而只在整个系统保留一个这样的文件。系统管理员是 通过**/etc/cron.deny<strong>和</strong>/etc/cron.allow**这两个文件来禁止或允许用户拥有自己的 crontab 文件。</p>\n<p>如果我们把 test 用户加入到**/etc/cron.deny**文件中去：</p>\n<p><img src=\"/post/Linux%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C.htm/Snipaste_2023-04-12_07-43-12.png\" alt></p>\n<p>如果我们以 test 用户登录，然后配置 crontab，会得到下面的提示：</p>\n<p><img src=\"/post/Linux%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C.htm/Snipaste_2023-04-12_07-44-12.png\" alt></p>\n<h5 id=\"crontab-ming-ling\">crontab 命令</h5>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">crontab</span> <span class=\"token punctuation\">[</span>-u user<span class=\"token punctuation\">]</span> <span class=\"token function\">file</span>\n<span class=\"token comment\">#或者</span>\n<span class=\"token function\">crontab</span> <span class=\"token punctuation\">[</span> <span class=\"token parameter variable\">-u</span> user <span class=\"token punctuation\">]</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token parameter variable\">-l</span> <span class=\"token operator\">|</span> <span class=\"token parameter variable\">-r</span> <span class=\"token operator\">|</span> <span class=\"token parameter variable\">-e</span> <span class=\"token punctuation\">&#125;</span>\n\nOptions:\n\t-u：用户名，一般不用，都是自己管理自己的crontab任务。\n\t-e：编辑<span class=\"token punctuation\">(</span>edit<span class=\"token punctuation\">)</span>crontab文件。\n\t-l：列出<span class=\"token punctuation\">(</span>list<span class=\"token punctuation\">)</span>crontab文件中的内容。\n\t-r：删除<span class=\"token punctuation\">(</span>remove<span class=\"token punctuation\">)</span>crontab文件。\n\n<span class=\"token comment\">#如果使用自己的名字登录，就不用使用-u选项，因为在执行crontab命令时，该命令能够知道当前的用户。</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><strong>crontab 的域</strong></p>\n<p>为了能够在特定的时间运行作业，需要了解 crontab 文件每个条目的格式，以及其中各个域的 意义。下面就是这些域：</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">列</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">第 1 列</td>\n<td>分钟 1 ～ 59</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">第 2 列</td>\n<td>小时 0 ～ 23（0 表示子夜）</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">第 3 列</td>\n<td>日期 1 ～ 31</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">第 4 列</td>\n<td>月份 1 ～ 12</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">第 5 列</td>\n<td>星期 0 ～ 6（注意：0 表示星期天）</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">第 6 列</td>\n<td>要运行的命令或者脚本</td>\n</tr>\n</tbody>\n</table>\n<p>下面是 crontab 的格式：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">分 时 日 月 星期几 要运行的命令或者要执行的脚本<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>在这些域中，可以用横杠<code>-</code>来表示一个时间范围，例如你希望星期一至星期五运行某个作业， 那么可以在星期域使用<code>1 - 5</code>来表示。还可以在这些域中使用逗号<code>,</code>，例如你希望星期一和星期四 运行某个作业，只需要使用<code>1, 4</code>来表示。如果你对某个表示时间域没有特别的限定，也应该在该 域填入*。该文件的每一个条目必须含有 5 个时间域，而且每个域之间要用空格分隔。该文件中所有的注释行要在行首用<code>#</code>来表示。</p>\n<p><strong>案例</strong>:</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 表示每晚的21:30运行主目录目录下的cleanup.sh。</span>\n<span class=\"token number\">30</span> <span class=\"token number\">21</span> * * * ~/cleanup.sh\n<span class=\"token comment\"># 表示每月1、10、22日的4:45运行主目录目录下的backup.sh。</span>\n<span class=\"token number\">45</span> <span class=\"token number\">4</span> <span class=\"token number\">1,10</span>,22 * * ~/backup.sh\n<span class=\"token comment\"># 表示每周六、周日的1:10运行一个find命令，查询日志文件然后删除</span>\n<span class=\"token number\">10</span> <span class=\"token number\">1</span> * * <span class=\"token number\">6,0</span> /bin/find / <span class=\"token parameter variable\">-name</span> <span class=\"token string\">\"*.log\"</span> <span class=\"token parameter variable\">-exec</span> <span class=\"token function\">rm</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span> <span class=\"token punctuation\">\\</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\"># 表示在每天18:00至23:00之间每隔30分钟运行主目录目录下的check.sh。</span>\n<span class=\"token number\">0,30</span> <span class=\"token number\">18</span>-23 * * * ~/check.sh\n<span class=\"token comment\"># 表示每星期六的23:59进行系统的重启(执行命令得写命令的绝对路径)</span>\n<span class=\"token number\">59</span> <span class=\"token number\">23</span> * * <span class=\"token number\">6</span> /sbin/reboot\n<span class=\"token comment\"># 表示每分钟执行一次时钟同步。</span>\n*/1 * * * * /usr/sbin/ntpdate ntp4.aliyun.com<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><strong>注意</strong>：如果是执行命令，请写命令的绝对路径，比如上面的 reboot、find 命令。 即<code>/sbin/reboot</code>,<code>/bin/find</code></p>\n<p>其中当 第一列 为 _/n 时表示每 n 分钟个时间间隔执行一次，第二列为 _/n 表示每 n 小时个时间间隔执行一次，其余类推</p>\n<h5 id=\"chuang-jian-xin-de-crontab\">创建新的 crontab</h5>\n<p>创建新的 crontab 可以直接编辑 crontab，也可以创建一个文件把 crontab 的内容写进入， 然后进行提交。</p>\n<p>创建一个文件“mycron”，然后输入下面的内容：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 每隔一分钟将当前时间写入主目录下面的system.log文件</span>\n*/1 * * * * /bin/echo <span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token function\">date</span><span class=\"token variable\">`</span></span> <span class=\"token operator\">>></span> ~/system.log<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>向“crontab”提交 mycron 文件</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">crontab</span> mycron<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h4 id=\"at\">at</h4>\n<p>at 命令允许用户向 cron 守护进程提交作业，使其在稍后的时间运行。这里稍后的时间可能是指 10min 以后，也可能是指几天以后。如果你希望在一个月或更长的时间以后运行，最好还是使用 crontab 文件。</p>\n<p>一旦一个作业被提交， at 命令将会保留所有当前的环境变量，包括路径，不象 crontab，只提 供缺省的环境。该作业的所有输出都将以电子邮件的形式发送给用户，除非你对其输出进行了重 定向，绝大多数情况下是重定向到某个文件中。</p>\n<p>at 在系统中可能是没有安装的,如果需要使用,则需要使用<code>yum</code>或者<code>apt</code>进行安装,然后使用<code>systemctl</code>开启<code>atd</code>服务,并最好设置其随着系统启动而启动</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 安装at。</span>\nyum <span class=\"token parameter variable\">-y</span> <span class=\"token function\">install</span> at\n<span class=\"token comment\"># 设置atd服务随机启动</span>\nsystemctl <span class=\"token builtin class-name\">enable</span> atd\n<span class=\"token comment\"># 启动atd服务</span>\nsystemctl start atd<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h5 id=\"yu-fa\">语法</h5>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">at <span class=\"token punctuation\">[</span>options<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>-f file<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>time<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>date<span class=\"token punctuation\">]</span>\n\n\tOptions:\n\t\t-V：显示作业将被执行的时间。\n\t\t-q：选队列名称，队列名称可以是a-z和A-Z之间的任意字母。队列字母顺序越高，则队列优\n先级别越低。\n\t\t-f：从文件中读取命令或Shell脚本。\n\t\t-l：<span class=\"token punctuation\">(</span>list<span class=\"token punctuation\">)</span>列出当前所有等待运行的作业。atq命令具有相同的作用。\n\t\t-r：<span class=\"token punctuation\">(</span>remove<span class=\"token punctuation\">)</span>清除作业。为了清除某个作业，还要提供相应的作业标识<span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span>。\n\t\t-m：执行完作业后发送电子邮件到用户。\n\t  date：日期格式可以是月份数或日期数，而且at命令还能够识别诸如today、tomorrow这\n样的词。\n      time：设定作业执行的时间。time选项可以是下面格式中的任何一种。\n        <span class=\"token number\">1</span>、HH:MM格式，例如04:00，代表4:00AM。如果时间已过，就会在第二天的这一时间执\n行。\n        <span class=\"token number\">2</span>、midnight代表12:00AM、teatime代表4:00PM。\n        <span class=\"token number\">3</span>、英文月名日期年份格式，例如 January <span class=\"token number\">15</span> <span class=\"token number\">2022</span>，代表2022年1月15\n\t\t<span class=\"token number\">4</span>、MMDDYY、MM/DD/YY 或 MM.DD.YY格式，如051522，代表2022年5月15日。\n\t\t<span class=\"token number\">5</span>、now +时间格式，时间以minutes、hours、day或 weeks为单位。如now +5 days，代\n表命令应该在5天之后的此时此刻执行。此种格式可以写为“时间＋偏移量”的形式，偏移量\n的单位是minutes、 hours和 days。<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h5 id=\"at-ti-jiao-ming-ling-huo-jiao-ben\">at 提交命令或脚本</h5>\n<p>使用 at 命令提交作业有几种不同的形式，可以通过<strong>命令行</strong>方式，也可以使用<strong>at 命令提示符</strong>。一 般来说在提交若干行的系统命令时，我使用 at 命令提示符方式，而在提交 shell 脚本时，使用命令 行方式。</p>\n<p>如果你想提交若干行的命令，可以在 at 命令后面跟上日期/时间并回车。然后就进入了 at 命令提 示符，这时只需逐条输入相应的命令，然后按“<strong>CTRL - D</strong>”退出。</p>\n<p>1.打印当前时间到主目录下面的 system.log 文件。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 设要执行的时间</span>\nat <span class=\"token parameter variable\">-m</span> 00:02\n<span class=\"token comment\"># 设置要执行的语句</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token function\">date</span><span class=\"token variable\">`</span></span> <span class=\"token operator\">>></span> ~/system.log<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<p><img src=\"/post/Linux%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C.htm/Snipaste_2023-04-12_09-03-58.png\" alt></p>\n<p>其中， 就是。在 00:02 系统将执行我们指定的命令。你应当已经注意到，我所提交的作业被分 配了一个唯一标识 job4。并且提示我们了，这个 job 具体的执行时间。该命令在完成以后会将全 部结果以邮件的形式发送给我。</p>\n<p>2.如果希望向 at 命令提交一个 shell 脚本，使用其命令行方式即可，在提交脚本时使用-f 选项。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 将下面的内容写入~/my_at.sh文件</span>\n<span class=\"token function\">find</span> / <span class=\"token parameter variable\">-name</span> <span class=\"token string\">\"*.txt\"</span> <span class=\"token operator\">></span> ~/result.log\n\n<span class=\"token comment\"># 今天晚上的23:59执行主目录下面的my_at.sh</span>\nat <span class=\"token number\">23</span>:59 <span class=\"token parameter variable\">-f</span> ~/my_at.sh<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>3.可以使用管道符来提交 at 作业</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">find</span> /root/ <span class=\"token parameter variable\">-name</span> <span class=\"token string\">\"*.txt\"</span> <span class=\"token operator\">|</span> at now +1 minute<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><strong>下面这些日期/时间格式都是 at 命令可以接受的：</strong></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 四月16号的早上6:45分触发</span>\nat <span class=\"token number\">6</span>:45am April <span class=\"token number\">16</span>\n<span class=\"token comment\"># 晚上的10:10触发</span>\nat <span class=\"token number\">10</span>:10pm\n<span class=\"token comment\"># 两分钟后触发</span>\nat now + <span class=\"token number\">2</span> minutes\n<span class=\"token comment\"># 一个小时后触发</span>\nat now + <span class=\"token number\">1</span> hour\n<span class=\"token comment\"># 明天上午九点触发</span>\nat <span class=\"token number\">9</span>:00am tomorrow\n\n<span class=\"token comment\"># yesterda是无效的。</span>\nat <span class=\"token number\">9</span>:00am yesterday<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h5 id=\"lie-chu-suo-ti-jiao-de-zuo-ye\">列出所提交的作业</h5>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">at <span class=\"token parameter variable\">-l</span>\n<span class=\"token comment\">#或</span>\natq<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p><img src=\"/post/Linux%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C.htm/Snipaste_2023-04-12_12-49-05.png\" alt></p>\n<p>**注意：**其中，第一列是作业标识也就是 ID，后面是作业运行的日期/时间。第三列 a 代表 at，最后 一列代表谁提交的作业。如果作业已经运行完了，这里面是看不见的，也就是里面的 id 为什么不 连贯的原因。</p>\n<p>当提交一个作业后，它就被拷贝到**/var/spool/at**目录中，准备在要求的时间运行。我们发现 里面正好有四个文件，就对应我们提交的四个作业。</p>\n<pre class=\"line-numbers language-plain\" data-language=\"plain\"><code class=\"language-plain\">echo &amp;变量名\n\n\n# 定义变量\nhello=\"world\"\n\n# 打印变量\necho $hello<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<pre class=\"line-numbers language-plain\" data-language=\"plain\"><code class=\"language-plain\">set<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<pre class=\"line-numbers language-plain\" data-language=\"plain\"><code class=\"language-plain\">unset variable_name<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h2 id=\"mark-wen-jian-mark\"><mark>文件</mark></h2>\n<h3 id=\"mark-wen-jian-de-ji-ben-shu-xing-mark\"><mark>文件的基本属性</mark></h3>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">d rw- rw- r--   <span class=\"token number\">1</span>   nd_ljq   nd_ljq   <span class=\"token number\">110</span>   Sep <span class=\"token number\">12</span> <span class=\"token number\">18</span>:20   javaTest<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>第一个字符代表这个文件是目录,文件,链接文件等</p>\n</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">d 目录\n- 文件\nl 链接文件\nb 可供存取的接口设备\nc 表示串行的端口设备<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>接下来的三组都是以 <code>rwx</code>的三个参数的组合(没有权限则是<code>-</code>号)</p>\n</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">r代表可读<span class=\"token punctuation\">(</span>readable<span class=\"token punctuation\">)</span> <span class=\"token number\">4</span>\nw代表可写<span class=\"token punctuation\">(</span>writable<span class=\"token punctuation\">)</span> <span class=\"token number\">2</span>\nx代表可执行<span class=\"token punctuation\">(</span>executable<span class=\"token punctuation\">)</span> <span class=\"token number\">1</span>\n第一组rwx:所有者权限<span class=\"token punctuation\">(</span>owner<span class=\"token punctuation\">)</span>\n第二组rwx:组权限<span class=\"token punctuation\">(</span>group<span class=\"token punctuation\">)</span>\n第三组rwx:其他用户权限<span class=\"token punctuation\">(</span>other<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"mark-wei-wen-jian-tian-jia-ruan-ying-lian-jie-mark\"><mark>为文件添加软/硬链接</mark></h3>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#在linux中链接相当于windows中的快捷方式</span>\n<span class=\"token comment\">#在linux中存在两种不同的链接:分别是`软链接`和`硬链接`</span>\n硬链接:是指同一个系统中的两个文件修改其中一个文件内容另一个文件也会改变 即两个文件指向一个node\n\n软链接:又被称作符号链接,他是一个指向文件的指针,这个指针代表一个初始状态与指向文件一致的文件,修改软链接的内容,指向文件的内容不变\n\n简而言之，硬链接是指两个文件指向同一个 inode，而软链接是指一个文件指向另一个文件的路径<span class=\"token punctuation\">(</span>更像快捷方式<span class=\"token punctuation\">)</span>\n\n<span class=\"token function\">ln</span> <span class=\"token punctuation\">[</span>-s<span class=\"token punctuation\">]</span> source_path target_path\n\n <span class=\"token parameter variable\">-s</span> :soft 创建软链接\n\n\n例:\nifcfg-ens33文件用于配置网络信，但是这个文件目录比较深，所以我们可以设置这个文件的链接文件。\n\n<span class=\"token function\">ln</span> <span class=\"token parameter variable\">-s</span> /etc/sysconfig/network-scripts/ifcfg-ens33 my-ifcfg-ens33<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"mark-xiu-gai-wen-jian-quan-xian-mark\"><mark>修改文件权限</mark></h3>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">符号格式:\n<span class=\"token function\">chmod</span> <span class=\"token punctuation\">[</span>who<span class=\"token punctuation\">]</span>operator<span class=\"token punctuation\">[</span>permission<span class=\"token punctuation\">]</span> filename\n\nwho的选项是\n\tu:文件属主的权限\n\tg:同组用户权限\n\to:其他用户权限\n\ta:所有用户权限\n\noperator的选项是:\n\t+ :增加权限\n\t- :取消权限\n\t<span class=\"token operator\">=</span> :设定权限\n\npermission的选项是:\n\tr :读权限<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span>\n\tw :写权限<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n\tx :执行权限<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n\n\n绝对模式:\n<span class=\"token function\">chmod</span> 第一组权限数字<span class=\"token punctuation\">(</span>累加<span class=\"token punctuation\">)</span>第二组权限数字<span class=\"token punctuation\">(</span>累加<span class=\"token punctuation\">)</span>第三组权限数字<span class=\"token punctuation\">(</span>累加<span class=\"token punctuation\">)</span> fileName<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"mark-xiu-gai-wen-jian-suo-shu-yong-hu-zu-mark\"><mark>修改文件所属用户/组</mark></h3>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#更改所有者</span>\n<span class=\"token function\">chown</span> <span class=\"token punctuation\">[</span>-options<span class=\"token punctuation\">]</span> userName fileName\n\n<span class=\"token comment\">#更改所属组</span>\n<span class=\"token function\">chgrp</span> <span class=\"token punctuation\">[</span>-options<span class=\"token punctuation\">]</span> groupName fileName\n\noptions:\n\tR: 对所有子目录下的文件都进行同样操作\n\th: 改变符号链接文件的属主不影响<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"mark-cha-kan-dang-qian-mu-lu-jue-dui-lu-jing-mark\"><mark>查看当前目录绝对路径</mark></h3>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">pwd<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h3 id=\"kao-bei-wen-jian-wen-jian-jia-dao-zhi-ding-mu-lu\">拷贝文件/文件夹到指定目录</h3>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">cp [options] source dest\ncp [options] source dir\n\noptions:\n    -a：此选项通常在复制目录时使用，它保留链接、文件属性，并复制目录下的所有内容。其作用等于dpR参数组合。\n    -d：复制时保留链接。这里所说的链接相当于 Windows 系统中的快捷方式。\n    -f：覆盖已经存在的目标文件而不给出提示。\n    -i：与 -f 选项相反，在覆盖目标文件之前给出提示，要求用户确认是否覆盖，回答 y 时目标文件将被覆盖。\n    -p：除复制文件的内容外，还把修改时间和访问权限也复制到新文件中。\n    -r：若给出的源文件是一个目录文件，此时将复制该目录下所有的子目录和文件。\n    -l：不复制文件，只是生成链接文件。<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"mark-kao-bei-wen-jian-dao-yuan-cheng-fu-wu-qi-mark\"><mark>拷贝文件到远程服务器</mark></h3>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">scp</span> <span class=\"token punctuation\">[</span>options<span class=\"token punctuation\">]</span> fileName/dir targetPath\n\noptions:\n\t-C:使用压缩\n\t-P:指定远程主机号\n\t-p:保留文件最后修改时间,最后访问时间和权限模式\n\t-q:不显示复制进程\n\t-r:以递归的方式复制\n\n<span class=\"token comment\"># 普通文件</span>\n<span class=\"token function\">scp</span> <span class=\"token builtin class-name\">source</span> user@hostname:filePath<span class=\"token punctuation\">(</span>fileName<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 拷贝目录需要使用-r。</span>\n<span class=\"token function\">scp</span> <span class=\"token parameter variable\">-r</span> <span class=\"token builtin class-name\">source</span> user@hostname:filePath<span class=\"token punctuation\">(</span>fileName<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 除了使用主机名也可以用IP地址</span>\n<span class=\"token function\">scp</span> <span class=\"token parameter variable\">-r</span> <span class=\"token builtin class-name\">source</span> user@ip:filePath<span class=\"token punctuation\">(</span>fileName<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"jian-qie-wen-jian-wen-jian-jia\">剪切文件/文件夹</h3>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">mv</span> <span class=\"token punctuation\">[</span>options<span class=\"token punctuation\">]</span> <span class=\"token builtin class-name\">source</span> dest\n\noptions:\n\t-b: 当目标文件或目录存在时，在执行覆盖前，会为其创建一个备份。\n\t-i: 如果指定移动的源目录或文件与目标的目录或文件同名，则会先询问是否覆盖旧文件，输\n入 y 表示直接覆盖，输入 n 表示取消该操作。\n\t-f: 如果指定移动的源目录或文件与目标的目录或文件同名，不会询问，直接覆盖旧文件。\n\t-n: 不覆盖任何已存在的文件或目录。\n\t-u：当源文件比目标文件新或者目标文件不存在时，才执行移动操作<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"cha-kan-dang-qian-mu-lu-xia-de-wen-jian-wen-jian-jia-xin-xi\">查看当前目录下的文件/文件夹信息</h3>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">ls</span> <span class=\"token punctuation\">[</span>options<span class=\"token punctuation\">]</span> fileName/condition\n\noptions:\n\t-l:除文件名其文件的所有信息全部列出<span class=\"token punctuation\">(</span>文件形态,权限,拥有者,文件大小等<span class=\"token punctuation\">)</span>  <span class=\"token operator\">==</span><span class=\"token operator\">></span> ll <span class=\"token operator\">=</span> <span class=\"token function\">ls</span> <span class=\"token parameter variable\">-l</span>\n\t-t:按照创建时间依次列出\n\t-a:列出目录下所有文件夹名<span class=\"token punctuation\">(</span>包括隐藏文件<span class=\"token punctuation\">)</span>\n\t-R:递归显示当前目录下的文件和子目录\n  \t-h:以人类可读的方式显示当前目录中的文件和目录大小<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"mark-chuang-jian-wen-jian-wen-jian-jia-mark\"><mark>创建文件/文件夹</mark></h3>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">创建文件:\n<span class=\"token function\">vim</span> fileName\n<span class=\"token function\">touch</span> fileName1 <span class=\"token punctuation\">[</span>fileName2 <span class=\"token punctuation\">..</span>.<span class=\"token punctuation\">]</span>\n\n创建目录<span class=\"token punctuation\">(</span>文件夹<span class=\"token punctuation\">)</span>:\n<span class=\"token function\">mkdir</span> dirName<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"mark-shan-chu-wen-jian-jia-wen-jian-mark\"><mark>删除文件夹/文件</mark></h3>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">rm</span> <span class=\"token punctuation\">[</span>options<span class=\"token punctuation\">]</span> fileName/dirName\n\noptions:\n\t-i:删除前逐个询问\n\t-r:将目录以及以下的文件遍历删除\n\t-f:即使文件为只可读也直接删除,无需确认 <span class=\"token punctuation\">(</span>-force<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"tong-ji-mu-lu-wen-jian-da-xiao\">统计目录/文件大小</h3>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">du</span> <span class=\"token punctuation\">[</span>-options<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>fileName/dirName<span class=\"token punctuation\">]</span>\n\noptions:\n\ta或-all 显示目录中个别文件的大小。\n\tb或-bytes 显示目录或文件大小时，以byte为单位。\n\th或--human-readable 以K，M，G为单位，提高信息的可读性。\n\tk或--kilobytes 以1024 bytes为单位。\n\tl或--count-links 重复计算硬件连接的文件。\n\tm或--megabytes 以1MB为单位。\n\ts或--summarize 仅显示总计。\n\t<span class=\"token parameter variable\">--exclude</span><span class=\"token operator\">=</span><span class=\"token operator\">&lt;</span>目录或文件<span class=\"token operator\">></span> 略过指定的目录或文件。\n\t--max-depth<span class=\"token operator\">=</span><span class=\"token operator\">&lt;</span>目录层数<span class=\"token operator\">></span> 超过指定层数的目录后，予以忽略。\n\t<span class=\"token parameter variable\">--help</span> 显示帮助。<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"mark-cha-zhao-wen-jian-mark\"><mark>查找文件</mark></h3>\n<h4 id=\"find\">find</h4>\n<p><code>find</code>命令与<code>locate</code>命令相比各有各的优缺点，<code>locate</code>命令的优点就是查找速度比<code>find</code>命令快的多，但是缺点也比较明显，<code>locate</code>命令无法查找最新添加的文件/目录以及会查找出来已经过期的文件/目录。</p>\n<p>相反<code>find</code>命令的优点就是可以按照自定义的方法查找任何文件，缺点就是查询速度比较慢，因为是通过遍历硬盘来查找而不像<code>locate</code>命令事先建立好数据库来进行查找。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">find</span> path <span class=\"token parameter variable\">-options</span> <span class=\"token punctuation\">[</span>-print<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>-exec <span class=\"token builtin class-name\">command</span> /-ok <span class=\"token builtin class-name\">command</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span> <span class=\"token punctuation\">\\</span> <span class=\"token punctuation\">]</span>\n\n\t-exec: 将前面查询到的文件交给 exec后的命令完成\n\t-ok:将前面查询到的文件交给 ok 后的命令完成 <span class=\"token punctuation\">(</span>安全,执行一次,询问一次<span class=\"token punctuation\">)</span>\n\t但是性能较低,做一次操作创建一个进程,而且有参数长度限制<span class=\"token punctuation\">(</span>文件过多执行出错<span class=\"token punctuation\">)</span>\n\t推荐使用:\n\t\t<span class=\"token function\">find</span> path <span class=\"token parameter variable\">-options</span> <span class=\"token operator\">|</span> <span class=\"token function\">xargs</span> <span class=\"token builtin class-name\">command</span>\n\t\t在使用xargs命令时，究竟是一次获取所有的参数，还是分批取得参数，以及每一次获取参数的数目都会根据该命令的选项及系统内核中相应的可调参数来确定。\n\n\n\noptions:\n\tname/iname <span class=\"token builtin class-name\">:</span> 文件名符合name的文件,iname会忽略大小写\n\tpath/ipath <span class=\"token builtin class-name\">:</span> 路径名符合p的文件,ipath会忽略大小写\n\tempty <span class=\"token builtin class-name\">:</span> 空的文件夹,或者是空目录\n\tsize <span class=\"token punctuation\">[</span>+/-<span class=\"token punctuation\">]</span>n:文件大小是<span class=\"token punctuation\">(</span>大于/小于<span class=\"token punctuation\">)</span>n的文件\n\t<span class=\"token builtin class-name\">type</span> c:文件类型是c的文件,类型:f<span class=\"token punctuation\">(</span>文件<span class=\"token punctuation\">)</span>,d<span class=\"token punctuation\">(</span>目录<span class=\"token punctuation\">)</span>,l<span class=\"token punctuation\">(</span>链接<span class=\"token punctuation\">)</span>\n\tuser <span class=\"token builtin class-name\">:</span> 按照文件属于的用户来查找文件\n    nouser <span class=\"token builtin class-name\">:</span> 查找无效用户的文件<span class=\"token punctuation\">(</span>userdel删除用户时没有-r<span class=\"token punctuation\">)</span>\n    group <span class=\"token builtin class-name\">:</span> 按照文件所属的组来查找文件\n    mtime -/+ n :按照文件的更改时间来查找文件<span class=\"token punctuation\">(</span>-n表示距离现在n天以内 +n代表更改时间距现在n天以前<span class=\"token punctuation\">)</span>\n\tperm <span class=\"token builtin class-name\">:</span> 按照文件权限来查找文件\n\n\n例:\n\t想要在/etc目录中查找文件名以host开头的文件\n\t<span class=\"token function\">find</span> /etc <span class=\"token parameter variable\">-name</span> <span class=\"token string\">\"host*\"</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"locate\">locate</h4>\n<p><code>locate</code>命令要比其他查找文件命令（例如:<code>find</code>）快得多，原因在于它不搜索具体目录，而是搜索一个数据库<code>/var/lib/mlocate/mlocate.db</code>。</p>\n<p><code>/var/lib/mlocate/mlocate.db</code>这个数据库中含有本地所有文件信息。Linux 系统自动创建这个数据库，并且每天自动更新一次，因此，我们在用<code>locate</code>查找文件时，有时会找到已经被删除的数据，或者刚刚建立文件，却无法查找到，原因就是因为数据库文件没有被更新。为了避免这种情况，可以在使用<code>locate</code>之前，先使用**<code>updatedb</code>**命令，手动更新数据库。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">locate</span>　命令参数　文件/目录\n\n\t参数列表:\n\t\t-c, <span class=\"token parameter variable\">--count</span>            只输出找到的数量；\n\t\t-d, <span class=\"token parameter variable\">--database</span> DBPATH  使用DBPATH指定的数据库，而不是默认数据库/var/lib/mlocate/mlocate.db；\n\t\t-i, --ignore-case      忽略大小写；\n\t\t-q, <span class=\"token parameter variable\">--quiet</span>            安静模式，不会显示任何错误讯息；\n\t\t-e, <span class=\"token parameter variable\">--existing</span>         只显示当前存在的文件条目；<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>案例演示<code>1</code>：</p>\n<p>搜索<code>etc</code>目录下以<code>pass</code>开头的文件或目录，具体使用如下命令：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">locate</span> /etc/pass<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>案例演示<code>２</code>：</p>\n<p>搜索包含<code>passwd</code>字母的文件或目录总个数，具体使用如下命令：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">locate</span> <span class=\"token parameter variable\">-c</span> <span class=\"token function\">passwd</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h3 id=\"mark-guan-dao-fu-mark\"><mark>管道符</mark></h3>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">somecommand <span class=\"token operator\">|</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h3 id=\"cha-kan-wen-jian\">查看文件</h3>\n<h4 id=\"cha-kan-wen-jian-lei-xing\">查看文件类型</h4>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">file</span> filePath\n\n<span class=\"token punctuation\">[</span>nd_ljq@ROOT ~<span class=\"token punctuation\">]</span>$ <span class=\"token function\">file</span> part-r-00000\npart-r-00000: ASCII text\n<span class=\"token punctuation\">[</span>nd_ljq@ROOT ~<span class=\"token punctuation\">]</span>$ <span class=\"token builtin class-name\">type</span> <span class=\"token function\">ifconfig</span>\n<span class=\"token function\">ifconfig</span> is /usr/sbin/ifconfig\n<span class=\"token punctuation\">[</span>nd_ljq@ROOT ~<span class=\"token punctuation\">]</span>$ <span class=\"token function\">file</span> /usr/sbin/ifconfig\n/usr/sbin/ifconfig: ELF <span class=\"token number\">64</span>-bit LSB shared object, x86-64, version <span class=\"token number\">1</span> <span class=\"token punctuation\">(</span>SYSV<span class=\"token punctuation\">)</span>, dynamically linked, interpreter /lib64/ld-linux-x86-64.so.2, <span class=\"token keyword\">for</span> GNU/Linux <span class=\"token number\">3.2</span>.0, BuildID<span class=\"token punctuation\">[</span>sha1<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>96ce19fd01f2ed4f0a677a4b412ba28142d7ac3b, stripped, too many notes <span class=\"token punctuation\">(</span><span class=\"token number\">256</span><span class=\"token punctuation\">)</span>\n\nps: ELF全称为<span class=\"token punctuation\">(</span>Executable and Linkable Format<span class=\"token punctuation\">)</span>\n\t相当于window中的exe可执行文件<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"mark-cha-zhao-wen-jian-wei-zhi-mark\"><mark>查找文件位置</mark></h4>\n<h5 id=\"which\">which</h5>\n<p><code>which</code>命令主要是用来查找系统<code>PATH</code>目录下的可执行文件，说白了就是查找那些我们已经安装好的可以直接执行的命令。</p>\n<p><code>which</code>命令用于查找并显示给定命令的绝对路径，环境变量<code>PATH</code>中保存了查找命令时需要遍历的目录。<code>which</code>指令会在环境变量<code>$PATH</code>设置的目录里查找符合条件的文件。也就是说，使用<code>which</code>命令，就可以看到某个系统命令是否存在，以及执行的到底是哪一个位置的命令。</p>\n<p><code>which</code>是<code>shell</code>内建命令，内建命令要比系统论命令有比较高的执行效率。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">which</span>　需要查找的命令<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h5 id=\"whereis\">whereis</h5>\n<p><code>whereis</code>命令可以用来查找二进制（命令）、源文件、<code>man</code>文件。与<code>which</code>不同的是这条命令可以是通过文件索引数据库而非<code>PATH</code>来查找的，所以查找的面比<code>which</code>要广。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">whereis</span> <span class=\"token punctuation\">[</span>options<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>-B <span class=\"token operator\">&lt;</span>目录<span class=\"token operator\">></span><span class=\"token punctuation\">..</span>.<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>-M <span class=\"token operator\">&lt;</span>目录<span class=\"token operator\">></span><span class=\"token punctuation\">..</span>.<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>-S <span class=\"token operator\">&lt;</span>目录<span class=\"token operator\">></span><span class=\"token punctuation\">..</span>.<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>文件<span class=\"token punctuation\">..</span>.<span class=\"token punctuation\">]</span>\n\noptions:\n<span class=\"token parameter variable\">-b</span> 　只查找二进制文件。\n<span class=\"token parameter variable\">-f</span> 　不显示文件名前的路径名称。\n<span class=\"token parameter variable\">-m</span> 　只查找说明文件。\n<span class=\"token parameter variable\">-s</span> 　只查找原始代码文件。\n<span class=\"token parameter variable\">-u</span> 　查找不包含指定类型的文件。\n\n-B<span class=\"token operator\">&lt;</span>目录<span class=\"token operator\">></span> 　只在设置的目录下查找二进制文件。\n-M<span class=\"token operator\">&lt;</span>目录<span class=\"token operator\">></span> 　只在设置的目录下查找说明文件。\n-S<span class=\"token operator\">&lt;</span>目录<span class=\"token operator\">></span> 　只在设置的目录下查找原始代码文件。\n\nps:该指令只能用于查找二进制文件、源代码文件和man手册页\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"mark-cha-kan-xiao-wen-jian-nei-rong-bing-da-yin-dao-kong-zhi-tai-mark\"><mark>查看(小)文件内容并打印到控制台</mark></h4>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">cat</span> <span class=\"token punctuation\">[</span>options<span class=\"token punctuation\">]</span> fileName\n\noptions:\n\t-n:显示行号\n\t-b:只显示有内容行的行号,忽略无内容行<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"mark-cha-kan-da-wen-jian-nei-rong-bing-da-yin-dao-kong-zhi-tai-mark\"><mark>查看(大)文件内容并打印到控制台</mark></h4>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">less</span> <span class=\"token punctuation\">[</span>options<span class=\"token punctuation\">]</span> fileName\n\n按Q键退出less命令\n/字符串：向下搜索<span class=\"token string\">\"字符串\"</span>的功能\n?字符串：向上搜索<span class=\"token string\">\"字符串\"</span>的功能\nn：重复前一个搜索（与 / 或 ? 有关）\nN：反向重复前一个搜索（与 / 或 ? 有关）\nb 向上翻一页\nd 向后翻半页\nh 显示帮助界面\nQ 退出less 命令\nu 向前滚动半页\ny 向前滚动一行\n空格键 滚动一页\n回车键 滚动一行\noptions:\n\t-i:忽略大小写\n\t-e:文件显示完自动退出\n\t-g:只显示搜索到的最后一个关键词\n\t-N:显示每行行号<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"mark-cha-kan-wen-jian-tou-wei-mark\"><mark>查看文件头/尾</mark></h4>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">head/tail <span class=\"token punctuation\">[</span>options<span class=\"token punctuation\">]</span> fileName\n\noptions:\n\t<span class=\"token parameter variable\">-c</span> number:只查看前/后number个字符<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"mark-cha-kan-wen-jian-wei-mark\"><mark>查看文件尾</mark></h4>\n<p>在屏幕上显示指定文件的末尾若干行</p>\n<p><strong>tail 命令</strong> 用于输入文件中的尾部内容。</p>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>默认在屏幕上显示指定文件的末尾 10 行。</p>\n</li>\n<li class=\"lvl-2\">\n<p>处理多个文件时会在各个文件之前附加含有文件名的行。</p>\n</li>\n<li class=\"lvl-2\">\n<p>如果没有指定文件或者文件名为<code>-</code>，则读取标准输入。</p>\n</li>\n<li class=\"lvl-2\">\n<p>如果表示字节或行数的<code>NUM</code>值之前有一个<code>+</code>号，则从文件开头的第<code>NUM</code>项开始显示，而不是显示文件的最后<code>NUM</code>项。</p>\n</li>\n<li class=\"lvl-2\">\n<p><code>NUM</code>值后面可以有后缀：</p>\n<ul class=\"lvl-2\">\n<li class=\"lvl-4\"><code>b</code> : 512</li>\n<li class=\"lvl-4\"><code>kB</code> : 1000</li>\n<li class=\"lvl-4\"><code>k </code>: 1024</li>\n<li class=\"lvl-4\"><code>MB</code> : 1000 * 1000</li>\n<li class=\"lvl-4\"><code>M </code>: 1024 * 1024</li>\n<li class=\"lvl-4\"><code>GB</code> : 1000 _ 1000 _ 1000</li>\n<li class=\"lvl-4\"><code>G </code>: 1024 _ 1024 _ 1024</li>\n<li class=\"lvl-4\"><code>T</code>、<code>P</code>、<code>E</code>、<code>Z</code>、<code>Y</code>等以此类推。</li>\n</ul>\n</li>\n</ul>\n<p><strong>语法</strong></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">tail</span> <span class=\"token punctuation\">(</span>选项<span class=\"token punctuation\">)</span> fileName\n\n选项:\n\t-c, <span class=\"token parameter variable\">--bytes</span><span class=\"token operator\">=</span>NUM                 输出文件尾部的NUM（NUM为整数）个字节内容。\n\t-f, --follow<span class=\"token punctuation\">[</span><span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span>name<span class=\"token operator\">|</span>descript<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">]</span>  显示文件最新追加的内容。“name”表示以文件名的方式监视文件的变化。\n\t<span class=\"token parameter variable\">-F</span>                              与 “--follow<span class=\"token operator\">=</span>name --retry” 功能相同。\n\t-n, <span class=\"token parameter variable\">--line</span><span class=\"token operator\">=</span>NUM                  输出文件的尾部NUM（NUM位数字）行内容。\n\t<span class=\"token parameter variable\">--pid</span><span class=\"token operator\">=</span><span class=\"token operator\">&lt;</span>进程号<span class=\"token operator\">></span>                  与“-f”选项连用，当指定的进程号的进程终止后，自动退出tail命令。\n\t-q, --quiet, <span class=\"token parameter variable\">--silent</span>           当有多个文件参数时，不输出各个文件名。\n\t<span class=\"token parameter variable\">--retry</span>                         即是在tail命令启动时，文件不可访问或者文件稍后变得不可访问，都始终尝试打开文件。使用此选项时需要与选项“--follow<span class=\"token operator\">=</span>name”连用。\n\t-s, --sleep-interal<span class=\"token operator\">=</span><span class=\"token operator\">&lt;</span>秒数<span class=\"token operator\">></span>      与“-f”选项连用，指定监视文件变化时间隔的秒数。\n\t-v, <span class=\"token parameter variable\">--verbose</span>                   当有多个文件参数时，总是输出各个文件名。\n\t<span class=\"token parameter variable\">--help</span>                          显示指令的帮助信息。\n\t<span class=\"token parameter variable\">--version</span>                       显示指令的版本信息。<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><strong>实例</strong></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">tail</span> <span class=\"token function\">file</span> <span class=\"token comment\">#（显示文件file的最后10行）</span>\n<span class=\"token function\">tail</span> <span class=\"token parameter variable\">-n</span> +20 <span class=\"token function\">file</span> <span class=\"token comment\">#（显示文件file的内容，从第20行至文件末尾）</span>\n<span class=\"token function\">tail</span> <span class=\"token parameter variable\">-c</span> <span class=\"token number\">10</span> <span class=\"token function\">file</span> <span class=\"token comment\">#（显示文件file的最后10个字节）</span>\n\n<span class=\"token function\">tail</span> <span class=\"token parameter variable\">-25</span> mail.log <span class=\"token comment\"># 显示 mail.log 最后的 25 行</span>\n<span class=\"token function\">tail</span> <span class=\"token parameter variable\">-f</span> mail.log <span class=\"token comment\"># 等同于--follow=descriptor，根据文件描述符进行追踪，当文件改名或被删除，追踪停止</span>\n<span class=\"token function\">tail</span> <span class=\"token parameter variable\">-F</span> mail.log <span class=\"token comment\"># 等同于--follow=name --retry，根据文件名进行追踪，并保持重试，即该文件被删除或改名后，如果再次创建相同的文件</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><strong>拓展</strong>:</p>\n<p><strong>tailf</strong>命令</p>\n<p>在屏幕上显示指定文件的末尾若干行内容，通常用于日志文件的跟踪输出</p>\n<p><strong>补充说明</strong></p>\n<p>tailf 命令几乎等同于<code>tail -f</code>，严格说来应该与<code>tail --follow=name</code>更相似些。当文件改名之后它也能继续跟踪，特别适合于日志文件的跟踪（follow the growth of a log file）。与<code>tail -f</code>不同的是，如果文件不增长，它不会去访问磁盘文件。tailf 特别适合那些便携机上跟踪日志文件，因为它能省电，因为减少了磁盘访问。tailf 命令不是个脚本，而是一个用 C 代码编译后的二进制执行文件，某些 Linux 安装之后没有这个命令。</p>\n<p>tailf 和 tail -f 的区别</p>\n<ol>\n<li class=\"lvl-3\">\n<p>tailf 总是从文件开头一点一点的读， 而 tail -f 则是从文件尾部开始读</p>\n</li>\n<li class=\"lvl-3\">\n<p>tailf check 文件增长时，使用的是文件名， 用 stat 系统调用；而 tail -f 则使用的是已打开的文件描述符； 注：tail 也可以做到类似跟踪文件名的效果； 但是 tail 总是使用 fstat 系统调用，而不是 stat 系统调用；结果就是：默认情况下，当 tail 的文件被偷偷删除时，tail 是不知道的，而 tailf 是知道的。</p>\n</li>\n</ol>\n<p><strong>语法</strong></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">tailf logfile <span class=\"token comment\"># 动态跟踪日志文件logfile，最初的时候打印文件的最后10行内容。</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><strong>选项</strong></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">-n, <span class=\"token parameter variable\">--lines</span> NUMBER  <span class=\"token comment\"># 输出最后数行</span>\n<span class=\"token parameter variable\">-NUMBER</span>             <span class=\"token comment\"># 与NUMBER相同 `-n NUMBER'</span>\n-V, <span class=\"token parameter variable\">--version</span>       <span class=\"token comment\"># 输出版本信息并退出</span>\n-h, <span class=\"token parameter variable\">--help</span>          <span class=\"token comment\"># 显示帮助并退出</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<p><strong>参数</strong></p>\n<p>目标：指定目标日志。</p>\n<p><strong>实例</strong></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">tailf log/WEB.LOG\ntailf <span class=\"token parameter variable\">-n</span> <span class=\"token number\">5</span> log2014.log   <span class=\"token comment\"># 显示文件最后5行内容</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<h3 id=\"tong-ji-wen-jian-xing-shu-dan-ci-shu-zi-jie-shu\">统计文件行数/单词数/字节数</h3>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">wc</span> <span class=\"token punctuation\">[</span>options<span class=\"token punctuation\">]</span> fileName\n\noptions:\n\t-l:仅查看行数\n\t-w:仅查看单词数\n\t-c:仅查看bytes数<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"bian-ji-wen-jian\">编辑文件</h3>\n<h4 id=\"chuang-jian-wen-jian-xiu-gai-wen-jian-xiu-gai-shi-jian\">创建文件/修改文件修改时间</h4>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">touch</span> fileName<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">vim</span> <span class=\"token punctuation\">[</span>options<span class=\"token punctuation\">]</span> path fileName\n有该文件则编辑,无该文件则创建\n\noptions:\n\t+:进入vim后直接定位到文件的最后一行\n\t<span class=\"token string\">\"+\"</span>+number:定位到第number行\n\n按I进入插入模式\n按ESC退出插入模式,进入命令模式\n\n:x 保存退出\n:w 保存\n:q 退出\n<span class=\"token function\">dd</span> 删除光标所在的一行\n:number 定位到第number行\n:set nu 显示行号<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"wen-jian-de-gui-dang\">文件的归档</h3>\n<h4 id=\"gzip\">gzip</h4>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">gzip</span> <span class=\"token punctuation\">[</span>options<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">&lt;</span>压缩效率<span class=\"token operator\">></span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>--best/fast<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span>文件/目录<span class=\"token punctuation\">]</span>\n\noptions:\n\t-d:<span class=\"token punctuation\">(</span>decompress/uncompress<span class=\"token punctuation\">)</span>解开压缩文件。\n\t-f:<span class=\"token punctuation\">(</span>force<span class=\"token punctuation\">)</span>强行压缩文件,不理会文件名称或硬链接是否存在,以及改文件是否为符号连接\n\t-l:<span class=\"token punctuation\">(</span>list<span class=\"token punctuation\">)</span>列出压缩文件的相关信息\n\t-n:<span class=\"token punctuation\">(</span>no-name<span class=\"token punctuation\">)</span>压缩文件时，不保存原来的文件名称及时间戳记。\n\t-N:<span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span>压缩文件时，保存原来的文件名称及时间戳记。\n\t-r:<span class=\"token punctuation\">(</span>recursive<span class=\"token punctuation\">)</span>递归处理，将指定目录下的所有文件及子目录一并处理。注意他的递归是把单个文件压缩,而不是一个整包\n\t-v:<span class=\"token punctuation\">(</span>verbose<span class=\"token punctuation\">)</span>显示指令执行过程\n\n<span class=\"token comment\">#压缩效率</span>\n\t压缩效率是一个介于1~9的数值,预设值为<span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token number\">6</span><span class=\"token variable\">`</span></span>,指定越大的数,压缩程度越高,速度越慢<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"mark-tar-mark\"><mark>tar</mark></h4>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">tar</span> <span class=\"token punctuation\">[</span>options<span class=\"token punctuation\">]</span> fileName\noptions:\n\t-z:使用gzip处理压缩文件\n\t-x:<span class=\"token punctuation\">(</span>extract<span class=\"token punctuation\">)</span>从压缩文件中还原文件\n\t-v:<span class=\"token punctuation\">(</span>verbose<span class=\"token punctuation\">)</span>显示指令执行过程\n\t-j: 支持bzip2解压文件\n\t-f:指定归档文件名称\n\t在参数 f 之后的文件档名是自己取的，我们习惯上都用 .tar 来作为辨识。 如果加 z 参数，则以 .tar.gz 或 .tgz 来代表 <span class=\"token function\">gzip</span> 压缩过的 tar包； 如果加 j 参数，则以 .tar.bz2 来作为tar包名。\n\t-c:<span class=\"token punctuation\">(</span>create<span class=\"token punctuation\">)</span>建立新的归档文件。\n\t-t:显示tar包中的文件列表<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"mark-wen-ben-de-cao-zuo-mark\"><mark>文本的操作</mark></h2>\n<h3 id=\"zheng-ze-biao-da-shi\">正则表达式</h3>\n<h4 id=\"yuan-zi-fu-ji\">元字符集</h4>\n<table>\n<thead>\n<tr>\n<th>元字符</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>^</td>\n<td>只匹配行首</td>\n</tr>\n<tr>\n<td>$</td>\n<td>只匹配行尾</td>\n</tr>\n<tr>\n<td>.</td>\n<td>匹配任意字符串</td>\n</tr>\n<tr>\n<td>[]</td>\n<td>匹配[]内字符.可以是一个单字符串符，也可以是字符序列。可以使用-表示[ ]内字符序 列范围，如用[1-5]代替[12345]。[A-Z]</td>\n</tr>\n<tr>\n<td>\\</td>\n<td>转义字符，因为有时在 Linux 中一些元字符有特殊含义。”\\“可以使其失去应有意 义。</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"mark-grep-mark\"><mark>grep</mark></h3>\n<p>grep(全局正则表达式)</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">grep</span> <span class=\"token punctuation\">[</span>OPTIONS<span class=\"token punctuation\">]</span> PATTERN <span class=\"token punctuation\">[</span>FILE<span class=\"token punctuation\">..</span>.<span class=\"token punctuation\">]</span>\n\nOPTIONS:\n\t-c：只输出匹配行的计数。\n\t-i：不区分大小写（只适用于单字符）。\n\t-h：查询多文件时不显示文件名。\n\t-l：查询多文件时只输出包含匹配字符的文件名。\n\t-n：显示匹配行及行号。\n\t-s：不显示不存在或无匹配文本的错误信息。\n\t-v：显示不包含匹配文本的所有行。<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"pattern-zheng-ze-biao-da-shi-zhu-yao-can-shu\">pattern 正则表达式主要参数</h4>\n<table>\n<thead>\n<tr>\n<th>pattern</th>\n<th>含义</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>\\</td>\n<td>忽略正则表达式中特殊字符的原有含义，用于转义</td>\n</tr>\n<tr>\n<td>^</td>\n<td>匹配正则表达式的开始行。</td>\n</tr>\n<tr>\n<td>$</td>\n<td>匹配正则表达式的结束行。</td>\n</tr>\n<tr>\n<td>&lt;</td>\n<td>从匹配正则表达式的开始。</td>\n</tr>\n<tr>\n<td>&gt;</td>\n<td>到匹配正则表达式的结束。</td>\n</tr>\n<tr>\n<td>[]</td>\n<td>单个字符，如[A]即 A 符合要求 。</td>\n</tr>\n<tr>\n<td>[-]</td>\n<td>范围，如[A-Z]，即 A、B、C 一直到 Z 都符合要求 。</td>\n</tr>\n<tr>\n<td>.</td>\n<td>所有的单个字符。</td>\n</tr>\n<tr>\n<td>*</td>\n<td>有字符，长度可以为 0。</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"shuang-yin-hao-yin-yong\">双引号引用</h4>\n<p>在 grep 命令中输入字符串参数时，最好将其用双引号括起来。例如：“mystring”。这样做有两 个原因，一是以防被误解为 shell 命令，二是可以用来查找多个单词组成的字符串，例如：“my string”，如果不用双引号将其括起来，那么单词 string 将被误认为是一个文件，查询结果将返回 “文件不存在”的错误信息。</p>\n<h4 id=\"cha-xun-duo-ge-wen-jian\">查询多个文件</h4>\n<p>如果要在当前目录下所有. txt 文件中查找字符串“test”，我们可以使用通配符，方法如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">grep</span> <span class=\"token string\">\"test\"</span> *.txt<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h4 id=\"xing-pi-pei-shu\">行匹配数</h4>\n<p>我们可以使用”-c“来查询匹配到的行数据。</p>\n<p>案例：查询 data.txt 文件中出现 48 的行数。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">grep</span> <span class=\"token parameter variable\">-c</span> <span class=\"token string\">\"48\"</span> data.txt<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h4 id=\"xian-shi-xing-shu-ju\">显示行数据</h4>\n<p>显示满足匹配模式的所有行行数。</p>\n<p>案例：查询 data.txt 文件中出现 48 的行的数据</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">grep</span> <span class=\"token parameter variable\">-n</span> <span class=\"token string\">\"48\"</span> data.txt<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h4 id=\"jing-que-pi-pei\">精确匹配</h4>\n<p>在上一例中，抽取字符串“48”，返回结果包含诸如 484 和 483 等包含“48”的 其他字符串，实际上应精确抽取只包含 48 的各行。注意在每个匹配模式中抽取字符串后有一个 Tab 键，所以应操作如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 使用grep抽取精确匹配的方式是在抽取字符串后加”\\>”。</span>\n<span class=\"token function\">grep</span> <span class=\"token string\">\"48\\>\"</span> data.txt<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<h4 id=\"mo-shi-chu-xian-ji-lu\">模式出现机率</h4>\n<p><img src=\"/post/Linux%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C.htm/X%5BRQMCV9S8%60UK%25MU6I9N0LO.png\" alt></p>\n<p>抽取包含数字 4 至少重复出现两次的所有行</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 以前可以这么写</span>\n<span class=\"token function\">grep</span> <span class=\"token string\">'44'</span> data.txt\n<span class=\"token comment\"># 也可以这么写。</span>\n<span class=\"token function\">grep</span> <span class=\"token string\">'4\\&#123;2,\\&#125;'</span> data.txt<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"yu-huo-mo-shi\">与/或模式</h4>\n<p>grep 命令加-E 参数，这一扩展允许使用扩展模式匹配。</p>\n<p>案例：要获取城市代码为 219 或 216。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 这么写不行。</span>\n<span class=\"token function\">grep</span> <span class=\"token string\">\"[219][216]\"</span> data.txt\n<span class=\"token comment\">#</span>\n<span class=\"token function\">grep</span> <span class=\"token parameter variable\">-E</span> <span class=\"token string\">'219|216'</span> data.txt<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"cha-xun-wen-jian-ming\">查询文件名</h4>\n<p>有时候按照一定个格式去查找对应的文件，是一件很常用的使用场景，比如我们只是依稀记得 文件名，但是不知道它在哪里，这个时候就可以结合 grep 来进行查找。</p>\n<p>案例 1：查找系统中所有的文件，并且这些文件的文件名要求：”以小写字母开头，然后接数字者 字母最多十位，然后一个点，文件的后缀是 2 到 4 位的小字母“，比如”test1.docx“</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\"># 第一步：查询到文件</span>\n<span class=\"token function\">find</span> / <span class=\"token parameter variable\">-type</span> f\n<span class=\"token comment\"># 第二步：获取文件的文件名</span>\n<span class=\"token function\">find</span> / <span class=\"token parameter variable\">-type</span> f <span class=\"token parameter variable\">-exec</span> <span class=\"token function\">basename</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span> <span class=\"token punctuation\">\\</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\"># 第三步：进行文件名的过滤。</span>\n<span class=\"token function\">find</span> / <span class=\"token parameter variable\">-type</span> f <span class=\"token parameter variable\">-exec</span> <span class=\"token function\">basename</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span> <span class=\"token punctuation\">\\</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> <span class=\"token string\">'[a-z][a-zA-Z0-9]\\&#123;1,9\\&#125;\\.\n[a-z]\\&#123;2,4\\&#125;'</span>\n<span class=\"token comment\"># 第4步：进行前后的限定。</span>\n<span class=\"token function\">find</span> / <span class=\"token parameter variable\">-type</span> f <span class=\"token parameter variable\">-exec</span> <span class=\"token function\">basename</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span> <span class=\"token punctuation\">\\</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> <span class=\"token string\">'^[a-z][a-zA-Z0-9]\\&#123;1,9\\&#125;\\.\n[a-z]\\&#123;2,4\\&#125;$'</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"lei-ming\">类名</h4>\n<p>我们上面查找文件的时候，文件名可以是数字或者大小写字母，我们写的正则表达式是”[a-zA-Z0-9]“，这种写法其实是比较麻烦的，grep 允许使用国际字符模式匹配或匹配模式的类名形式。</p>\n<h5 id=\"lei-ming-ji-qi-deng-jie-de-zheng-ze-biao-da-shi\">类名及其等价的正则表达式</h5>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">类</th>\n<th style=\"text-align:center\">等价的正则表达式</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">[[:upper:]]</td>\n<td style=\"text-align:center\">[A-Z]</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">[[:lower:]]</td>\n<td style=\"text-align:center\">[a-z]</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">[[:digit:]]</td>\n<td style=\"text-align:center\">[0-9]</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">[[:alnum:]]</td>\n<td style=\"text-align:center\">[0-9a-zA-Z</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">[[:alpha:]]</td>\n<td style=\"text-align:center\">[a-zA-Z]</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">[[:space:]]</td>\n<td style=\"text-align:center\">空格或 tab 键</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"grep-ming-ling-de-ying-yong\">grep 命令的应用</h4>\n<p>要查询其他用户和其他用户组成员有可执行权限的文件集合。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">ls</span> <span class=\"token parameter variable\">-al</span> <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> <span class=\"token string\">'^\\-.....x..x'</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h3 id=\"mark-awk-mark\"><mark>awk</mark></h3>\n<p>awk 是所有 shell 文本过滤工具</p>\n<h4 id=\"yu-fa-1\">语法</h4>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">awk</span> <span class=\"token punctuation\">[</span>OPTION<span class=\"token punctuation\">]</span> <span class=\"token string\">'script'</span> <span class=\"token assign-left variable\">var</span><span class=\"token operator\">=</span>value file<span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">></span> filename<span class=\"token punctuation\">]</span>\n或\n<span class=\"token function\">awk</span> <span class=\"token punctuation\">[</span>OPTION<span class=\"token punctuation\">]</span> <span class=\"token parameter variable\">-f</span> scriptfile <span class=\"token assign-left variable\">var</span><span class=\"token operator\">=</span>value file<span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">></span> filename<span class=\"token punctuation\">]</span>\n\nOPTION:\n\t<span class=\"token parameter variable\">-F</span> fs:指定输入文件折分隔符，fs是一个字符串或者是一个正则表达式，如-F:。\n\t<span class=\"token parameter variable\">-v</span> <span class=\"token assign-left variable\">var</span><span class=\"token operator\">=</span>value:赋值一个用户定义变量。\n\t<span class=\"token parameter variable\">-f</span> scripfile:从脚本文件中读取awk命令。\n\t<span class=\"token parameter variable\">-W</span> re-interval:允许间隔正则表达式的使用，参考<span class=\"token punctuation\">(</span>grep中的Posix字符类<span class=\"token punctuation\">)</span>，如括号表达式<span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span>:alpha:<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>\n\n\tfile<span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span>:可以是一个文件,也可以是多个文件\n\t<span class=\"token punctuation\">[</span><span class=\"token operator\">></span> filename<span class=\"token punctuation\">]</span>:将前面输出在控制台的内容存入指定文件中<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>如果设置了 <code>-F</code> 选项，则 awk 每次读一条记录或一行，并使用指定的 <code>分隔符</code> 分隔指定域，如果未设 置-F 选项，awk 假定 <code>空格</code> 为域分隔符，以这种格式读取数据，一直这么读取数据一直到文件末尾。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token number\">48</span> Dec 3BC1997 LPSX <span class=\"token number\">68.00</span> LVX2A <span class=\"token number\">138</span>\n<span class=\"token number\">483</span> Sept 5AP1996 USP <span class=\"token number\">65.00</span> LVX2c <span class=\"token number\">189</span>\n<span class=\"token number\">47</span> Oct 3ZL1998 LPSX <span class=\"token number\">43.00</span> KVM9D <span class=\"token number\">512</span>\n<span class=\"token number\">219</span> dec 2CC1999 CAD <span class=\"token number\">23.00</span> PLV2C <span class=\"token number\">68</span>\n<span class=\"token number\">484</span> nov 7PL1996 CAD <span class=\"token number\">49.00</span> PLV2C <span class=\"token number\">234</span>\n<span class=\"token number\">483</span> may 5PA1998 USP <span class=\"token number\">37.00</span> KVM9D <span class=\"token number\">644</span>\n<span class=\"token number\">216</span> sept 3ZL1998 USP <span class=\"token number\">86.00</span> KVM9E <span class=\"token number\">234</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>参照上表，awk 每次在文件中读一行，找到域分隔符（这里是符号 <code>'\\t'</code> ），设置其为域 n，直至一 新行（这里是缺省记录分隔符），然后，划分这一行作为一条<code>记录</code>，接着 awk 再次启动下一行读进程。</p>\n<h4 id=\"mo-shi-he-dong-zuo\">模式和动作</h4>\n<p>awk 语句都由<code>模式</code> 和<code> 动作</code> 组成。在一个 awk 脚本中可能有许多语句，模式部分决定动作语句何时 触发，模式部分可以省略。处理即对数据进行的操作。</p>\n<p>模式可以是任何条件语句或复合语句或正则表达式。模式包括两个特殊字段 <code>BEGIN </code>和 <code>END</code> 。使用 BEGIN 语句设置<code> 计数</code> 和 <code>打印头</code> 。BEGIN 语句使用在任何文本浏览动作之前，之后文本浏览动作依据 输入文件开始执行。END 语句用来在 awk 完成文本浏览动作后 <code>输出文本总数</code> 和 <code>结尾状态标志</code> 。如果 不特别指明模式， awk 总是匹配或打印行数。</p>\n<p>实际动作在大括号 <code>&#123;&#125; </code>内指明。动作大多数用来打印，但是还有些更长的代码诸如 if 和循环 （looping）语句及循环退出结构。如果不指明采取动作，awk 将打印出所有浏览出来的记录。</p>\n<h4 id=\"yu-he-ji-lu\">域和记录</h4>\n<p>awk 执行时，其浏览域标记为 $1，$2…$n。这种方法称为域标识。使用这些域标识将更容易对域 进行进一步处理。使用$1,$2 表示参照第 1 和第 2 域，注意这里用逗号做域分隔。如果希望打印一个有 7 个域的记录的所有域，不必指明$1, $2, $3, $4, $5, $6, $7，可使用$0 即所有域。</p>\n<p>如果要打印一个域或所有域，使用 print 命令，其这是一个 awk 动作（动作语法用大括号‘{}’括起 来）。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#以tab来切割data.txt，然后获取第1个域的值</span>\n<span class=\"token function\">awk</span> <span class=\"token parameter variable\">-F</span> <span class=\"token string\">'\\t'</span> <span class=\"token string\">'&#123;print $1&#125;'</span> data.txt\n\n<span class=\"token comment\">#由于tab其实也是空格，所以我们不指定-F也行，所以也可以这么写。</span>\n<span class=\"token function\">awk</span> <span class=\"token parameter variable\">-F</span> <span class=\"token string\">'&#123;print $1&#125;'</span> data.txt\n\n<span class=\"token comment\">#在上面的例子为基础进行修改，我们取第一，第二，第三个域。</span>\n<span class=\"token function\">awk</span> <span class=\"token string\">'&#123;print $1,$2,$3&#125;'</span> data.txt\n\n\n\nps:<span class=\"token variable\">$0</span>表示所有域<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h5 id=\"tou-bu-yu-wei-bu\">头部与尾部</h5>\n<p>我们上面使用了 TAB 来进行域之间的分隔，也可以为输出文本加入信息头与尾信息，打印信息头放 置在 BEGIN 模式部分，因为打印信息头被界定为一个动作，必须用大括号括起来。如果要打印尾部信 息我们可以使用 END 语句。END 语句在所有文本处理动作执行完之后才被执行。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#打印月份与价格的域信息，并且添加头与尾部的信息</span>\n<span class=\"token function\">awk</span> <span class=\"token string\">'BEGIN &#123;print \"Month\\tPrice\"&#125; &#123;print $2\"\\t\"$5&#125;'</span> data.txt\n\n<span class=\"token comment\">#加入尾部信息：</span>\n<span class=\"token function\">awk</span> <span class=\"token string\">'BEGIN &#123;print \"Month\\tPrice\"&#125; &#123;print $2\"\\t\"$4&#125; END &#123;print \"end...\"&#125;'</span> data.txt<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>当第一次使用 awk 时，如果出现错误可能不知所措，但是使用久了就会发现，可总结出以下规则， 可以帮助我们减少错误的出现。</p>\n<ol>\n<li class=\"lvl-3\">\n<p>确保整个 awk 命令用单引号括起来。</p>\n</li>\n<li class=\"lvl-3\">\n<p>确保命令内所有引号成对出现。</p>\n</li>\n<li class=\"lvl-3\">\n<p>确保用花括号括起动作语句，用圆括号括起条件语句。</p>\n</li>\n</ol>\n<h4 id=\"awk-zhong-de-zheng-ze-biao-da-shi\">AWK 中的正则表达式</h4>\n<h5 id=\"yuan-zi-fu\">元字符</h5>\n<p>awk 中正则表达式匹配操作中经常用到的字符，这些字符是有特殊含义的，</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token punctuation\">\\</span> ^ $ <span class=\"token builtin class-name\">.</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> * + ?<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>这里有两个字符前面的章节提到过讲到，注意它们只适用于 awk。</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">元字符</th>\n<th style=\"text-align:center\">说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">+</td>\n<td style=\"text-align:center\">使用+匹配一个或多个字符。</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">?</td>\n<td style=\"text-align:center\">匹配模式出现频率。例如使用/XY?Z/匹配 XYZ 或 XZ。</td>\n</tr>\n</tbody>\n</table>\n<h5 id=\"tiao-jian-cao-zuo-fu\">条件操作符</h5>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">操作符</th>\n<th style=\"text-align:center\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">&lt;</td>\n<td style=\"text-align:center\">小于</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">&gt;</td>\n<td style=\"text-align:center\">大于</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">&lt;=</td>\n<td style=\"text-align:center\">小于等于</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">&gt;=</td>\n<td style=\"text-align:center\">大于等于</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">==</td>\n<td style=\"text-align:center\">等于</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">!=</td>\n<td style=\"text-align:center\">不等于</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">~</td>\n<td style=\"text-align:center\">匹配正则表达式</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">!~</td>\n<td style=\"text-align:center\">不匹配正则表达式(与上面条件相反)</td>\n</tr>\n</tbody>\n</table>\n<p>为使域匹配正则表达式，使用符号‘～’后紧跟正则表达式，也可以用 i f 语句。awk 中 if 后面的条件用 ()括起来。</p>\n<p>案例：查询月份为”sept“的行信息。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">awk</span> <span class=\"token string\">'&#123; if($2~/sept/) print $0 &#125;'</span> data.txt<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>精确匹配 48，使用等号==，并用单引号括起条件。例如$3 == “48”，这样确保只有 48 号得以匹 配，其余则不行</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">awk</span> <span class=\"token string\">'&#123; if($1==\"48\") print $0 &#125;'</span> data.txt\n或\n<span class=\"token function\">awk</span> <span class=\"token string\">'$1==\"48\" &#123; print $0 &#125;'</span> data.txt<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p>上面我们通过/[Ss]ept/实现了 Sept 与 sept 的匹配，我们其实也可以使用 <code>或</code>关系匹配 ，使用竖线 符<code>|</code>，意为匹配<code>|</code> 两边模式之一。<strong><em>注意：使用竖线符时，语句必须用圆括号括起来。</em></strong></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">awk</span> <span class=\"token string\">'&#123; if($2~/(Sept|sept)/) print $0 &#125;'</span> data.txt\n<span class=\"token comment\"># 或者</span>\n<span class=\"token function\">awk</span> <span class=\"token string\">'$2~/(Sept|sept)/'</span> data.txt\n<span class=\"token comment\"># 或者</span>\n<span class=\"token function\">awk</span> <span class=\"token string\">'&#123; if($2 == \"Sept\" || $2 == \"sept\") print $0 &#125;'</span> data.txt\n<span class=\"token comment\"># 或者</span>\n<span class=\"token function\">awk</span> <span class=\"token string\">'$2 == \"Sept\" || $2 == \"sept\"'</span> data.txt\n\n//不加任何动作默认输出所有匹配<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>匹配价格大于 50 的，并且库存大于 200 的。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">awk</span> <span class=\"token string\">'&#123; if($5 > 50 &amp;&amp; $7 > 200) print $0 &#125;'</span> data.txt\n<span class=\"token comment\"># 或者</span>\n<span class=\"token function\">awk</span> <span class=\"token string\">'$5 > 50 &amp;&amp; $7 > 200'</span> data.txt<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<h5 id=\"awk-nei-zhi-bian-liang\">awk 内置变量</h5>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">变量名</th>\n<th style=\"text-align:center\">说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">ARGC</td>\n<td style=\"text-align:center\">命令行参数个数</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ARGV</td>\n<td style=\"text-align:center\">命令行参数排列</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ENVIRON</td>\n<td style=\"text-align:center\">支持队列中系统环境变量的使用</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">FILENAME</td>\n<td style=\"text-align:center\">awk 浏览的文件名</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">FNR</td>\n<td style=\"text-align:center\">浏览文件的记录数</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">FS</td>\n<td style=\"text-align:center\">设置输入域分隔符，等价于命令行-F 选项</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">NF</td>\n<td style=\"text-align:center\">浏览记录的域个数(总共多少列)</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">NR</td>\n<td style=\"text-align:center\">已读的记录数(当前行号)</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">OFS</td>\n<td style=\"text-align:center\">输出域分隔符</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ORS</td>\n<td style=\"text-align:center\">输出记录分隔符</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">RS</td>\n<td style=\"text-align:center\">控制记录分隔符</td>\n</tr>\n</tbody>\n</table>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>ARGC 支持命令行中传入 awk 脚本的参数个数。ARGV 是 ARGC 的参数排列数组，其中每一元素表 示为 ARGV[n]，n 为期望访问的命令行参数。</p>\n</li>\n<li class=\"lvl-2\">\n<p>ENVIRON 支持系统设置的环境变量，要访问单独变量，使用实际变量名，例如： ENVIRON[“EDITOR”] =“Vi”。</p>\n</li>\n<li class=\"lvl-2\">\n<p>FILENAME 支持 awk 脚本实际操作的输入文件。因为 awk 可以同时处理许多文件，因此如果访问 了这个变量，将告之系统目前正在浏览的实际文件。</p>\n</li>\n<li class=\"lvl-2\">\n<p>FNR 支持 awk 目前操作的记录数。其变量值小于等于 NR。如果脚本正在访问许多文件，每一新 输入文件都将重新设置此变量。</p>\n</li>\n<li class=\"lvl-2\">\n<p>FS 用来在 awk 中设置域分隔符，与命令行中-F 选项功能相同。缺省情况下为空格。如果用逗号来 作域分隔符，设置 FS=“,”。</p>\n</li>\n<li class=\"lvl-2\">\n<p>NF 支持记录域个数，在记录被读之后再设置。</p>\n</li>\n<li class=\"lvl-2\">\n<p>OFS 允许指定输出域分隔符，缺省为空格。如果想设置为#，写入 OFS=“#”。</p>\n</li>\n<li class=\"lvl-2\">\n<p>ORS 为输出记录分隔符，缺省为新行（\\n）。</p>\n</li>\n<li class=\"lvl-2\">\n<p>RS 是记录分隔符，缺省为新行(\\n)。</p>\n</li>\n</ul>\n<p>测试 NR, NF, FILENAME 这几个内置变量的使用。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">awk</span> <span class=\"token string\">'&#123; print NR, NF, $0&#125; END&#123; print FILENAME &#125;'</span> data.txt<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"/post/Linux%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C.htm/Snipaste_2023-03-16_18-00-06.png\" alt></p>\n<p>之前有个案例是匹配价格大于五十的数据，具体如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">awk</span> <span class=\"token string\">'&#123; if($5 > 50) print $0 &#125;'</span> data.txt<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>有的时候有这一种情况，那就是如果由于数据不完整，某一行没有五个域，这个时候就会有问题， 这个时候我们就可以先通过 NF 来进行判断，代码可以改成这样：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">awk</span> <span class=\"token string\">'&#123; if(NF > 5 &amp;&amp; $5 > 50) print $0 &#125;'</span> data.txt\n或\n<span class=\"token function\">awk</span> <span class=\"token string\">'NF > 5 &amp;&amp; $5 > 50'</span> data.txt<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<h5 id=\"awk-cao-zuo-fu\">awk 操作符</h5>\n<p>在 awk 中使用操作符，基本表达式可以划分为数字型、字符串型、变量型、域及数组元素</p>\n<p><strong>数据准备</strong>：雇员(emp)信息，由于上面的案例数据有的力不从心，我们引入以前数据库里面的一份数据。</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">NO</th>\n<th style=\"text-align:center\">列名</th>\n<th style=\"text-align:center\">类型</th>\n<th style=\"text-align:center\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:center\">empno</td>\n<td style=\"text-align:center\">int</td>\n<td style=\"text-align:center\">雇员编号</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">2</td>\n<td style=\"text-align:center\">ename</td>\n<td style=\"text-align:center\">varchar(10)</td>\n<td style=\"text-align:center\">雇员姓名</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">3</td>\n<td style=\"text-align:center\">job</td>\n<td style=\"text-align:center\">varchar(9)</td>\n<td style=\"text-align:center\">职位</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">4</td>\n<td style=\"text-align:center\">mgr</td>\n<td style=\"text-align:center\">int</td>\n<td style=\"text-align:center\">雇员直属上司</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">5</td>\n<td style=\"text-align:center\">hiredate</td>\n<td style=\"text-align:center\">date</td>\n<td style=\"text-align:center\">雇员雇佣日期</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">6</td>\n<td style=\"text-align:center\">sal</td>\n<td style=\"text-align:center\">decimal(7,2)</td>\n<td style=\"text-align:center\">雇员的薪水，有五位整数两位小数组成</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">7</td>\n<td style=\"text-align:center\">comm</td>\n<td style=\"text-align:center\">decimal(7,2)</td>\n<td style=\"text-align:center\">雇员的佣金(提成)，有五位整数两位小数组成</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">8</td>\n<td style=\"text-align:center\">deptno</td>\n<td style=\"text-align:center\">int</td>\n<td style=\"text-align:center\">雇员所属的部门号</td>\n</tr>\n</tbody>\n</table>\n<p><strong>数据:</strong></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token number\">7369</span>,SMITH,CLERK,7902,1980-12-17,800.00,0,20\n<span class=\"token number\">7499</span>,ALLEN,SALESMAN,7698,1981-02-20,1600.00,300.00,30\n<span class=\"token number\">7521</span>,WARD,SALESMAN,7698,1981-02-22,1250.00,500.00,30\n<span class=\"token number\">7566</span>,JONES,MANAGER,7839,1981-04-02,2975.00,0,20\n<span class=\"token number\">7654</span>,MARTIN,SALESMAN,7698,1981-09-28,1250.00,1400.00,30\n<span class=\"token number\">7698</span>,BLAKE,MANAGER,7839,1981-05-01,2850.00,0,30\n<span class=\"token number\">7782</span>,CLARK,MANAGER,7839,1981-06-09,2450.00,0,10\n<span class=\"token number\">7788</span>,SCOTT,ANALYST,7566,1987-04-19,3000.00,0,20\n<span class=\"token number\">7839</span>,KING,PRESIDENT,,1981-11-17,5000.00,0,10\n<span class=\"token number\">7844</span>,TURNER,SALESMAN,7698,1981-09-08,1500.00,0.00,30\n<span class=\"token number\">7876</span>,ADAMS,CLERK,7788,1987-05-23,1100.00,0,20\n<span class=\"token number\">7900</span>,JAMES,CLERK,7698,1981-12-03,950.00,0,30\n<span class=\"token number\">7902</span>,FORD,ANALYST,7566,1981-12-03,3000.00,0,20\n<span class=\"token number\">7934</span>,MILLER,CLERK,7782,1982-01-23,1300.00,0,10<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><strong>设置域到域变量名</strong></p>\n<p>在 awk 中，设置有意义的域名是一种好习惯，在进行模式匹配或关系操作时更容易理解。一般的变 量名设置方式为 name=$n，这里 name 为引用的域变量名，n 为实际域号。例如设置学生域名为 name，年龄的域名为 age，操作为 name=$1; age=$2。注意分号的使用，它分隔 awk 命令。下面例 子中，重新赋值月份名域为 month，价格域为 price。查询价格大于 50 的记录，并最终打印月份和价格。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">awk</span> <span class=\"token string\">'&#123;if($5>50) print $2, $5 &#125;'</span> data.txt\n<span class=\"token comment\">#</span>\n<span class=\"token function\">awk</span> <span class=\"token string\">'&#123;month=$2; price=$5; if(price>50) print month, price &#125;'</span> data.txt<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p>也可以在 BEGIN 部分给变量赋值，然后再后面使用：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">awk</span> <span class=\"token string\">'&#123; if($5 > 50) print $0 &#125;'</span> data.txt\n\n<span class=\"token function\">awk</span> <span class=\"token string\">'BEGIN &#123; PRICE = 50 &#125; &#123; if($5 > PRICE) print $0 &#125;'</span> data.txt<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p><strong>修改数值域取值</strong></p>\n<p>当在 awk 中修改任何域时，重要的一点是要记住实际输入文件是不可修改的，修改的只是保存在缓 存里的 awk 复本。awk 会在变量 NR 或 NF 变量中反映出修改痕迹。为修改数值域，简单的给域标识重 赋新值，如：$1=$1+5，会将域$1 数值加 5</p>\n<h3 id=\"sort\">sort</h3>\n<p>sort 命令用于对文件内容进行排序，我们可以可以指定按指定的域来进行排序，也可以通过参 数来控制排序的规则。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">sort</span> <span class=\"token punctuation\">[</span>选项<span class=\"token punctuation\">]</span> 文件\n\n参数：\n-b：忽略每行前面开始出的空格字符。\n-c：检查内容有没有排序，没有输出意味着已经排序了。\n-d：排序时，处理英文字母、数字及空格字符外，忽略其他的字符。\n-M：将前面3个字母依照月份（比如：JAN）的缩写进行排序。\n-m：将几个排序好的文件进行合并。\n-n：按照数值的大小进行排序\n-o：<span class=\"token operator\">&lt;</span>输出文件<span class=\"token operator\">></span> 将排序后的结果存入指定的文件。\n-r：以倒序的形式来进行排序。\n-t：<span class=\"token operator\">&lt;</span>分隔字符<span class=\"token operator\">></span> 指定排序时所用的域的分隔符（默认是空格）。\n-h：以人类可视化的单位来进行排序（针对于文件大小单位：kB, MB, GB等）\n<span class=\"token punctuation\">[</span>-k field1<span class=\"token punctuation\">[</span>, field2<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>：按指定的列进行排序。<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h1 id=\"da-shu-ju\">大数据</h1>\n<h3 id=\"hdfs-de-ji-ben-cao-zuo\">HDFS 的基本操作</h3>\n<h4 id=\"kai-qi-guan-bi-fen-bu-shi\">开启/关闭分布式</h4>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">start-dfs.sh\nstop-dfs.sh<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<h4 id=\"zai-fen-bu-shi-wen-jian-xi-tong-zhong-chuang-jian-ying-she-wen-jian-jia\">在分布式文件系统中创建映射文件夹</h4>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">hdfs dfs <span class=\"token parameter variable\">-mkdir</span> Mapping_Folder_Path<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h4 id=\"zai-fen-bu-shi-wen-jian-xi-tong-zhong-chuang-jian-wen-jian\">在分布式文件系统中创建文件</h4>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">hdfs dfs <span class=\"token parameter variable\">-touchz</span> Mapping_Folder_Path/file_Name<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h4 id=\"cha-xun-wen-jian-lie-biao\">查询文件列表</h4>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">hdfs dfs <span class=\"token parameter variable\">-ls</span> Mapping_Folder_Path<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h4 id=\"cha-zhao-wen-jian\">查找文件</h4>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">hdfs dfs <span class=\"token parameter variable\">-find</span> Mapping_Folder_Path <span class=\"token parameter variable\">-name</span> 表达式\n例:\nhdfs dfs <span class=\"token parameter variable\">-find</span> /input <span class=\"token parameter variable\">-name</span> wc*   -- input映射文件夹中名字中带有wc的文件<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"da-yin-wen-jian\">打印文件</h4>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">hdfs dfs <span class=\"token parameter variable\">-cat</span> Mapping_Folder_Path/file_name<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h4 id=\"yi-dong-wen-jian-jia-wen-jian\">移动文件夹/文件</h4>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">hdfs dfs <span class=\"token parameter variable\">-mv</span> Source_Mapping_Folder_Path  target_Mapping_Folder_Path<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h4 id=\"shan-chu-wen-jian-jia-wen-jian\">删除文件夹/文件</h4>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">hdfs dfs <span class=\"token parameter variable\">-rm</span> <span class=\"token operator\">&lt;</span>-r<span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span>-skipTrash<span class=\"token operator\">></span> Mapping_Folder_Path/file_name\n<span class=\"token parameter variable\">-r</span> 递归删除\n<span class=\"token parameter variable\">-skipTrash</span> 彻底删除<span class=\"token punctuation\">(</span>不进垃圾桶<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"ba-ben-di-wen-jian-zhui-jia-dao-ying-she-wen-jian-mo-wei\">把本地文件追加到映射文件末尾</h4>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">hdfs dfs <span class=\"token parameter variable\">-appendToFile</span> localfile_Path/file_name Mapping_Folder_Path/file_name<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h4 id=\"shang-chuan-wen-jian-dao-fen-bu-shi-wen-jian-xi-tong-de-ying-she-wen-jian-jia\">上传文件到分布式文件系统的映射文件夹</h4>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">hdfs dfs <span class=\"token parameter variable\">-put</span> file_Name/file_Path Mapping_Folder_Path --本地文件复制上传\n\nhdfs dfs <span class=\"token parameter variable\">-movefromLocal</span> file_Name/file_Path Mapping_Folder_Path  --本地文件删除上传\n\n例: hdfs dfs <span class=\"token parameter variable\">-put</span> hello.txt /input<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"cong-fen-bu-shi-wen-jian-xi-tong-de-ying-she-wen-jian-jia-xia-zai-wen-jian-dao-ben-di-lu-jing\">从分布式文件系统的映射文件夹下载文件到本地路径</h4>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">hdfs dfs <span class=\"token parameter variable\">-get</span> Mapping_Folder_Path file_Name/file_Path --映射文件复制到本地路径<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n","text":"Linux 简介 Linux 系统的起源与发展 Linux 是一种免费使用和自由传播的类 UNIX 操作系统,是一个基于 POSIX 的多用户、多任务、支持多线程和多 CPU 的操作系统。它能运行主要的 Unix 工具软件、应用程序和网络协议。它支持 32 位和 64 位硬件。L...","link":"","photos":[],"count_time":{"symbolsCount":"68k","symbolsTime":"1:02"},"categories":[{"name":"运维","slug":"运维","count":2,"path":"api/categories/运维.json"},{"name":"Linux","slug":"运维/Linux","count":1,"path":"api/categories/运维/Linux.json"}],"tags":[{"name":"Linux","slug":"Linux","count":1,"path":"api/tags/Linux.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#linux-jian-jie\"><span class=\"toc-text\">Linux 简介</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#linux-xi-tong-de-qi-yuan-yu-fa-zhan\"><span class=\"toc-text\">Linux 系统的起源与发展</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#linux-xi-tong-de-jie-shao\"><span class=\"toc-text\">Linux 系统的介绍</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#linux-xi-tong-de-te-dian\"><span class=\"toc-text\">Linux 系统的特点</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#ji-ben-si-xiang\"><span class=\"toc-text\">基本思想</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#linux-xi-tong-de-zu-cheng\"><span class=\"toc-text\">Linux 系统的组成</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#nei-he\"><span class=\"toc-text\">内核</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#shell\"><span class=\"toc-text\">shell</span></a></li></ol></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#linux-de-ji-ben-cao-zuo\"><span class=\"toc-text\">Linux 的基本操作</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#wen-jian-xi-tong\"><span class=\"toc-text\">文件系统</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#ge-ge-xi-tong-wen-jian-jia-de-yi-yi\"><span class=\"toc-text\">各个系统文件夹的意义</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#xi-tong-ji-chu-ming-ling\"><span class=\"toc-text\">系统基础命令</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#cha-kan-xiu-gai-dang-qian-shi-jian\"><span class=\"toc-text\">查看&#x2F;修改当前时间</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#cha-kan-ming-ling-lei-xing\"><span class=\"toc-text\">查看命令类型</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#cha-kan-ming-ling-bang-zhu-wen-dang\"><span class=\"toc-text\">查看命令帮助文档</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#cha-kan-xi-tong-ji-chu-xin-xi\"><span class=\"toc-text\">查看系统基础信息</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#mark-cha-kan-li-shi-shu-ru-mark\"><span class=\"toc-text\">查看历史输入</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#zhu-xiao-yong-hu\"><span class=\"toc-text\">注销用户</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#mark-zhong-qi-yu-guan-ji-mark\"><span class=\"toc-text\">重启与关机</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#mark-zu-yong-hu-de-cao-zuo-mark\"><span class=\"toc-text\">组&#x2F;用户的操作</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#chuang-jian-zu\"><span class=\"toc-text\">创建组</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#shan-chu-zu\"><span class=\"toc-text\">删除组</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#chuang-jian-yong-hu\"><span class=\"toc-text\">创建用户</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#shan-chu-yong-hu\"><span class=\"toc-text\">删除用户</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#cha-kan-dang-qian-yong-hu-id\"><span class=\"toc-text\">查看当前用户 ID</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#xiu-gai-yong-hu-mi-ma\"><span class=\"toc-text\">修改用户密码</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#xiu-gai-yong-hu-xin-xi\"><span class=\"toc-text\">修改用户信息</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#qie-huan-yong-hu\"><span class=\"toc-text\">切换用户</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#xi-tong-gao-ji-ying-yong-yu-she-zhi\"><span class=\"toc-text\">系统高级应用与设置</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#xi-tong-xing-neng-fen-xi\"><span class=\"toc-text\">系统性能分析</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#uptime\"><span class=\"toc-text\">uptime</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#free\"><span class=\"toc-text\">free</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#top-zhi-ling\"><span class=\"toc-text\">top 指令</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#di-yi-xing-ren-wu-dui-lie-xin-xi-tong-uptime-ming-ling-de-zhi-xing-jie-guo\"><span class=\"toc-text\">第一行，任务队列信息，同 uptime 命令的执行结果</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#di-er-xing-tasks-ren-wu-jin-cheng\"><span class=\"toc-text\">第二行，Tasks — 任务（进程）</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#di-san-xing-cpu-zhuang-tai-xin-xi\"><span class=\"toc-text\">第三行，cpu 状态信息</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#di-si-xing-nei-cun-zhuang-tai\"><span class=\"toc-text\">第四行,内存状态</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#di-wu-xing-swap-jiao-huan-fen-qu-xin-xi\"><span class=\"toc-text\">第五行，swap 交换分区信息</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#di-liu-xing-kong-xing\"><span class=\"toc-text\">第六行，空行</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#di-qi-xing-yi-xia-ge-jin-cheng-ren-wu-de-zhuang-tai-jian-kong\"><span class=\"toc-text\">第七行以下：各进程（任务）的状态监控</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#top-zhi-ling-de-xiang-guan-can-shu\"><span class=\"toc-text\">top 指令的相关参数</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#df\"><span class=\"toc-text\">df</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#mark-fang-huo-qiang-mark\"><span class=\"toc-text\">防火墙</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#ji-ben-cao-zuo\"><span class=\"toc-text\">基本操作</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#kai-qi-duan-kou\"><span class=\"toc-text\">开启端口</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#xi-tong-de-qi-dong-yu-pei-zhi\"><span class=\"toc-text\">系统的启动与配置</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#mark-xi-tong-de-yun-xing-ji-bie-mark\"><span class=\"toc-text\">系统的运行级别</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#strong-cha-kan-xi-tong-mo-ren-yun-xing-ji-bie-strong\"><span class=\"toc-text\">查看系统默认运行级别</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#she-zhi-xi-tong-yun-xing-ji-bie\"><span class=\"toc-text\">设置系统运行级别</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#systemctl-she-zhi\"><span class=\"toc-text\">systemctl 设置</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#zhong-zhi-ruan-lian-jie-wen-jian\"><span class=\"toc-text\">重置软链接文件</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#wang-luo\"><span class=\"toc-text\">网络</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#wang-qia-de-pei-zhi\"><span class=\"toc-text\">网卡的配置</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#wang-qia-pei-zhi-wen-jian\"><span class=\"toc-text\">网卡配置文件</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#ifconfig-ming-ling\"><span class=\"toc-text\">ifconfig 命令</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#strong-ifdown-strong\"><span class=\"toc-text\">ifdown</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#ifup\"><span class=\"toc-text\">ifup</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#ping\"><span class=\"toc-text\">ping</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#ruan-jian-de-an-zhuang\"><span class=\"toc-text\">软件的安装</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#wen-jian-de-xia-zai\"><span class=\"toc-text\">文件的下载</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#wget\"><span class=\"toc-text\">wget</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#curl\"><span class=\"toc-text\">curl</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#red-hat\"><span class=\"toc-text\">RedHat</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#mark-rpm-mark\"><span class=\"toc-text\">rpm</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#mark-yum-mark\"><span class=\"toc-text\">yum</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#debian-ubuntu\"><span class=\"toc-text\">Debian、Ubuntu</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#dpkg\"><span class=\"toc-text\">dpkg</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#apt\"><span class=\"toc-text\">apt</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#mark-gua-zai-mark\"><span class=\"toc-text\">挂载</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#gua-zai-dian\"><span class=\"toc-text\">挂载点</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#fdisk\"><span class=\"toc-text\">fdisk</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#parted\"><span class=\"toc-text\">parted</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#1-lie-chu-fen-qu\"><span class=\"toc-text\">1、列出分区</span></a></li></ol></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#2-da-kai-cun-chu-she-bei\"><span class=\"toc-text\">2、打开存储设备</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#3-she-ding-fen-qu-biao\"><span class=\"toc-text\">3、 设定分区表</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#4-jian-cha-fen-qu-biao\"><span class=\"toc-text\">4、 检查分区表</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#5-huo-qu-bang-zhu\"><span class=\"toc-text\">5、 获取帮助</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#6-chuang-jian-fen-qu\"><span class=\"toc-text\">6、 创建分区</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#7-bao-cun-tui-chu\"><span class=\"toc-text\">7、 保存退出</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#mount\"><span class=\"toc-text\">mount</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#gua-zai-u-pan\"><span class=\"toc-text\">挂载 u 盘</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#umount\"><span class=\"toc-text\">umount</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#fu-wu\"><span class=\"toc-text\">服务</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#strong-fu-wu-de-gai-nian-strong\"><span class=\"toc-text\">服务的概念</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#strong-fu-wu-de-fen-lei-strong\"><span class=\"toc-text\">服务的分类</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#strong-fu-wu-de-qi-dong-jiao-ben-strong\"><span class=\"toc-text\">服务的启动脚本</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#strong-systemctl-ming-ling-strong\"><span class=\"toc-text\">systemctl 命令</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#she-zhi-fu-wu-zi-qi-dong\"><span class=\"toc-text\">设置服务自启动</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#systemctl-she-zhi-zi-qi-dong\"><span class=\"toc-text\">systemctl 设置自启动</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#mark-jin-cheng-mark\"><span class=\"toc-text\">进程</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#strong-jin-cheng-de-gai-nian-strong\"><span class=\"toc-text\">进程的概念</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#strong-jin-cheng-de-fen-lei-strong\"><span class=\"toc-text\">进程的分类</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#jin-cheng-de-cha-kan\"><span class=\"toc-text\">进程的查看</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#ps\"><span class=\"toc-text\">ps</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#zhong-zhi-jin-cheng\"><span class=\"toc-text\">终止进程</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#cha-kan-bei-wen-jian-bei-na-ge-jin-cheng-zhan-yong-tuo-zhan\"><span class=\"toc-text\">查看被文件被哪个进程占用(拓展)</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#lsof\"><span class=\"toc-text\">lsof</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#shi-yong-wen-jian-huo-wen-jian-jie-gou-shi-bie-jin-cheng\"><span class=\"toc-text\">使用文件或文件结构识别进程</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#fuser\"><span class=\"toc-text\">fuser</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#sha-si-zhi-ding-yong-hu-de-suo-you-jin-cheng\"><span class=\"toc-text\">杀死指定用户的所有进程</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#shell-1\"><span class=\"toc-text\">shell</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#mark-echo-mark\"><span class=\"toc-text\">echo</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#mark-hou-tai-yun-xing-ren-wu-mark\"><span class=\"toc-text\">后台运行任务</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#ren-wu-ri-zhi-da-yin\"><span class=\"toc-text\">任务日志打印</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#nohup\"><span class=\"toc-text\">nohup</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#mark-chuang-jian-ding-shi-ren-wu-mark\"><span class=\"toc-text\">创建定时任务</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#cron-he-crontab\"><span class=\"toc-text\">cron 和 crontab</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#crontab-ming-ling\"><span class=\"toc-text\">crontab 命令</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#chuang-jian-xin-de-crontab\"><span class=\"toc-text\">创建新的 crontab</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#at\"><span class=\"toc-text\">at</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#yu-fa\"><span class=\"toc-text\">语法</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#at-ti-jiao-ming-ling-huo-jiao-ben\"><span class=\"toc-text\">at 提交命令或脚本</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#lie-chu-suo-ti-jiao-de-zuo-ye\"><span class=\"toc-text\">列出所提交的作业</span></a></li></ol></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#mark-wen-jian-mark\"><span class=\"toc-text\">文件</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#mark-wen-jian-de-ji-ben-shu-xing-mark\"><span class=\"toc-text\">文件的基本属性</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#mark-wei-wen-jian-tian-jia-ruan-ying-lian-jie-mark\"><span class=\"toc-text\">为文件添加软&#x2F;硬链接</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#mark-xiu-gai-wen-jian-quan-xian-mark\"><span class=\"toc-text\">修改文件权限</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#mark-xiu-gai-wen-jian-suo-shu-yong-hu-zu-mark\"><span class=\"toc-text\">修改文件所属用户&#x2F;组</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#mark-cha-kan-dang-qian-mu-lu-jue-dui-lu-jing-mark\"><span class=\"toc-text\">查看当前目录绝对路径</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#kao-bei-wen-jian-wen-jian-jia-dao-zhi-ding-mu-lu\"><span class=\"toc-text\">拷贝文件&#x2F;文件夹到指定目录</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#mark-kao-bei-wen-jian-dao-yuan-cheng-fu-wu-qi-mark\"><span class=\"toc-text\">拷贝文件到远程服务器</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#jian-qie-wen-jian-wen-jian-jia\"><span class=\"toc-text\">剪切文件&#x2F;文件夹</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#cha-kan-dang-qian-mu-lu-xia-de-wen-jian-wen-jian-jia-xin-xi\"><span class=\"toc-text\">查看当前目录下的文件&#x2F;文件夹信息</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#mark-chuang-jian-wen-jian-wen-jian-jia-mark\"><span class=\"toc-text\">创建文件&#x2F;文件夹</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#mark-shan-chu-wen-jian-jia-wen-jian-mark\"><span class=\"toc-text\">删除文件夹&#x2F;文件</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#tong-ji-mu-lu-wen-jian-da-xiao\"><span class=\"toc-text\">统计目录&#x2F;文件大小</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#mark-cha-zhao-wen-jian-mark\"><span class=\"toc-text\">查找文件</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#find\"><span class=\"toc-text\">find</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#locate\"><span class=\"toc-text\">locate</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#mark-guan-dao-fu-mark\"><span class=\"toc-text\">管道符</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#cha-kan-wen-jian\"><span class=\"toc-text\">查看文件</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#cha-kan-wen-jian-lei-xing\"><span class=\"toc-text\">查看文件类型</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#mark-cha-zhao-wen-jian-wei-zhi-mark\"><span class=\"toc-text\">查找文件位置</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#which\"><span class=\"toc-text\">which</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#whereis\"><span class=\"toc-text\">whereis</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#mark-cha-kan-xiao-wen-jian-nei-rong-bing-da-yin-dao-kong-zhi-tai-mark\"><span class=\"toc-text\">查看(小)文件内容并打印到控制台</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#mark-cha-kan-da-wen-jian-nei-rong-bing-da-yin-dao-kong-zhi-tai-mark\"><span class=\"toc-text\">查看(大)文件内容并打印到控制台</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#mark-cha-kan-wen-jian-tou-wei-mark\"><span class=\"toc-text\">查看文件头&#x2F;尾</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#mark-cha-kan-wen-jian-wei-mark\"><span class=\"toc-text\">查看文件尾</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#tong-ji-wen-jian-xing-shu-dan-ci-shu-zi-jie-shu\"><span class=\"toc-text\">统计文件行数&#x2F;单词数&#x2F;字节数</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#bian-ji-wen-jian\"><span class=\"toc-text\">编辑文件</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#chuang-jian-wen-jian-xiu-gai-wen-jian-xiu-gai-shi-jian\"><span class=\"toc-text\">创建文件&#x2F;修改文件修改时间</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#wen-jian-de-gui-dang\"><span class=\"toc-text\">文件的归档</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#gzip\"><span class=\"toc-text\">gzip</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#mark-tar-mark\"><span class=\"toc-text\">tar</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#mark-wen-ben-de-cao-zuo-mark\"><span class=\"toc-text\">文本的操作</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#zheng-ze-biao-da-shi\"><span class=\"toc-text\">正则表达式</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#yuan-zi-fu-ji\"><span class=\"toc-text\">元字符集</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#mark-grep-mark\"><span class=\"toc-text\">grep</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#pattern-zheng-ze-biao-da-shi-zhu-yao-can-shu\"><span class=\"toc-text\">pattern 正则表达式主要参数</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#shuang-yin-hao-yin-yong\"><span class=\"toc-text\">双引号引用</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#cha-xun-duo-ge-wen-jian\"><span class=\"toc-text\">查询多个文件</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#xing-pi-pei-shu\"><span class=\"toc-text\">行匹配数</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#xian-shi-xing-shu-ju\"><span class=\"toc-text\">显示行数据</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#jing-que-pi-pei\"><span class=\"toc-text\">精确匹配</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#mo-shi-chu-xian-ji-lu\"><span class=\"toc-text\">模式出现机率</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#yu-huo-mo-shi\"><span class=\"toc-text\">与&#x2F;或模式</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#cha-xun-wen-jian-ming\"><span class=\"toc-text\">查询文件名</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#lei-ming\"><span class=\"toc-text\">类名</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#lei-ming-ji-qi-deng-jie-de-zheng-ze-biao-da-shi\"><span class=\"toc-text\">类名及其等价的正则表达式</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#grep-ming-ling-de-ying-yong\"><span class=\"toc-text\">grep 命令的应用</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#mark-awk-mark\"><span class=\"toc-text\">awk</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#yu-fa-1\"><span class=\"toc-text\">语法</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#mo-shi-he-dong-zuo\"><span class=\"toc-text\">模式和动作</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#yu-he-ji-lu\"><span class=\"toc-text\">域和记录</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#tou-bu-yu-wei-bu\"><span class=\"toc-text\">头部与尾部</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#awk-zhong-de-zheng-ze-biao-da-shi\"><span class=\"toc-text\">AWK 中的正则表达式</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#yuan-zi-fu\"><span class=\"toc-text\">元字符</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#tiao-jian-cao-zuo-fu\"><span class=\"toc-text\">条件操作符</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#awk-nei-zhi-bian-liang\"><span class=\"toc-text\">awk 内置变量</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#awk-cao-zuo-fu\"><span class=\"toc-text\">awk 操作符</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#sort\"><span class=\"toc-text\">sort</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#da-shu-ju\"><span class=\"toc-text\">大数据</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#hdfs-de-ji-ben-cao-zuo\"><span class=\"toc-text\">HDFS 的基本操作</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#kai-qi-guan-bi-fen-bu-shi\"><span class=\"toc-text\">开启&#x2F;关闭分布式</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#zai-fen-bu-shi-wen-jian-xi-tong-zhong-chuang-jian-ying-she-wen-jian-jia\"><span class=\"toc-text\">在分布式文件系统中创建映射文件夹</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#zai-fen-bu-shi-wen-jian-xi-tong-zhong-chuang-jian-wen-jian\"><span class=\"toc-text\">在分布式文件系统中创建文件</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#cha-xun-wen-jian-lie-biao\"><span class=\"toc-text\">查询文件列表</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#cha-zhao-wen-jian\"><span class=\"toc-text\">查找文件</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#da-yin-wen-jian\"><span class=\"toc-text\">打印文件</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#yi-dong-wen-jian-jia-wen-jian\"><span class=\"toc-text\">移动文件夹&#x2F;文件</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#shan-chu-wen-jian-jia-wen-jian\"><span class=\"toc-text\">删除文件夹&#x2F;文件</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#ba-ben-di-wen-jian-zhui-jia-dao-ying-she-wen-jian-mo-wei\"><span class=\"toc-text\">把本地文件追加到映射文件末尾</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#shang-chuan-wen-jian-dao-fen-bu-shi-wen-jian-xi-tong-de-ying-she-wen-jian-jia\"><span class=\"toc-text\">上传文件到分布式文件系统的映射文件夹</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#cong-fen-bu-shi-wen-jian-xi-tong-de-ying-she-wen-jian-jia-xia-zai-wen-jian-dao-ben-di-lu-jing\"><span class=\"toc-text\">从分布式文件系统的映射文件夹下载文件到本地路径</span></a></li></ol></li></ol></li></ol></li></ol>","author":{"name":"ND_LJQ","slug":"blog-author","avatar":"static/img/head.jpg","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Redis6.0学习笔记","uid":"dfbecd5a2d7d99309d0ce29d3d8528f9","slug":"Redis6.0学习笔记","date":"2023-07-19T11:54:00.000Z","updated":"2023-07-19T12:25:21.369Z","comments":true,"path":"api/articles/Redis6.0学习笔记.json","keywords":null,"cover":[],"text":"Redis 是典型的 NoSQL 数据库，支持多种数据结构类型。设计思想是：单线程+多路 IO 复用技术 redis 官方介绍 Redis 是一个开源的 key-value 存储系统。和 Memcached 类似，它支持存储的 value 类型相对更多，包括 string、lis...","link":"","photos":[],"count_time":{"symbolsCount":"57k","symbolsTime":"51 mins."},"categories":[{"name":"NoSQL","slug":"NoSQL","count":2,"path":"api/categories/NoSQL.json"}],"tags":[{"name":"Redis","slug":"Redis","count":1,"path":"api/tags/Redis.json"}],"author":{"name":"ND_LJQ","slug":"blog-author","avatar":"static/img/head.jpg","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"docker的基本使用","uid":"e7498051f03c6ed58194e6874f009871","slug":"docker的基本使用","date":"2023-07-18T05:39:37.000Z","updated":"2023-07-18T05:55:19.043Z","comments":true,"path":"api/articles/docker的基本使用.json","keywords":null,"cover":[],"text":"Docker的基本使用 docker的意思是容器,是基于Go语言的轻量级的虚拟机 Ubuntu安装Docker sudo apt install docker.io #也可以使用wget使用官方脚本来进行安装 curl -fsSL https://get.docker.com |...","link":"","photos":[],"count_time":{"symbolsCount":"11k","symbolsTime":"10 mins."},"categories":[{"name":"运维","slug":"运维","count":2,"path":"api/categories/运维.json"},{"name":"Docker","slug":"运维/Docker","count":1,"path":"api/categories/运维/Docker.json"}],"tags":[{"name":"Docker","slug":"Docker","count":1,"path":"api/tags/Docker.json"}],"author":{"name":"ND_LJQ","slug":"blog-author","avatar":"static/img/head.jpg","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}